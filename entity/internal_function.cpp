/*
Copyright 2017 Houzz, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#include "internal_function.h"
#include "global_function_table.h"
#include "entity/function.h"
#include "entity/class_repo.h"
#include "entity/clazz.h"
#include "type/tap_type.h"
#include "type/any_tap_type.h"
#include "util/type_string_parser.h"
#include "parser/location.h"
#include <cassert>
#include <string>
#include <vector>
#include <glog/logging.h>
#include <folly/String.h>

using namespace std;

namespace Tap {

static void f(const string& funcName, const string& funcDesc) {
  // LOG(INFO) << "processing func name:" << funcName;
  int len = funcDesc.size();
  assert(len > 2 && funcDesc[0] == '[' && funcDesc[len-1] == ']');
  string tmpDesc = funcDesc.substr(1, len-2);
  vector<string> v;
  folly::split(",", tmpDesc, v);
  assert(v.size() > 0);
  string returnTypeStr = v[0].substr(1, v[0].size()-2);
  // LOG(INFO) << "processing return type str: " << returnTypeStr;
  TypeStringParser typeStringParser{returnTypeStr};
  TapType *returnType = returnTypeStr.empty() ?
                        AnyTapType::getInstance() : typeStringParser.parse();
  vector<TapType*> args;
  int reqCount = 0;
  for (int i = 1 ; i < v.size() ; ++i) {
    vector<string> sv;
    folly::split("=>", v[i], sv);
    assert(sv.size() == 2);
    string paramName = sv[0];
    bool optional = (paramName[paramName.size()-2] == '=');
    string typeStr = sv[1].substr(1, sv[1].size()-2);
    typeStringParser.reset(typeStr);
    TapType *argType = typeStr.empty() ? AnyTapType::getInstance() : typeStringParser.parse();
    if (!optional) ++reqCount;
    args.push_back(argType);
  }
  auto funcEntity = make_shared<Function>(args, returnType, reqCount, HPHP::Location::Range());
  
  int idx = funcName.find("::");
  if (idx == string::npos) {
    GlobalFunctionTable::getInstance().addPlainFunction(funcName, funcEntity, true /* ignoreDup */);
  } else {
    string className = funcName.substr(0, idx);
    string methodName = funcName.substr(idx+2);
    auto clazzPtr = ClassRepo::getInstance().getClazz(className);
    if (clazzPtr) {
      clazzPtr->addMethod(methodName, funcEntity);
    } else {
      auto clazzPtr = make_shared<Clazz>(className, HPHP::Location::Range());
      clazzPtr->addMethod(methodName, funcEntity);
      ClassRepo::getInstance().addClazz(className, clazzPtr);
    }
  }
}

void InternalFunction::init() {
f("abs", "['int|float','number'=>'int|float']");
f("accelerator_get_configuration", "['array']");
f("accelerator_get_scripts", "['array']");
f("accelerator_get_status", "['array','fetch_scripts'=>'bool']");
f("accelerator_reset", "['']");
f("acos", "['float','number'=>'float']");
f("acosh", "['float','number'=>'float']");
f("addcslashes", "['string','str'=>'string','charlist'=>'string']");
f("addFill", "['SWFFill','bitmap'=>'SWFBitmap','flags='=>'int']");
f("addFill", "['SWFFill','gradient'=>'SWFGradient','flags='=>'int']");
f("addslashes", "['string','str'=>'string']");
f("aggregate_methods_by_list", "['','any'=>'any','class_name'=>'string','methods_list'=>'array','exclude='=>'bool']");
f("aggregate_methods_by_regexp", "['','any'=>'any','class_name'=>'string','regexp'=>'string','exclude='=>'bool']");
f("aggregate_methods", "['','any'=>'any','class_name'=>'string']");
f("aggregate", "['','any'=>'any','class_name'=>'string']");
f("aggregate_properties_by_list", "['','any'=>'any','class_name'=>'string','properties_list'=>'array','exclude='=>'bool']");
f("aggregate_properties_by_regexp", "['','any'=>'any','class_name'=>'string','regexp'=>'string','exclude='=>'bool']");
f("aggregate_properties", "['','any'=>'any','class_name'=>'string']");
f("apache_child_terminate", "['bool']");
f("apache_getenv", "['string|false','variable'=>'string','walk_to_top='=>'bool']");
f("apache_get_modules", "['array']");
f("apache_get_version", "['string|false']");
f("apache_lookup_uri", "['any','filename'=>'string']");
f("apache_note", "['string|false','note_name'=>'string','note_value='=>'string']");
f("apache_request_headers", "['array|false']");
f("apache_reset_timeout", "['bool']");
f("apache_response_headers", "['array|false']");
f("apache_setenv", "['bool','variable'=>'string','value'=>'string','walk_to_top='=>'bool']");
f("apc_add", "['bool','key'=>'string','ttl='=>'int']");
f("apc_add\\'1", "['array','values'=>'array','unused='=>'','ttl='=>'int']");
f("apc_bin_dumpfile", "['int','files'=>'array','user_vars'=>'array','filename'=>'string','flags='=>'int','context='=>'']");
f("apc_bin_dump", "['string','files='=>'array','user_vars='=>'array']");
f("apc_bin_load", "['bool','data'=>'string','flags='=>'int']");
f("apc_bin_loadfile", "['bool','filename'=>'string','context='=>'','flags='=>'int']");
f("apc_cache_info", "['array','cache_type='=>'string','limited='=>'bool']");
f("apc_cas", "['bool','key'=>'string','old'=>'int','new'=>'int']");
f("apc_clear_cache", "['bool','cache_type='=>'string']");
f("apc_compile_file", "['','filename'=>'string','atomic='=>'bool']");
f("apc_dec", "['int','key'=>'string','step='=>'int','&success='=>'bool']");
f("apc_define_constants", "['bool','key'=>'string','constants'=>'array','case_sensitive='=>'bool']");
f("apc_delete_file", "['','keys'=>'']");
f("apc_delete", "['bool','key'=>'string|string[]|APCIterator']");
f("apc_exists", "['bool','keys'=>'string']");
f("apc_exists", "['array','keys'=>'string[]']");
f("apc_fetch", "['','key'=>'','&success='=>'bool']");
f("apc_inc", "['int','key'=>'string','step='=>'int','&success='=>'bool']");
f("APCIterator::__construct", "['APCIterator','cache'=>'string','search='=>'','format='=>'int','chunk_size='=>'int','list='=>'int']");
f("APCIterator::current", "['']");
f("APCIterator::getTotalCount", "['int']");
f("APCIterator::getTotalHits", "['int']");
f("APCIterator::getTotalSize", "['int']");
f("APCIterator::key", "['string']");
f("APCIterator::next", "['void']");
f("APCIterator::rewind", "['void']");
f("APCIterator::valid", "['bool']");
f("apc_load_constants", "['bool','key'=>'string','case_sensitive='=>'bool']");
f("apc_sma_info", "['array','limited='=>'bool']");
f("apc_store", "['bool','key'=>'string','var'=>'','ttl='=>'int']");
f("apc_store\\'1", "['array','values'=>'array','unused='=>'','ttl='=>'int']");
f("apcu_add", "['bool','key'=>'string','ttl='=>'int']");
f("apcu_add\\'1", "['array','values'=>'array','unused='=>'','ttl='=>'int']");
f("apcu_cache_info", "['array','limited='=>'bool']");
f("apcu_cas", "['bool','key'=>'string','old'=>'int','new'=>'int']");
f("apcu_clear_cache", "['bool']");
f("apcu_dec", "['int','key'=>'string','step='=>'int','&success='=>'bool']");
f("apcu_delete", "['bool','key'=>'string|string[]|APCUIterator']");
f("apcu_entry", "['','key'=>'string','generator'=>'callable','ttl='=>'int']");
f("apcu_exists", "['bool','keys'=>'string']");
f("apcu_exists\\'1", "['array','keys'=>'string[]']");
f("apcu_fetch", "['','key'=>'','&success='=>'bool']");
f("apcu_inc", "['int','key'=>'string','step='=>'int','&success='=>'bool']");
f("APCUIterator::__construct", "['APCUIterator','search='=>'string|string[]|null','format='=>'int','chunk_size='=>'int','list='=>'int']");
f("APCUIterator::current", "['']");
f("APCUIterator::getTotalCount", "['int']");
f("APCUIterator::getTotalHits", "['int']");
f("APCUIterator::getTotalSize", "['int']");
f("APCUIterator::key", "['string']");
f("APCUIterator::next", "['void']");
f("APCUIterator::rewind", "['void']");
f("APCUIterator::valid", "['bool']");
f("apcu_sma_info", "['array','limited='=>'bool']");
f("apcu_store", "['bool','key'=>'string','ttl='=>'int']");
f("apcu_store\\'1", "['array','values'=>'array','unused='=>'','ttl='=>'int']");
f("apd_breakpoint", "['bool','debug_level'=>'int']");
f("apd_callstack", "['array']");
f("apd_clunk", "['','warning'=>'string','delimiter='=>'string']");
f("apd_continue", "['bool','debug_level'=>'int']");
f("apd_croak", "['','warning'=>'string','delimiter='=>'string']");
f("apd_dump_function_table", "['']");
f("apd_dump_persistent_resources", "['array']");
f("apd_dump_regular_resources", "['array']");
f("apd_echo", "['bool','output'=>'string']");
f("apd_get_active_symbols", "['array']");
f("apd_set_pprof_trace", "['string','dump_directory='=>'string','fragment='=>'string']");
f("apd_set_session", "['','debug_level'=>'int']");
f("apd_set_session_trace", "['','debug_level'=>'int','dump_directory='=>'string']");
f("apd_set_session_trace_socket", "['bool','tcp_server'=>'string','socket_type'=>'int','port'=>'int','debug_level'=>'int']");
f("AppendIterator::append", "['','it'=>'iterator']");
f("AppendIterator::__construct", "['AppendIterator']");
f("AppendIterator::current", "['']");
f("AppendIterator::getArrayIterator", "['ArrayIterator']");
f("AppendIterator::getInnerIterator", "['']");
f("AppendIterator::getIteratorIndex", "['int']");
f("AppendIterator::key", "['']");
f("AppendIterator::next", "['']");
f("AppendIterator::rewind", "['']");
f("AppendIterator::valid", "['bool']");
f("ArrayAccess::offsetExists", "['bool','offset'=>'mixed']");
f("ArrayAccess::offsetGet", "['mixed','offset'=>'mixed']");
f("ArrayAccess::offsetSet", "['void','offset'=>'mixed','value'=>'mixed']");
f("ArrayAccess::offsetUnset", "['void','offset'=>'mixed']");
f("array", "['array','...values='=>'']");
f("array_change_key_case", "['array','input'=>'array','case='=>'int']");
f("array_chunk", "['array','input'=>'array','size'=>'int','preserve_keys='=>'bool']");
f("array_column", "['array','array'=>'array','column_key'=>'mixed','index_key='=>'mixed']");
f("array_combine", "['array','keys'=>'array','values'=>'array']");
f("array_count_values", "['array','input'=>'array']");
f("array_diff", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_diff_assoc", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_diff_key", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_diff_uassoc", "['array','arr1'=>'array','arr2'=>'array','...=='=>'array','data_comp_func='=>'callable']");
f("array_diff_ukey", "['array','arr1'=>'array','arr2'=>'array','...=='=>'array','key_comp_func='=>'callable']");
f("array_fill", "['array','start_key'=>'int','num'=>'int','val'=>'']");
f("array_fill_keys", "['array','keys'=>'array','val'=>'']");
f("array_filter", "['array','input'=>'array','callback='=>'callable','flag='=>'int']");
f("array_flip", "['array','input'=>'array']");
f("array_intersect", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_intersect_assoc", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_intersect_key", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_intersect_uassoc", "['array','arr1'=>'array','arr2'=>'array','...=='=>'array','key_compare_func='=>'callable']");
f("array_intersect_ukey", "['array','arr1'=>'array','arr2'=>'array','...=='=>'array','key_compare_func='=>'callable']");
f("ArrayIterator::append", "['','value'=>'']");
f("ArrayIterator::asort", "['']");
f("ArrayIterator::__construct", "['ArrayIterator','array='=>'','flags='=>'int']");
f("ArrayIterator::count", "['int']");
f("ArrayIterator::current", "['']");
f("ArrayIterator::getArrayCopy", "['array']");
f("ArrayIterator::getFlags", "['']");
f("ArrayIterator::key", "['int|string|false']");
f("ArrayIterator::ksort", "['']");
f("ArrayIterator::natcasesort", "['']");
f("ArrayIterator::natsort", "['']");
f("ArrayIterator::next", "['']");
f("ArrayIterator::offsetExists", "['','index'=>'string']");
f("ArrayIterator::offsetGet", "['','index'=>'string']");
f("ArrayIterator::offsetSet", "['','index'=>'string','newval'=>'string']");
f("ArrayIterator::offsetUnset", "['','index'=>'string']");
f("ArrayIterator::rewind", "['']");
f("ArrayIterator::seek", "['','position'=>'int']");
f("ArrayIterator::serialize", "['string']");
f("ArrayIterator::setFlags", "['','flags'=>'string']");
f("ArrayIterator::uasort", "['','cmp_function'=>'callable']");
f("ArrayIterator::uksort", "['','cmp_function'=>'callable']");
f("ArrayIterator::unserialize", "['string','serialized'=>'string']");
f("ArrayIterator::valid", "['bool']");
f("array_key_exists", "['bool','key'=>'string|int','search'=>'array']");
f("array_keys", "['int[]|string[]','input'=>'array','search_value='=>'','strict='=>'bool']");
f("array_map", "['array','callback'=>'callable|null','input1'=>'array','...='=>'array']");
f("array_merge", "['array','arr1'=>'array','...='=>'array']");
f("array_merge_recursive", "['array','arr1'=>'array','...='=>'array']");
f("array_multisort", "['bool','array1'=>'array','array1_sort_order='=>'array|int','array1_sort_flags='=>'array|int','...='=>'array|int']");
f("ArrayObject::append", "['','value'=>'']");
f("ArrayObject::asort", "['']");
f("ArrayObject::__construct", "['ArrayObject','input='=>'','flags='=>'int','iterator_class='=>'string']");
f("ArrayObject::count", "['int']");
f("ArrayObject::exchangeArray", "['array','ar'=>'']");
f("ArrayObject::getArrayCopy", "['array']");
f("ArrayObject::getFlags", "['int']");
f("ArrayObject::getIterator", "['ArrayIterator']");
f("ArrayObject::getIteratorClass", "['string']");
f("ArrayObject::ksort", "['']");
f("ArrayObject::natcasesort", "['']");
f("ArrayObject::natsort", "['']");
f("ArrayObject::offsetExists", "['bool','index'=>'']");
f("ArrayObject::offsetGet", "['','index'=>'']");
f("ArrayObject::offsetSet", "['','index'=>'','newval'=>'']");
f("ArrayObject::offsetUnset", "['','index'=>'']");
f("ArrayObject::serialize", "['string']");
f("ArrayObject::setFlags", "['','flags'=>'int']");
f("ArrayObject::setIteratorClass", "['','iterator_class'=>'string']");
f("ArrayObject::uasort", "['','cmp_function'=>'callable']");
f("ArrayObject::uksort", "['','cmp_function'=>'callable']");
f("ArrayObject::unserialize", "['','serialized'=>'string']");
f("array_pad", "['array','input'=>'array','pad_size'=>'int','pad_value'=>'']");
f("array_pop", "['','stack'=>'array']");
f("array_product", "['int|float','input'=>'array']");
f("array_push", "['int','stack'=>'array','...='=>'']");
f("array_rand", "['','input'=>'array','num_req='=>'int']");
f("array_reduce", "['','input'=>'array','callback'=>'callable','initial='=>'']");
f("array_replace", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_replace_recursive", "['array','arr1'=>'array','arr2'=>'array','...='=>'array']");
f("array_reverse", "['array','input'=>'array','preserve='=>'bool']");
f("array_search", "['','needle'=>'','haystack'=>'array','strict='=>'bool']");
f("array_shift", "['','stack'=>'array']");
f("array_slice", "['array','input'=>'array','offset'=>'int','length='=>'int|null','preserve_keys='=>'bool']");
f("array_splice", "['array','input'=>'array','offset'=>'int','length='=>'int','replacement='=>'array|string']");
f("array_sum", "['','input'=>'array']");
f("array_udiff", "['array','arr1'=>'array','arr2'=>'array','...='=>'array','data_comp_func='=>'callable']");
f("array_udiff_assoc", "['array','arr1'=>'array','arr2'=>'array','...='=>'array','key_comp_func='=>'callable']");
f("array_udiff_uassoc", "['array','arr1'=>'array','arr2'=>'array','...='=>'array','data_comp_func='=>'callable','key_comp_func='=>'callable']");
f("array_uintersect", "['array','arr1'=>'array','arr2'=>'array','...='=>'array','data_compare_func='=>'callable']");
f("array_uintersect_assoc", "['array','arr1'=>'array','arr2'=>'array','...='=>'array','data_compare_func='=>'callable']");
f("array_uintersect_uassoc", "['array','arr1'=>'array','arr2'=>'array','...='=>'array','data_compare_func='=>'callable','key_compare_func='=>'callable']");
f("array_unique", "['array','input'=>'array','sort_flags='=>'int']");
f("array_unshift", "['int','stack'=>'array','var'=>'','...='=>'']");
f("array_values", "['array','input'=>'array']");
f("array_walk", "['bool','input'=>'array','callback'=>'callable','userdata='=>'']");
f("array_walk_recursive", "['bool','&input'=>'array','callback'=>'callable','userdata='=>'']");
f("arsort", "['bool','array_arg'=>'array','sort_flags='=>'int']");
f("asin", "['float','number'=>'float']");
f("asinh", "['float','number'=>'float']");
f("asort", "['bool','array_arg'=>'array','sort_flags='=>'int']");
f("assert", "['int','assertion'=>'string|bool','description='=>'']");
f("assert_options", "['','what'=>'int','value='=>'']");
f("atan2", "['float','y'=>'float','x'=>'float']");
f("atan", "['float','number'=>'float']");
f("atanh", "['float','number'=>'float']");
f("BadFunctionCallException::__clone", "['Throwable|BadFunctionCallException']");
f("BadFunctionCallException::__construct", "['BadFunctionCallException','message='=>'string','code='=>'int','previous='=>'Throwable|BadFunctionCallException|null']");
f("BadFunctionCallException::__construct", "['BadMethodCallException','message='=>'string','code='=>'int','previous='=>'Throwable|BadMethodCallException|null']");
f("BadFunctionCallException::getCode", "['int']");
f("BadFunctionCallException::getFile", "['string']");
f("BadFunctionCallException::getLine", "['int']");
f("BadFunctionCallException::getMessage", "['string']");
f("BadFunctionCallException::getPrevious", "['Throwable|BadFunctionCallException']");
f("BadFunctionCallException::getTrace", "['array']");
f("BadFunctionCallException::getTraceAsString", "['string']");
f("BadFunctionCallException::__toString", "['string']");
f("BadMethodCallException::__clone", "['Throwable|BadMethodCallException']");
f("BadMethodCallException::getCode", "['int']");
f("BadMethodCallException::getFile", "['string']");
f("BadMethodCallException::getLine", "['int']");
f("BadMethodCallException::getMessage", "['string']");
f("BadMethodCallException::getPrevious", "['Throwable|BadMethodCallException']");
f("BadMethodCallException::getTrace", "['array']");
f("BadMethodCallException::getTraceAsString", "['string']");
f("BadMethodCallException::__toString", "['string']");
f("base64_decode", "['string','str'=>'string','strict='=>'bool']");
f("base64_encode", "['string','str'=>'string']");
f("base_convert", "['string','number'=>'string','frombase'=>'int','tobase'=>'int']");
f("basename", "['string','path'=>'string','suffix='=>'string']");
f("bbcode_add_element", "['bool','bbcode_container'=>'','tag_name'=>'string','tag_rules'=>'array']");
f("bbcode_add_smiley", "['bool','bbcode_container'=>'','smiley'=>'string','replace_by'=>'string']");
f("bbcode_create", "['resource','bbcode_initial_tags='=>'array']");
f("bbcode_destroy", "['bool','bbcode_container'=>'']");
f("bbcode_parse", "['string','bbcode_container'=>'','to_parse'=>'string']");
f("bbcode_set_arg_parser", "['bool','bbcode_container'=>'','bbcode_arg_parser'=>'']");
f("bbcode_set_flags", "['bool','bbcode_container'=>'','flags'=>'int','mode='=>'int']");
f("bcadd", "['string','left_operand'=>'int|string','right_operand'=>'int|string','scale='=>'int']");
f("bccomp", "['int','left_operand'=>'int|string','right_operand'=>'int|string','scale='=>'int']");
f("bcdiv", "['string','left_operand'=>'int|string','right_operand'=>'int|string','scale='=>'int']");
f("bcmod", "['string','left_operand'=>'int|string','right_operand'=>'int|string']");
f("bcmul", "['string','left_operand'=>'int|string','right_operand'=>'int|string','scale='=>'int']");
f("bcompiler_load", "['bool','filename'=>'string']");
f("bcompiler_load_exe", "['bool','filename'=>'string']");
f("bcompiler_parse_class", "['bool','class'=>'string','callback'=>'string']");
f("bcompiler_read", "['bool','filehandle'=>'']");
f("bcompiler_write_class", "['bool','filehandle'=>'','classname'=>'string','extends='=>'string']");
f("bcompiler_write_constant", "['bool','filehandle'=>'','constantname'=>'string']");
f("bcompiler_write_exe_footer", "['bool','filehandle'=>'','startpos'=>'int']");
f("bcompiler_write_file", "['bool','filehandle'=>'','filename'=>'string']");
f("bcompiler_write_footer", "['bool','filehandle'=>'']");
f("bcompiler_write_function", "['bool','filehandle'=>'','functionname'=>'string']");
f("bcompiler_write_functions_from_file", "['bool','filehandle'=>'','filename'=>'string']");
f("bcompiler_write_header", "['bool','filehandle'=>'','write_ver='=>'string']");
f("bcompiler_write_included_filename", "['bool','filehandle'=>'','filename'=>'string']");
f("bcpowmod", "['string','x'=>'int|string','y'=>'int|string','mod'=>'int|string','scale='=>'int']");
f("bcpow", "['string','x'=>'int|string','y'=>'int|string','scale='=>'int']");
f("bcscale", "['bool','scale'=>'int']");
f("bcsqrt", "['string','operand'=>'int|string','scale='=>'int']");
f("bcsub", "['string','left_operand'=>'int|string','right_operand'=>'int|string','scale='=>'int']");
f("bin2hex", "['string','data'=>'string']");
f("bindec", "['int','binary_number'=>'string']");
f("bind_textdomain_codeset", "['string','domain'=>'string','codeset'=>'string']");
f("bindtextdomain", "['string','domain_name'=>'string','dir'=>'string']");
f("birdstep_autocommit", "['bool','index'=>'int']");
f("birdstep_close", "['bool','id'=>'int']");
f("birdstep_commit", "['bool','index'=>'int']");
f("birdstep_connect", "['int','server'=>'string','user'=>'string','pass'=>'string']");
f("birdstep_exec", "['int','index'=>'int','exec_str'=>'string']");
f("birdstep_fetch", "['bool','index'=>'int']");
f("birdstep_fieldname", "['string','index'=>'int','col'=>'int']");
f("birdstep_fieldnum", "['int','index'=>'int']");
f("birdstep_freeresult", "['bool','index'=>'int']");
f("birdstep_off_autocommit", "['bool','index'=>'int']");
f("birdstep_result", "['','index'=>'int','col'=>'']");
f("birdstep_rollback", "['bool','index'=>'int']");
f("blenc_encrypt", "['string','plaintext'=>'string','encodedfile'=>'string','encryption_key='=>'string']");
f("boolval", "['bool','var'=>'']");
f("BSON\\Binary::__construct", "['','data'=>'string','subtype'=>'string']");
f("BSON\\Binary::getSubType", "['']");
f("bson_decode", "['array','bson'=>'string']");
f("bson_encode", "['string','anything'=>'']");
f("BSON\\fromArray", "['string','array'=>'string']");
f("BSON\\fromJSON", "['string','json'=>'string']");
f("BSON\\Javascript::__construct", "['','javascript'=>'string','scope='=>'string']");
f("BSON\\ObjectID::__construct", "['','id='=>'string']");
f("BSON\\ObjectID::__toString", "['string']");
f("BSON\\Regex::__construct", "['','pattern'=>'string','flags'=>'string']");
f("BSON\\Regex::getFlags", "['']");
f("BSON\\Regex::getPattern", "['']");
f("BSON\\Regex::__toString", "['string']");
f("BSON\\Serializable::bsonSerialize", "['string']");
f("BSON\\Timestamp::__construct", "['BSON\\Timestamp','increment'=>'string','timestamp'=>'string']");
f("BSON\\Timestamp::__toString", "['string']");
f("BSON\\toArray", "['array','bson'=>'string']");
f("BSON\\toJSON", "['string','bson'=>'string']");
f("BSON\\Unserializable::bsonUnserialize", "['','data'=>'array']");
f("BSON\\UTCDatetime::__construct", "['','milliseconds'=>'string']");
f("BSON\\UTCDatetime::toDateTime", "['']");
f("BSON\\UTCDatetime::__toString", "['string']");
f("bzclose", "['int','bz'=>'']");
f("bzcompress", "['string','source'=>'string','blocksize100k='=>'int','workfactor='=>'int']");
f("bzdecompress", "['string','source'=>'string','small='=>'int']");
f("bzerrno", "['int','bz'=>'']");
f("bzerror", "['array','bz'=>'']");
f("bzerrstr", "['string','bz'=>'']");
f("bzflush", "['int','bz'=>'']");
f("bzopen", "['resource','file|fp'=>'string|int','mode'=>'string']");
f("bzread", "['string','bz'=>'','length='=>'int']");
f("bzwrite", "['int','bz'=>'','data'=>'string','length='=>'int']");
f("CachingIterator::__construct", "['CachingIterator','it'=>'iterator','flags='=>'']");
f("CachingIterator::count", "['int']");
f("CachingIterator::current", "['']");
f("CachingIterator::getCache", "['array']");
f("CachingIterator::getFlags", "['int']");
f("CachingIterator::getInnerIterator", "['Iterator']");
f("CachingIterator::hasNext", "['bool']");
f("CachingIterator::key", "['']");
f("CachingIterator::next", "['']");
f("CachingIterator::offsetExists", "['bool','index'=>'']");
f("CachingIterator::offsetGet", "['string','index'=>'']");
f("CachingIterator::offsetSet", "['','index'=>'','newval'=>'']");
f("CachingIterator::offsetUnset", "['','index'=>'']");
f("CachingIterator::rewind", "['']");
f("CachingIterator::setFlags", "['','flags'=>'int']");
f("CachingIterator::__toString", "['string']");
f("CachingIterator::valid", "['bool']");
f("cairo_append_path", "['','path'=>'cairopath','context'=>'cairocontext']");
f("cairo_arc_negative", "['','x'=>'float','y'=>'float','radius'=>'float','angle1'=>'float','angle2'=>'float','context'=>'cairocontext']");
f("cairo_arc", "['','x'=>'float','y'=>'float','radius'=>'float','angle1'=>'float','angle2'=>'float','context'=>'cairocontext']");
f("cairo_available_fonts", "['array']");
f("Cairo::availableFonts", "['array']");
f("cairo_available_surfaces", "['array']");
f("Cairo::availableSurfaces", "['array']");
f("cairo_clip", "['','context'=>'cairocontext']");
f("cairo_clip_extents", "['array','context'=>'cairocontext']");
f("cairo_clip_preserve", "['','context'=>'cairocontext']");
f("cairo_clip_rectangle_list", "['array','context'=>'cairocontext']");
f("cairo_close_path", "['','context'=>'cairocontext']");
f("CairoContext::appendPath", "['','path'=>'cairopath','context'=>'cairocontext']");
f("CairoContext::arcNegative", "['','x'=>'float','y'=>'float','radius'=>'float','angle1'=>'float','angle2'=>'float','context'=>'cairocontext']");
f("CairoContext::arc", "['','x'=>'float','y'=>'float','radius'=>'float','angle1'=>'float','angle2'=>'float','context'=>'cairocontext']");
f("CairoContext::clip", "['','context'=>'cairocontext']");
f("CairoContext::clipExtents", "['array','context'=>'cairocontext']");
f("CairoContext::clipPreserve", "['','context'=>'cairocontext']");
f("CairoContext::clipRectangleList", "['array','context'=>'cairocontext']");
f("CairoContext::closePath", "['','context'=>'cairocontext']");
f("CairoContext::__construct", "['','surface'=>'CairoSurface']");
f("CairoContext::copyPage", "['','context'=>'cairocontext']");
f("CairoContext::copyPath", "['CairoPath','context'=>'cairocontext']");
f("CairoContext::copyPathFlat", "['CairoPath','context'=>'cairocontext']");
f("CairoContext::curveTo", "['','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float','context'=>'cairocontext']");
f("CairoContext::deviceToUser", "['array','x'=>'float','y'=>'float','context'=>'cairocontext']");
f("CairoContext::deviceToUserDistance", "['array','x'=>'float','y'=>'float','context'=>'cairocontext']");
f("CairoContext::fill", "['','context'=>'cairocontext']");
f("CairoContext::fillExtents", "['array','context'=>'cairocontext']");
f("CairoContext::fillPreserve", "['','context'=>'cairocontext']");
f("CairoContext::fontExtents", "['array','context'=>'cairocontext']");
f("CairoContext::getAntialias", "['int','context'=>'cairocontext']");
f("CairoContext::getCurrentPoint", "['array','context'=>'cairocontext']");
f("CairoContext::getDash", "['array','context'=>'cairocontext']");
f("CairoContext::getDashCount", "['int','context'=>'cairocontext']");
f("CairoContext::getFillRule", "['int','context'=>'cairocontext']");
f("CairoContext::getFontFace", "['','context'=>'cairocontext']");
f("CairoContext::getFontMatrix", "['','context'=>'cairocontext']");
f("CairoContext::getFontOptions", "['','context'=>'cairocontext']");
f("CairoContext::getGroupTarget", "['','context'=>'cairocontext']");
f("CairoContext::getLineCap", "['int','context'=>'cairocontext']");
f("CairoContext::getLineJoin", "['int','context'=>'cairocontext']");
f("CairoContext::getLineWidth", "['float','context'=>'cairocontext']");
f("CairoContext::getMatrix", "['','context'=>'cairocontext']");
f("CairoContext::getMiterLimit", "['float','context'=>'cairocontext']");
f("CairoContext::getOperator", "['int','context'=>'cairocontext']");
f("CairoContext::getScaledFont", "['','context'=>'cairocontext']");
f("CairoContext::getSource", "['','context'=>'cairocontext']");
f("CairoContext::getTarget", "['','context'=>'cairocontext']");
f("CairoContext::getTolerance", "['float','context'=>'cairocontext']");
f("CairoContext::glyphPath", "['','glyphs'=>'array','context'=>'cairocontext']");
f("CairoContext::hasCurrentPoint", "['bool','context'=>'cairocontext']");
f("CairoContext::identityMatrix", "['','context'=>'cairocontext']");
f("CairoContext::inFill", "['bool','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::inStroke", "['bool','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::lineTo", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::mask", "['','pattern'=>'cairopattern','context'=>'cairocontext']");
f("CairoContext::maskSurface", "['','surface'=>'cairosurface','x='=>'string','y='=>'string','context='=>'cairocontext']");
f("CairoContext::moveTo", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::newPath", "['','context'=>'cairocontext']");
f("CairoContext::newSubPath", "['','context'=>'cairocontext']");
f("CairoContext::paint", "['','context'=>'cairocontext']");
f("CairoContext::paintWithAlpha", "['','alpha'=>'string','context'=>'cairocontext']");
f("CairoContext::pathExtents", "['array','context'=>'cairocontext']");
f("CairoContext::popGroup", "['','context'=>'cairocontext']");
f("CairoContext::popGroupToSource", "['','context'=>'cairocontext']");
f("CairoContext::pushGroup", "['','context'=>'cairocontext']");
f("CairoContext::pushGroupWithContent", "['','content'=>'string','context'=>'cairocontext']");
f("CairoContext::rectangle", "['','x'=>'string','y'=>'string','width'=>'string','height'=>'string','context'=>'cairocontext']");
f("CairoContext::relCurveTo", "['','x1'=>'string','y1'=>'string','x2'=>'string','y2'=>'string','x3'=>'string','y3'=>'string','context'=>'cairocontext']");
f("CairoContext::relLineTo", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::relMoveTo", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::resetClip", "['','context'=>'cairocontext']");
f("CairoContext::restore", "['','context'=>'cairocontext']");
f("CairoContext::rotate", "['','angle'=>'string','context'=>'cairocontext']");
f("CairoContext::save", "['','context'=>'cairocontext']");
f("CairoContext::scale", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::selectFontFace", "['','family'=>'string','slant='=>'string','weight='=>'string','context='=>'cairocontext']");
f("CairoContext::setAntialias", "['','antialias='=>'string','context='=>'cairocontext']");
f("CairoContext::setDash", "['','dashes'=>'array','offset='=>'string','context='=>'cairocontext']");
f("CairoContext::setFillRule", "['','setting'=>'string','context'=>'cairocontext']");
f("CairoContext::setFontFace", "['','fontface'=>'cairofontface','context'=>'cairocontext']");
f("CairoContext::setFontMatrix", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("CairoContext::setFontOptions", "['','fontoptions'=>'cairofontoptions','context'=>'cairocontext']");
f("CairoContext::setFontSize", "['','size'=>'string','context'=>'cairocontext']");
f("CairoContext::setLineCap", "['','setting'=>'string','context'=>'cairocontext']");
f("CairoContext::setLineJoin", "['','setting'=>'string','context'=>'cairocontext']");
f("CairoContext::setLineWidth", "['','width'=>'string','context'=>'cairocontext']");
f("CairoContext::setMatrix", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("CairoContext::setMiterLimit", "['','limit'=>'string','context'=>'cairocontext']");
f("CairoContext::setOperator", "['','setting'=>'string','context'=>'cairocontext']");
f("CairoContext::setScaledFont", "['','scaledfont'=>'cairoscaledfont','context'=>'cairocontext']");
f("CairoContext::setSource", "['','pattern'=>'cairopattern','context'=>'cairocontext']");
f("CairoContext::setSourceRGBA", "['','red'=>'string','green'=>'string','blue'=>'string','alpha'=>'string','context'=>'cairocontext','pattern'=>'cairopattern']");
f("CairoContext::setSourceRGB", "['','red'=>'string','green'=>'string','blue'=>'string','context'=>'cairocontext','pattern'=>'cairopattern']");
f("CairoContext::setSourceSurface", "['','surface'=>'cairosurface','x='=>'string','y='=>'string','context='=>'cairocontext']");
f("CairoContext::setTolerance", "['','tolerance'=>'string','context'=>'cairocontext']");
f("CairoContext::showPage", "['','context'=>'cairocontext']");
f("CairoContext::showText", "['','text'=>'string','context'=>'cairocontext']");
f("CairoContext::status", "['int','context'=>'cairocontext']");
f("CairoContext::stroke", "['','context'=>'cairocontext']");
f("CairoContext::strokeExtents", "['array','context'=>'cairocontext']");
f("CairoContext::strokePreserve", "['','context'=>'cairocontext']");
f("CairoContext::textExtents", "['array','text'=>'string','context'=>'cairocontext']");
f("CairoContext::textPath", "['','string'=>'string','context'=>'cairocontext','text'=>'string']");
f("CairoContext::transform", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("CairoContext::translate", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::userToDevice", "['array','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoContext::userToDeviceDistance", "['array','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_copy_page", "['','context'=>'cairocontext']");
f("cairo_copy_path", "['CairoPath','context'=>'cairocontext']");
f("cairo_copy_path_flat", "['CairoPath','context'=>'cairocontext']");
f("cairo_create", "['CairoContext','surface'=>'cairosurface']");
f("cairo_curve_to", "['','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float','context'=>'cairocontext']");
f("cairo_device_to_user", "['array','x'=>'float','y'=>'float','context'=>'cairocontext']");
f("cairo_device_to_user_distance", "['array','x'=>'float','y'=>'float','context'=>'cairocontext']");
f("cairo_fill", "['','context'=>'cairocontext']");
f("cairo_fill_extents", "['array','context'=>'cairocontext']");
f("cairo_fill_preserve", "['','context'=>'cairocontext']");
f("cairo_font_extents", "['array','context'=>'cairocontext']");
f("CairoFontFace::__construct", "['']");
f("CairoFontFace::getType", "['int']");
f("cairo_font_face_get_type", "['int','fontface'=>'cairofontface']");
f("cairo_font_face_status", "['int','fontface'=>'cairofontface']");
f("CairoFontFace::status", "['int','fontface'=>'cairofontface']");
f("CairoFontOptions::__construct", "['']");
f("cairo_font_options_create", "['CairoFontOptions']");
f("cairo_font_options_equal", "['bool','options'=>'cairofontoptions','other'=>'cairofontoptions']");
f("CairoFontOptions::equal", "['bool','other'=>'string']");
f("CairoFontOptions::getAntialias", "['int','context'=>'cairocontext']");
f("cairo_font_options_get_antialias", "['int','options'=>'cairofontoptions']");
f("CairoFontOptions::getHintMetrics", "['int']");
f("cairo_font_options_get_hint_metrics", "['int','options'=>'cairofontoptions']");
f("CairoFontOptions::getHintStyle", "['int']");
f("cairo_font_options_get_hint_style", "['int','options'=>'cairofontoptions']");
f("CairoFontOptions::getSubpixelOrder", "['int']");
f("cairo_font_options_get_subpixel_order", "['int','options'=>'cairofontoptions']");
f("CairoFontOptions::hash", "['int']");
f("cairo_font_options_hash", "['int','options'=>'cairofontoptions']");
f("cairo_font_options_merge", "['','options'=>'cairofontoptions','other'=>'cairofontoptions']");
f("CairoFontOptions::merge", "['','other'=>'string']");
f("CairoFontOptions::setAntialias", "['','antialias='=>'string','context='=>'cairocontext']");
f("cairo_font_options_set_antialias", "['','options'=>'cairofontoptions','antialias'=>'int']");
f("CairoFontOptions::setHintMetrics", "['','hint_metrics'=>'string']");
f("cairo_font_options_set_hint_metrics", "['','options'=>'cairofontoptions','hint_metrics'=>'int']");
f("CairoFontOptions::setHintStyle", "['','hint_style'=>'string']");
f("cairo_font_options_set_hint_style", "['','options'=>'cairofontoptions','hint_style'=>'int']");
f("cairo_font_options_set_subpixel_order", "['','options'=>'cairofontoptions','subpixel_order'=>'int']");
f("CairoFontOptions::setSubpixelOrder", "['','subpixel_order'=>'string']");
f("CairoFontOptions::status", "['int','context'=>'cairocontext']");
f("cairo_font_options_status", "['int','options'=>'cairofontoptions']");
f("cairo_format_stride_for_width", "['int','format'=>'int','width'=>'int']");
f("CairoFormat::strideForWidth", "['int','format'=>'int','width'=>'int']");
f("cairo_get_antialias", "['int','context'=>'cairocontext']");
f("cairo_get_current_point", "['array','context'=>'cairocontext']");
f("cairo_get_dash", "['array','context'=>'cairocontext']");
f("cairo_get_dash_count", "['int','context'=>'cairocontext']");
f("cairo_get_fill_rule", "['int','context'=>'cairocontext']");
f("cairo_get_font_face", "['','context'=>'cairocontext']");
f("cairo_get_font_matrix", "['','context'=>'cairocontext']");
f("cairo_get_font_options", "['','context'=>'cairocontext']");
f("cairo_get_group_target", "['','context'=>'cairocontext']");
f("cairo_get_line_cap", "['int','context'=>'cairocontext']");
f("cairo_get_line_join", "['int','context'=>'cairocontext']");
f("cairo_get_line_width", "['float','context'=>'cairocontext']");
f("cairo_get_matrix", "['','context'=>'cairocontext']");
f("cairo_get_miter_limit", "['float','context'=>'cairocontext']");
f("cairo_get_operator", "['int','context'=>'cairocontext']");
f("cairo_get_scaled_font", "['','context'=>'cairocontext']");
f("cairo_get_source", "['','context'=>'cairocontext']");
f("cairo_get_target", "['','context'=>'cairocontext']");
f("cairo_get_tolerance", "['float','context'=>'cairocontext']");
f("cairo_glyph_path", "['','glyphs'=>'array','context'=>'cairocontext']");
f("CairoGradientPattern::addColorStopRgba", "['','offset'=>'string','red'=>'string','green'=>'string','blue'=>'string','alpha'=>'string']");
f("CairoGradientPattern::addColorStopRgb", "['','offset'=>'string','red'=>'string','green'=>'string','blue'=>'string']");
f("CairoGradientPattern::getColorStopCount", "['int']");
f("CairoGradientPattern::getColorStopRgba", "['array','index'=>'string']");
f("CairoGradientPattern::getExtend", "['int']");
f("CairoGradientPattern::setExtend", "['','extend'=>'int']");
f("cairo_has_current_point", "['bool','context'=>'cairocontext']");
f("cairo_identity_matrix", "['','context'=>'cairocontext']");
f("CairoImageSurface::__construct", "['','format'=>'int','width'=>'int','height'=>'int']");
f("cairo_image_surface_create", "['CairoImageSurface','format'=>'int','width'=>'int','height'=>'int']");
f("cairo_image_surface_create_for_data", "['CairoImageSurface','data'=>'string','format'=>'int','width'=>'int','height'=>'int','stride='=>'int']");
f("CairoImageSurface::createForData", "['','data'=>'string','format'=>'int','width'=>'int','height'=>'int','stride='=>'int']");
f("cairo_image_surface_create_from_png", "['CairoImageSurface','file'=>'string']");
f("CairoImageSurface::createFromPng", "['CairoImageSurface','file'=>'string']");
f("CairoImageSurface::getData", "['string']");
f("cairo_image_surface_get_data", "['string','surface'=>'cairoimagesurface']");
f("CairoImageSurface::getFormat", "['int']");
f("cairo_image_surface_get_format", "['int','surface'=>'cairoimagesurface']");
f("CairoImageSurface::getHeight", "['int']");
f("cairo_image_surface_get_height", "['int','surface'=>'cairoimagesurface']");
f("CairoImageSurface::getStride", "['int']");
f("cairo_image_surface_get_stride", "['int','surface'=>'cairoimagesurface']");
f("CairoImageSurface::getWidth", "['int']");
f("cairo_image_surface_get_width", "['int','surface'=>'cairoimagesurface']");
f("cairo_in_fill", "['bool','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_in_stroke", "['bool','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("CairoLinearGradient::__construct", "['','x0'=>'float','y0'=>'float','x1'=>'float','y1'=>'float']");
f("CairoLinearGradient::getPoints", "['array']");
f("cairo_line_to", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_mask", "['','pattern'=>'cairopattern','context'=>'cairocontext']");
f("cairo_mask_surface", "['','surface'=>'cairosurface','x='=>'string','y='=>'string','context='=>'cairocontext']");
f("CairoMatrix::__construct", "['CairoMatrix','xx='=>'float','yx='=>'float','xy='=>'float','yy='=>'float','x0='=>'float','y0='=>'float']");
f("cairo_matrix_create_scale", "['any','sx'=>'float','sy'=>'float']");
f("cairo_matrix_init_identity", "['any']");
f("CairoMatrix::initIdentity", "['any']");
f("cairo_matrix_init", "['any','xx='=>'float','yx='=>'float','xy='=>'float','yy='=>'float','x0='=>'float','y0='=>'float']");
f("cairo_matrix_init_rotate", "['any','radians'=>'float']");
f("CairoMatrix::initRotate", "['any','radians'=>'float']");
f("cairo_matrix_init_scale", "['any','sx'=>'float','sy'=>'float']");
f("CairoMatrix::initScale", "['any','sx'=>'float','sy'=>'float']");
f("cairo_matrix_init_translate", "['any','tx'=>'float','ty'=>'float']");
f("CairoMatrix::initTranslate", "['any','tx'=>'float','ty'=>'float']");
f("CairoMatrix::invert", "['']");
f("cairo_matrix_invert", "['','matrix'=>'cairomatrix']");
f("cairo_matrix_multiply", "['CairoMatrix','matrix1'=>'cairomatrix','matrix2'=>'cairomatrix']");
f("CairoMatrix::multiply", "['CairoMatrix','matrix1'=>'cairomatrix','matrix2'=>'cairomatrix']");
f("cairo_matrix_rotate", "['','matrix'=>'cairomatrix','radians'=>'float']");
f("CairoMatrix::rotate", "['','sx'=>'string','sy'=>'string','context'=>'cairocontext','angle'=>'string']");
f("cairo_matrix_scale", "['','sx'=>'float','sy'=>'float','context'=>'cairocontext']");
f("CairoMatrix::scale", "['','sx'=>'float','sy'=>'float','context'=>'cairocontext']");
f("CairoMatrix::transformDistance", "['array','dx'=>'string','dy'=>'string']");
f("cairo_matrix_transform_distance", "['array','matrix'=>'cairomatrix','dx'=>'float','dy'=>'float']");
f("CairoMatrix::transformPoint", "['array','dx'=>'string','dy'=>'string']");
f("cairo_matrix_transform_point", "['array','matrix'=>'cairomatrix','dx'=>'float','dy'=>'float']");
f("cairo_matrix_translate", "['','matrix'=>'cairomatrix','tx'=>'float','ty'=>'float']");
f("CairoMatrix::translate", "['','tx'=>'string','ty'=>'string','context'=>'cairocontext','x'=>'string','y'=>'string']");
f("cairo_move_to", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_new_path", "['','context'=>'cairocontext']");
f("cairo_new_sub_path", "['','context'=>'cairocontext']");
f("cairo_paint", "['','context'=>'cairocontext']");
f("cairo_paint_with_alpha", "['','alpha'=>'string','context'=>'cairocontext']");
f("cairo_path_extents", "['array','context'=>'cairocontext']");
f("cairo_pattern_add_color_stop_rgba", "['','pattern'=>'cairogradientpattern','offset'=>'float','red'=>'float','green'=>'float','blue'=>'float','alpha'=>'float']");
f("cairo_pattern_add_color_stop_rgb", "['','pattern'=>'cairogradientpattern','offset'=>'float','red'=>'float','green'=>'float','blue'=>'float']");
f("CairoPattern::__construct", "['']");
f("cairo_pattern_create_for_surface", "['CairoPattern','surface'=>'cairosurface']");
f("cairo_pattern_create_linear", "['CairoPattern','x0'=>'float','y0'=>'float','x1'=>'float','y1'=>'float']");
f("cairo_pattern_create_radial", "['CairoPattern','x0'=>'float','y0'=>'float','r0'=>'float','x1'=>'float','y1'=>'float','r1'=>'float']");
f("cairo_pattern_create_rgba", "['CairoPattern','red'=>'float','green'=>'float','blue'=>'float','alpha'=>'float']");
f("cairo_pattern_create_rgb", "['CairoPattern','red'=>'float','green'=>'float','blue'=>'float']");
f("cairo_pattern_get_color_stop_count", "['int','pattern'=>'cairogradientpattern']");
f("cairo_pattern_get_color_stop_rgba", "['array','pattern'=>'cairogradientpattern','index'=>'int']");
f("cairo_pattern_get_extend", "['int','pattern'=>'string']");
f("cairo_pattern_get_filter", "['int','pattern'=>'cairosurfacepattern']");
f("cairo_pattern_get_linear_points", "['array','pattern'=>'cairolineargradient']");
f("cairo_pattern_get_matrix", "['CairoMatrix','pattern'=>'cairopattern']");
f("CairoPattern::getMatrix", "['','context'=>'cairocontext']");
f("cairo_pattern_get_radial_circles", "['array','pattern'=>'cairoradialgradient']");
f("cairo_pattern_get_rgba", "['array','pattern'=>'cairosolidpattern']");
f("cairo_pattern_get_surface", "['CairoSurface','pattern'=>'cairosurfacepattern']");
f("CairoPattern::getType", "['int']");
f("cairo_pattern_get_type", "['int','pattern'=>'cairopattern']");
f("cairo_pattern_set_extend", "['','pattern'=>'string','extend'=>'string']");
f("cairo_pattern_set_filter", "['','pattern'=>'cairosurfacepattern','filter'=>'int']");
f("CairoPattern::setMatrix", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("cairo_pattern_set_matrix", "['','pattern'=>'cairopattern','matrix'=>'cairomatrix']");
f("CairoPattern::status", "['int','context'=>'cairocontext']");
f("cairo_pattern_status", "['int','pattern'=>'cairopattern']");
f("CairoPdfSurface::__construct", "['','file'=>'string','width'=>'float','height'=>'float']");
f("cairo_pdf_surface_create", "['CairoPdfSurface','file'=>'string','width'=>'float','height'=>'float']");
f("cairo_pdf_surface_set_size", "['','surface'=>'cairopdfsurface','width'=>'float','height'=>'float']");
f("CairoPdfSurface::setSize", "['','width'=>'string','height'=>'string']");
f("cairo_pop_group", "['','context'=>'cairocontext']");
f("cairo_pop_group_to_source", "['','context'=>'cairocontext']");
f("cairo_ps_get_levels", "['array']");
f("cairo_ps_level_to_string", "['string','level'=>'int']");
f("CairoPsSurface::__construct", "['','file'=>'string','width'=>'float','height'=>'float']");
f("cairo_ps_surface_create", "['CairoPsSurface','file'=>'string','width'=>'float','height'=>'float']");
f("CairoPsSurface::dscBeginPageSetup", "['']");
f("cairo_ps_surface_dsc_begin_page_setup", "['','surface'=>'cairopssurface']");
f("CairoPsSurface::dscBeginSetup", "['']");
f("cairo_ps_surface_dsc_begin_setup", "['','surface'=>'cairopssurface']");
f("CairoPsSurface::dscComment", "['','comment'=>'string']");
f("cairo_ps_surface_dsc_comment", "['','surface'=>'cairopssurface','comment'=>'string']");
f("CairoPsSurface::getEps", "['bool']");
f("cairo_ps_surface_get_eps", "['bool','surface'=>'cairopssurface']");
f("CairoPsSurface::getLevels", "['array']");
f("CairoPsSurface::levelToString", "['string','level'=>'int']");
f("CairoPsSurface::restrictToLevel", "['','level'=>'string']");
f("cairo_ps_surface_restrict_to_level", "['','surface'=>'cairopssurface','level'=>'int']");
f("CairoPsSurface::setEps", "['','level'=>'string']");
f("cairo_ps_surface_set_eps", "['','surface'=>'cairopssurface','level'=>'bool']");
f("cairo_ps_surface_set_size", "['','surface'=>'cairopssurface','width'=>'float','height'=>'float']");
f("CairoPsSurface::setSize", "['','width'=>'string','height'=>'string']");
f("cairo_push_group", "['','context'=>'cairocontext']");
f("cairo_push_group_with_content", "['','content'=>'string','context'=>'cairocontext']");
f("CairoRadialGradient::__construct", "['CairoPattern','x0'=>'float','y0'=>'float','r0'=>'float','x1'=>'float','y1'=>'float','r1'=>'float']");
f("CairoRadialGradient::getCircles", "['array']");
f("cairo_rectangle", "['','x'=>'string','y'=>'string','width'=>'string','height'=>'string','context'=>'cairocontext']");
f("cairo_rel_curve_to", "['','x1'=>'string','y1'=>'string','x2'=>'string','y2'=>'string','x3'=>'string','y3'=>'string','context'=>'cairocontext']");
f("cairo_rel_line_to", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_rel_move_to", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_reset_clip", "['','context'=>'cairocontext']");
f("cairo_restore", "['','context'=>'cairocontext']");
f("cairo_rotate", "['','sx'=>'string','sy'=>'string','context'=>'cairocontext','angle'=>'string']");
f("cairo_save", "['','context'=>'cairocontext']");
f("CairoScaledFont::__construct", "['','font_face'=>'CairoFontFace','matrix'=>'CairoMatrix','ctm'=>'CairoMatrix','options'=>'CairoFontOptions']");
f("cairo_scaled_font_create", "['CairoScaledFont','fontface'=>'cairofontface','matrix'=>'cairomatrix','ctm'=>'cairomatrix','fontoptions'=>'cairofontoptions']");
f("CairoScaledFont::extents", "['array']");
f("cairo_scaled_font_extents", "['array','scaledfont'=>'cairoscaledfont']");
f("CairoScaledFont::getCtm", "['CairoMatrix']");
f("cairo_scaled_font_get_ctm", "['CairoMatrix','scaledfont'=>'cairoscaledfont']");
f("cairo_scaled_font_get_font_face", "['CairoFontFace','scaledfont'=>'cairoscaledfont']");
f("CairoScaledFont::getFontFace", "['','context'=>'cairocontext']");
f("cairo_scaled_font_get_font_matrix", "['CairoFontOptions','scaledfont'=>'cairoscaledfont']");
f("CairoScaledFont::getFontMatrix", "['','context'=>'cairocontext']");
f("cairo_scaled_font_get_font_options", "['CairoFontOptions','scaledfont'=>'cairoscaledfont']");
f("CairoScaledFont::getFontOptions", "['','context'=>'cairocontext']");
f("CairoScaledFont::getScaleMatrix", "['']");
f("cairo_scaled_font_get_scale_matrix", "['CairoMatrix','scaledfont'=>'cairoscaledfont']");
f("CairoScaledFont::getType", "['int']");
f("cairo_scaled_font_get_type", "['int','scaledfont'=>'cairoscaledfont']");
f("CairoScaledFont::glyphExtents", "['array','glyphs'=>'string']");
f("cairo_scaled_font_glyph_extents", "['array','scaledfont'=>'cairoscaledfont','glyphs'=>'array']");
f("CairoScaledFont::status", "['int','context'=>'cairocontext']");
f("cairo_scaled_font_status", "['int','scaledfont'=>'cairoscaledfont']");
f("cairo_scaled_font_text_extents", "['array','scaledfont'=>'cairoscaledfont','text'=>'string']");
f("CairoScaledFont::textExtents", "['array','text'=>'string','context'=>'cairocontext']");
f("cairo_scale", "['','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_select_font_face", "['','family'=>'string','slant='=>'string','weight='=>'string','context='=>'cairocontext']");
f("cairo_set_antialias", "['','antialias='=>'string','context='=>'cairocontext']");
f("cairo_set_dash", "['','dashes'=>'array','offset='=>'string','context='=>'cairocontext']");
f("cairo_set_fill_rule", "['','setting'=>'string','context'=>'cairocontext']");
f("cairo_set_font_face", "['','fontface'=>'cairofontface','context'=>'cairocontext']");
f("cairo_set_font_matrix", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("cairo_set_font_options", "['','fontoptions'=>'cairofontoptions','context'=>'cairocontext']");
f("cairo_set_font_size", "['','size'=>'string','context'=>'cairocontext']");
f("cairo_set_line_cap", "['','setting'=>'string','context'=>'cairocontext']");
f("cairo_set_line_join", "['','setting'=>'string','context'=>'cairocontext']");
f("cairo_set_line_width", "['','width'=>'string','context'=>'cairocontext']");
f("cairo_set_matrix", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("cairo_set_miter_limit", "['','limit'=>'string','context'=>'cairocontext']");
f("cairo_set_operator", "['','setting'=>'string','context'=>'cairocontext']");
f("cairo_set_scaled_font", "['','scaledfont'=>'cairoscaledfont','context'=>'cairocontext']");
f("cairo_set_source", "['','red'=>'string','green'=>'string','blue'=>'string','alpha'=>'string','context'=>'cairocontext','pattern'=>'cairopattern']");
f("cairo_set_source_surface", "['','surface'=>'cairosurface','x='=>'string','y='=>'string','context='=>'cairocontext']");
f("cairo_set_tolerance", "['','tolerance'=>'string','context'=>'cairocontext']");
f("cairo_show_page", "['','context'=>'cairocontext']");
f("cairo_show_text", "['','text'=>'string','context'=>'cairocontext']");
f("CairoSolidPattern::__construct", "['','red'=>'float','green'=>'float','blue'=>'float','alpha='=>'float']");
f("CairoSolidPattern::getRgba", "['array']");
f("cairo_status", "['int','context'=>'cairocontext']");
f("cairo_status_to_string", "['string','status'=>'int']");
f("Cairo::statusToString", "['string','status'=>'int']");
f("cairo_stroke", "['','context'=>'cairocontext']");
f("cairo_stroke_extents", "['array','context'=>'cairocontext']");
f("cairo_stroke_preserve", "['','context'=>'cairocontext']");
f("CairoSurface::__construct", "['']");
f("CairoSurface::copyPage", "['','context'=>'cairocontext']");
f("cairo_surface_copy_page", "['','surface'=>'cairosurface']");
f("cairo_surface_create_similar", "['CairoSurface','surface'=>'cairosurface','content'=>'int','width'=>'float','height'=>'float']");
f("CairoSurface::createSimilar", "['','other'=>'cairosurface','content'=>'int','width'=>'string','height'=>'string']");
f("CairoSurface::finish", "['']");
f("cairo_surface_finish", "['','surface'=>'cairosurface']");
f("CairoSurface::flush", "['']");
f("cairo_surface_flush", "['','surface'=>'cairosurface']");
f("CairoSurface::getContent", "['int']");
f("cairo_surface_get_content", "['int','surface'=>'cairosurface']");
f("CairoSurface::getDeviceOffset", "['array']");
f("cairo_surface_get_device_offset", "['array','surface'=>'cairosurface']");
f("cairo_surface_get_font_options", "['CairoFontOptions','surface'=>'cairosurface']");
f("CairoSurface::getFontOptions", "['','context'=>'cairocontext']");
f("CairoSurface::getType", "['int']");
f("cairo_surface_get_type", "['int','surface'=>'cairosurface']");
f("CairoSurface::markDirty", "['']");
f("cairo_surface_mark_dirty_rectangle", "['','surface'=>'cairosurface','x'=>'float','y'=>'float','width'=>'float','height'=>'float']");
f("CairoSurface::markDirtyRectangle", "['','x'=>'string','y'=>'string','width'=>'string','height'=>'string']");
f("cairo_surface_mark_dirty", "['','surface'=>'cairosurface']");
f("CairoSurfacePattern::__construct", "['','surface'=>'CairoSurface']");
f("CairoSurfacePattern::getExtend", "['int']");
f("CairoSurfacePattern::getFilter", "['int']");
f("CairoSurfacePattern::getSurface", "['']");
f("CairoSurfacePattern::setExtend", "['','extend'=>'int']");
f("CairoSurfacePattern::setFilter", "['','filter'=>'string']");
f("cairo_surface_set_device_offset", "['','surface'=>'cairosurface','x'=>'float','y'=>'float']");
f("CairoSurface::setDeviceOffset", "['','x'=>'string','y'=>'string']");
f("cairo_surface_set_fallback_resolution", "['','surface'=>'cairosurface','x'=>'float','y'=>'float']");
f("CairoSurface::setFallbackResolution", "['','x'=>'string','y'=>'string']");
f("CairoSurface::showPage", "['','context'=>'cairocontext']");
f("cairo_surface_show_page", "['','surface'=>'cairosurface']");
f("CairoSurface::status", "['int','context'=>'cairocontext']");
f("cairo_surface_status", "['int','surface'=>'cairosurface']");
f("CairoSurface::writeToPng", "['','file'=>'string']");
f("cairo_surface_write_to_png", "['','surface'=>'cairosurface','stream'=>'']");
f("cairo_svg_get_versions", "['array']");
f("CairoSvgSurface::__construct", "['','file'=>'string','width'=>'float','height'=>'float']");
f("cairo_svg_surface_create", "['CairoSvgSurface','file'=>'string','width'=>'float','height'=>'float']");
f("cairo_svg_surface_get_versions", "['array']");
f("CairoSvgSurface::getVersions", "['array']");
f("cairo_svg_surface_restrict_to_version", "['','surface'=>'cairosvgsurface','version'=>'int']");
f("CairoSvgSurface::restrictToVersion", "['','version'=>'string']");
f("CairoSvgSurface::versionToString", "['string','version'=>'int']");
f("cairo_svg_version_to_string", "['string','version'=>'int']");
f("cairo_text_extents", "['array','text'=>'string','context'=>'cairocontext']");
f("cairo_text_path", "['','string'=>'string','context'=>'cairocontext','text'=>'string']");
f("cairo_transform", "['','matrix'=>'cairomatrix','context'=>'cairocontext']");
f("cairo_translate", "['','tx'=>'string','ty'=>'string','context'=>'cairocontext','x'=>'string','y'=>'string']");
f("cairo_user_to_device", "['array','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_user_to_device_distance", "['array','x'=>'string','y'=>'string','context'=>'cairocontext']");
f("cairo_version", "['int']");
f("Cairo::version", "['int']");
f("cairo_version_string", "['string']");
f("Cairo::versionString", "['string']");
f("calculhmac", "['string','clent'=>'string','data'=>'string']");
f("calcul_hmac", "['string','clent'=>'string','siretcode'=>'string','price'=>'string','reference'=>'string','validity'=>'string','taxation'=>'string','devise'=>'string','language'=>'string']");
f("cal_days_in_month", "['int','calendar'=>'int','month'=>'int','year'=>'int']");
f("cal_from_jd", "['array','jd'=>'int','calendar'=>'int']");
f("cal_info", "['array','calendar='=>'int']");
f("CallbackFilterIterator::accept", "['bool']");
f("CallbackFilterIterator::__construct", "['CallbackFilterIterator','it'=>'iterator','func'=>'callable']");
f("call_user_func_array", "['','function'=>'callable','parameters'=>'array']");
f("call_user_func", "['','function'=>'callable','parameter='=>'','...='=>'']");
f("call_user_method_array", "['','method_name'=>'string','obj'=>'any','params'=>'array']");
f("call_user_method", "['','method_name'=>'string','obj'=>'any','parameter='=>'','...='=>'']");
f("cal_to_jd", "['int','calendar'=>'int','month'=>'int','day'=>'int','year'=>'int']");
f("ceil", "['float|int','number'=>'float']");
f("chdb::__construct", "['','pathname'=>'string']");
f("chdb_create", "['bool','pathname'=>'string','data'=>'array']");
f("chdb::get", "['string','key'=>'string']");
f("chdir", "['bool','directory'=>'string']");
f("checkdate", "['bool','month'=>'int','day'=>'int','year'=>'int']");
f("checkdnsrr", "['bool','host'=>'string','type='=>'string']");
f("chgrp", "['bool','filename'=>'string','group'=>'string|int']");
f("chmod", "['bool','filename'=>'string','mode'=>'int']");
f("chown", "['bool','filename'=>'string','user'=>'string|int']");
f("chroot", "['bool','directory'=>'string']");
f("chr", "['string','ascii'=>'int']");
f("chunk_split", "['string','str'=>'string','chunklen='=>'int','ending='=>'string']");
f("class_alias", "['bool','user_class_name='=>'string','alias_name='=>'string','autoload='=>'bool']");
f("class_exists", "['bool','classname'=>'string','autoload='=>'bool']");
f("class_implements", "['string[]','what'=>'object|string','autoload='=>'bool']");
f("classkit_import", "['array','filename'=>'string']");
f("classkit_method_add", "['bool','classname'=>'string','methodname'=>'string','args'=>'string','code'=>'string','flags='=>'int']");
f("classkit_method_copy", "['bool','dclass'=>'string','dmethod'=>'string','sclass'=>'string','smethod='=>'string']");
f("classkit_method_redefine", "['bool','classname'=>'string','methodname'=>'string','args'=>'string','code'=>'string','flags='=>'int']");
f("classkit_method_remove", "['bool','classname'=>'string','methodname'=>'string']");
f("classkit_method_rename", "['bool','classname'=>'string','methodname'=>'string','newname'=>'string']");
f("class_parents", "['string[]','instance'=>'object|string','autoload='=>'bool']");
f("class_uses", "['string[]','what'=>'object|string','autoload='=>'bool']");
f("clearstatcache", "['','clear_realpath_cache='=>'bool','filename='=>'string']");
f("cli_get_process_title", "['string']");
f("cli_set_process_title", "['bool','arg'=>'string']");
f("ClosedGeneratorException::__clone", "['ClosedGeneratorException|Throwable']");
f("ClosedGeneratorException::getCode", "['int']");
f("ClosedGeneratorException::getFile", "['string']");
f("ClosedGeneratorException::getLine", "['int']");
f("ClosedGeneratorException::getMessage", "['string']");
f("ClosedGeneratorException::getPrevious", "['Throwable|ClosedGeneratorException']");
f("ClosedGeneratorException::getTrace", "['array']");
f("ClosedGeneratorException::getTraceAsString", "['string']");
f("ClosedGeneratorException::__toString", "['string']");
f("closedir", "['','dir_handle='=>'']");
f("closelog", "['bool']");
f("Closure::bind", "['Closure','old'=>'Closure','to'=>'object|null','scope='=>'object|string']");
f("Closure::bindTo", "['Closure','new'=>'object|null','newscope='=>'object|string']");
f("Closure::call", "['Closure','to'=>'any','parameter='=>'','...='=>'']");
f("Closure::__construct", "['']");
f("Closure::__invoke", "['','...='=>'']");
f("Collator::asort", "['bool','arr'=>'array','sort_flag='=>'int']");
f("collator_asort", "['bool','coll='=>'collator','arr'=>'array','sort_flag='=>'int']");
f("collator_compare", "['int','coll'=>'collator','str1'=>'string','str2'=>'string']");
f("Collator::compare", "['int','str1'=>'string','str2'=>'string']");
f("Collator::__construct", "['Collator','locale'=>'string']");
f("collator_create", "['Collator','locale'=>'string']");
f("Collator::create", "['Collator','locale'=>'string']");
f("Collator::getAttribute", "['int','attr'=>'int']");
f("collator_get_attribute", "['int','coll'=>'collator','attr'=>'int']");
f("Collator::getErrorCode", "['int']");
f("collator_get_error_code", "['int','coll'=>'collator']");
f("Collator::getErrorMessage", "['string']");
f("collator_get_error_message", "['string','coll'=>'collator']");
f("collator_get_locale", "['string','coll'=>'collator','type'=>'int']");
f("Collator::getLocale", "['string','type'=>'int']");
f("collator_get_sort_key", "['string','coll'=>'collator','str'=>'string']");
f("Collator::getSortKey", "['string','str='=>'string']");
f("Collator::getStrength", "['int']");
f("collator_get_strength", "['int','coll'=>'collator']");
f("Collator::setAttribute", "['bool','attr'=>'int','val'=>'int']");
f("collator_set_attribute", "['bool','coll'=>'collator','attr'=>'int','val'=>'int']");
f("collator_set_strength", "['bool','coll'=>'collator','strength'=>'int']");
f("Collator::setStrength", "['bool','strength'=>'int']");
f("Collator::sort", "['bool','arr'=>'array','sort_flags='=>'int']");
f("collator_sort", "['bool','coll='=>'collator','arr'=>'array','sort_flag='=>'int']");
f("Collator::sortWithSortKeys", "['bool','arr'=>'array']");
f("collator_sort_with_sort_keys", "['bool','coll'=>'collator','arr'=>'array']");
f("Collectable::isGarbage", "['bool']");
f("Collectable::setGarbage", "['void']");
f("com_addref", "['']");
f("COM::__construct", "['','module_name'=>'string','server_name='=>'mixed','codepage='=>'int','typelib='=>'string']");
f("com_create_guid", "['string']");
f("com_event_sink", "['bool','comobject'=>'any','sinkobject'=>'any','sinkinterface='=>'']");
f("com_get_active_object", "['any','progid'=>'string','code_page='=>'int']");
f("com_isenum", "['bool','com_module'=>'variant']");
f("com_load_typelib", "['bool','typelib_name'=>'string','case_insensitive='=>'int']");
f("com_message_pump", "['bool','timeoutms='=>'int']");
f("compact", "['array','var_names'=>'','...='=>'']");
f("COMPersistHelper::__construct", "['COMPersistHelper','com_object'=>'any']");
f("COMPersistHelper::GetCurFile", "['string']");
f("COMPersistHelper::GetMaxStreamSize", "['int']");
f("COMPersistHelper::InitNew", "['int']");
f("COMPersistHelper::LoadFromFile", "['bool','filename'=>'string','flags'=>'int']");
f("COMPersistHelper::LoadFromStream", "['','stream'=>'']");
f("COMPersistHelper::SaveToFile", "['bool','filename'=>'string','remember'=>'bool']");
f("COMPersistHelper::SaveToStream", "['int','stream'=>'']");
f("com_print_typeinfo", "['bool','comobject_or_typelib'=>'','dispinterface='=>'string','wantsink='=>'bool']");
f("com_release", "['']");
f("Cond::broadcast", "['bool','condition'=>'long']");
f("Cond::create", "['long']");
f("Cond::destroy", "['bool','condition'=>'long']");
f("Cond::signal", "['bool','condition'=>'long']");
f("Cond::wait", "['bool','condition'=>'long','mutex'=>'long','timeout='=>'long']");
f("connection_aborted", "['int']");
f("connection_status", "['int']");
f("connection_timeout", "['int']");
f("constant", "['','const_name'=>'string']");
f("convert_cyr_string", "['string','str'=>'string','from'=>'string','to'=>'string']");
f("convert_uudecode", "['string','data'=>'string']");
f("convert_uuencode", "['string','data'=>'string']");
f("copy", "['bool','source_file'=>'string','destination_file'=>'string','context='=>'']");
f("cos", "['float','number'=>'float']");
f("cosh", "['float','number'=>'float']");
f("Countable::count", "['int']");
f("count_chars", "['','input'=>'string','mode='=>'int']");
f("count", "['int','var'=>'array|Countable','mode='=>'int']");
f("crack_check", "['bool','dictionary'=>'','password'=>'string']");
f("crack_closedict", "['bool','dictionary='=>'']");
f("crack_getlastmessage", "['string']");
f("crack_opendict", "['resource','dictionary'=>'string']");
f("crash", "['']");
f("crc32", "['int','str'=>'string']");
f("create_function", "['string','args'=>'string','code'=>'string']");
f("crypt", "['string','str'=>'string','salt='=>'string']");
f("ctype_alnum", "['bool','c'=>'']");
f("ctype_alpha", "['bool','c'=>'']");
f("ctype_cntrl", "['bool','c'=>'']");
f("ctype_digit", "['bool','c'=>'']");
f("ctype_graph", "['bool','c'=>'']");
f("ctype_lower", "['bool','c'=>'']");
f("ctype_print", "['bool','c'=>'']");
f("ctype_punct", "['bool','c'=>'']");
f("ctype_space", "['bool','c'=>'']");
f("ctype_upper", "['bool','c'=>'']");
f("ctype_xdigit", "['bool','c'=>'']");
f("cubrid_affected_rows", "['int','req_identifier='=>'']");
f("cubrid_bind", "['bool','req_identifier'=>'','bind_param'=>'','bind_value'=>'','bind_value_type='=>'string']");
f("cubrid_client_encoding", "['string','conn_identifier='=>'']");
f("cubrid_close", "['bool','conn_identifier='=>'']");
f("cubrid_close_prepare", "['int','req_identifier'=>'']");
f("cubrid_close_request", "['bool','req_identifier'=>'']");
f("cubrid_col_get", "['array','conn_identifier'=>'','oid'=>'string','attr_name'=>'string']");
f("cubrid_col_size", "['int','conn_identifier'=>'','oid'=>'string','attr_name'=>'string']");
f("cubrid_column_names", "['array','req_identifier'=>'']");
f("cubrid_column_types", "['array','req_identifier'=>'']");
f("cubrid_commit", "['bool','conn_identifier'=>'']");
f("cubrid_connect", "['resource','host'=>'string','port'=>'int','dbname'=>'string','userid='=>'string','passwd='=>'string']");
f("cubrid_connect_with_url", "['resource','conn_url'=>'string','userid='=>'string','passwd='=>'string']");
f("cubrid_current_oid", "['string','req_identifier'=>'']");
f("cubrid_data_seek", "['int','req_identifier'=>'','row_number'=>'int']");
f("cubrid_db_name", "['string','result'=>'array','index'=>'int']");
f("cubrid_disconnect", "['bool','conn_identifier'=>'']");
f("cubrid_drop", "['bool','conn_identifier'=>'','oid'=>'string']");
f("cubrid_errno", "['int','conn_identifier='=>'']");
f("cubrid_error_code_facility", "['int']");
f("cubrid_error_code", "['int']");
f("cubrid_error_msg", "['string']");
f("cubrid_error", "['string','connection='=>'']");
f("cubrid_execute", "['bool','conn_identifier'=>'','sql'=>'string','option='=>'int','request_identifier='=>'']");
f("cubrid_fetch_array", "['array','result'=>'','type='=>'int']");
f("cubrid_fetch_assoc", "['array','result'=>'']");
f("cubrid_fetch_field", "['any','result'=>'','field_offset='=>'int']");
f("cubrid_fetch_lengths", "['array','result'=>'']");
f("cubrid_fetch_object", "['any','result'=>'','class_name='=>'string','params='=>'array']");
f("cubrid_fetch", "['','result'=>'','type='=>'int']");
f("cubrid_fetch_row", "['array','result'=>'']");
f("cubrid_field_flags", "['string','result'=>'','field_offset'=>'int']");
f("cubrid_field_len", "['int','result'=>'','field_offset'=>'int']");
f("cubrid_field_name", "['string','result'=>'','field_offset'=>'int']");
f("cubrid_field_seek", "['bool','result'=>'','field_offset='=>'int']");
f("cubrid_field_table", "['string','result'=>'','field_offset'=>'int']");
f("cubrid_field_type", "['string','result'=>'','field_offset'=>'int']");
f("cubrid_free_result", "['bool','req_identifier'=>'']");
f("cubrid_get_autocommit", "['bool','conn_identifier'=>'']");
f("cubrid_get_charset", "['string','conn_identifier'=>'']");
f("cubrid_get_class_name", "['string','conn_identifier'=>'','oid'=>'string']");
f("cubrid_get_client_info", "['string']");
f("cubrid_get", "['','conn_identifier'=>'','oid'=>'string','attr='=>'']");
f("cubrid_get_db_parameter", "['array','conn_identifier'=>'']");
f("cubrid_get_query_timeout", "['int','req_identifier'=>'resource']");
f("cubrid_get_server_info", "['string','conn_identifier'=>'']");
f("cubrid_insert_id", "['string','conn_identifier='=>'']");
f("cubrid_is_instance", "['int','conn_identifier'=>'','oid'=>'string']");
f("cubrid_list_dbs", "['array','conn_identifier'=>'']");
f("cubrid_load_from_glo", "['int','conn_identifier'=>'','oid'=>'string','file_name'=>'string']");
f("cubrid_lob2_bind", "['bool','req_identifier'=>'resource','bind_index'=>'int','bind_value'=>'mixed','bind_value_type='=>'string']");
f("cubrid_lob2_close", "['bool','lob_identifier'=>'resource']");
f("cubrid_lob2_export", "['bool','lob_identifier'=>'resource','file_name'=>'string']");
f("cubrid_lob2_import", "['bool','lob_identifier'=>'resource','file_name'=>'string']");
f("cubrid_lob2_new", "['resource','conn_identifier='=>'resource','type='=>'string']");
f("cubrid_lob2_read", "['string','lob_identifier'=>'resource','len'=>'int']");
f("cubrid_lob2_seek64", "['bool','lob_identifier'=>'resource','offset'=>'string','origin='=>'int']");
f("cubrid_lob2_seek", "['bool','lob_identifier'=>'resource','offset'=>'int','origin='=>'int']");
f("cubrid_lob2_size64", "['string','lob_identifier'=>'resource']");
f("cubrid_lob2_size", "['int','lob_identifier'=>'resource']");
f("cubrid_lob2_tell64", "['string','lob_identifier'=>'resource']");
f("cubrid_lob2_tell", "['int','lob_identifier'=>'resource']");
f("cubrid_lob2_write", "['bool','lob_identifier'=>'resource','buf'=>'string']");
f("cubrid_lob_close", "['bool','lob_identifier_array'=>'array']");
f("cubrid_lob_export", "['bool','conn_identifier'=>'','lob_identifier'=>'','path_name'=>'string']");
f("cubrid_lob_get", "['array','conn_identifier'=>'','sql'=>'string']");
f("cubrid_lob_send", "['bool','conn_identifier'=>'','lob_identifier'=>'']");
f("cubrid_lob_size", "['string','lob_identifier'=>'']");
f("cubrid_lock_read", "['bool','conn_identifier'=>'','oid'=>'string']");
f("cubrid_lock_write", "['bool','conn_identifier'=>'','oid'=>'string']");
f("cubrid_move_cursor", "['int','req_identifier'=>'','offset'=>'int','origin='=>'int']");
f("cubrid_new_glo", "['string','conn_identifier'=>'','class_name'=>'string','file_name'=>'string']");
f("cubrid_next_result", "['bool','result'=>'']");
f("cubrid_num_cols", "['int','req_identifier'=>'']");
f("cubrid_num_fields", "['int','result'=>'']");
f("cubrid_num_rows", "['int','req_identifier'=>'']");
f("cubrid_pconnect", "['resource','host'=>'string','port'=>'int','dbname'=>'string','userid='=>'string','passwd='=>'string']");
f("cubrid_pconnect_with_url", "['resource','conn_url'=>'string','userid='=>'string','passwd='=>'string']");
f("cubrid_ping", "['bool','conn_identifier='=>'']");
f("cubrid_prepare", "['resource','conn_identifier'=>'','prepare_stmt'=>'string','option='=>'int']");
f("cubrid_put", "['int','conn_identifier'=>'','oid'=>'string','attr='=>'string','value='=>'']");
f("cubrid_query", "['resource','query'=>'string','conn_identifier='=>'']");
f("cubrid_real_escape_string", "['string','unescaped_string'=>'string','conn_identifier='=>'']");
f("cubrid_result", "['string','result'=>'','row'=>'int','field='=>'']");
f("cubrid_rollback", "['bool','conn_identifier'=>'']");
f("cubrid_save_to_glo", "['int','conn_identifier'=>'','oid'=>'string','file_name'=>'string']");
f("cubrid_schema", "['array','conn_identifier'=>'','schema_type'=>'int','class_name='=>'string','attr_name='=>'string']");
f("cubrid_send_glo", "['int','conn_identifier'=>'','oid'=>'string']");
f("cubrid_seq_drop", "['bool','conn_identifier'=>'','oid'=>'string','attr_name'=>'string','index'=>'int']");
f("cubrid_seq_insert", "['bool','conn_identifier'=>'','oid'=>'string','attr_name'=>'string','index'=>'int','seq_element'=>'string']");
f("cubrid_seq_put", "['bool','conn_identifier'=>'','oid'=>'string','attr_name'=>'string','index'=>'int','seq_element'=>'string']");
f("cubrid_set_add", "['bool','conn_identifier'=>'','oid'=>'string','attr_name'=>'string','set_element'=>'string']");
f("cubrid_set_autocommit", "['bool','conn_identifier'=>'','mode'=>'bool']");
f("cubrid_set_db_parameter", "['bool','conn_identifier'=>'','param_type'=>'int','param_value'=>'int']");
f("cubrid_set_drop", "['bool','conn_identifier'=>'','oid'=>'string','attr_name'=>'string','set_element'=>'string']");
f("cubrid_set_query_timeout", "['bool','req_identifier'=>'resource','timeout'=>'int']");
f("cubrid_unbuffered_query", "['resource','query'=>'string','conn_identifier='=>'']");
f("cubrid_version", "['string']");
f("curl_close", "['','ch'=>'']");
f("curl_copy_handle", "['resource','ch'=>'']");
f("curl_errno", "['int','ch'=>'']");
f("curl_error", "['string','ch'=>'']");
f("curl_escape", "['','ch'=>'','str'=>'string']");
f("curl_exec", "['bool|string','ch'=>'']");
f("CURLFile::__construct", "['CURLFile','filename'=>'string','mimetype='=>'string','postfilename='=>'string']");
f("curl_file_create", "['CURLFile','filename'=>'string','mimetype='=>'string','postfilename='=>'string']");
f("CURLFile::getFilename", "['string']");
f("CURLFile::getMimeType", "['string']");
f("CURLFile::getPostFilename", "['string']");
f("CURLFile::setMimeType", "['','mime'=>'string']");
f("CURLFile::setPostFilename", "['','name'=>'string']");
f("CURLFile::__wakeup", "['']");
f("curl_getinfo", "['mixed','ch'=>'resource','option='=>'int']");
f("curl_init", "['resource','url='=>'string']");
f("curl_multi_add_handle", "['int','mh'=>'resource','ch'=>'']");
f("curl_multi_close", "['','mh'=>'resource']");
f("curl_multi_exec", "['int','mh'=>'resource','&still_running'=>'int']");
f("curl_multi_getcontent", "['string','ch'=>'resource']");
f("curl_multi_info_read", "['array','mh'=>'resource','msgs_in_queue='=>'int']");
f("curl_multi_init", "['resource']");
f("curl_multi_remove_handle", "['int','mh'=>'resource','ch'=>'']");
f("curl_multi_select", "['int','mh'=>'resource','timeout='=>'float']");
f("curl_multi_setopt", "['bool','mh'=>'resource','option'=>'int','value'=>'']");
f("curl_multi_strerror", "['string','code'=>'int']");
f("curl_pause", "['int','ch'=>'resource','bitmask'=>'int']");
f("curl_reset", "['','ch'=>'resource']");
f("curl_setopt_array", "['bool','ch'=>'resource','options'=>'array']");
f("curl_setopt", "['bool','ch'=>'resource','option'=>'int','value'=>'']");
f("curl_share_close", "['','sh'=>'resource']");
f("curl_share_init", "['resource']");
f("curl_share_setopt", "['bool','sh'=>'resource','option'=>'int','value'=>'']");
f("curl_strerror", "['string','code'=>'int']");
f("curl_unescape", "['string','ch'=>'resource','str'=>'string']");
f("curl_version", "['array','version='=>'int']");
f("current", "['','array_arg'=>'array']");
f("cyrus_authenticate", "['','connection'=>'','mechlist='=>'string','service='=>'string','user='=>'string','minssf='=>'int','maxssf='=>'int','authname='=>'string','password='=>'string']");
f("cyrus_bind", "['bool','connection'=>'','callbacks'=>'array']");
f("cyrus_close", "['bool','connection'=>'']");
f("cyrus_connect", "['resource','host='=>'string','port='=>'string','flags='=>'int']");
f("cyrus_query", "['array','connection'=>'','query'=>'string']");
f("cyrus_unbind", "['bool','connection'=>'','trigger_name'=>'string']");
f("date_default_timezone_get", "['string']");
f("date_default_timezone_set", "['bool','timezone_identifier'=>'string']");
f("date_diff", "['DateInterval','obj1'=>'DateTime','obj2'=>'DateTime','absolute='=>'bool']");
f("datefmt_create", "['IntlDateFormatter','locale'=>'string','datetype'=>'int','timetype'=>'int','timezone='=>'int','calendar='=>'int|IntlCalendar','pattern='=>'string']");
f("datefmt_format_object", "['string','any'=>'any','format='=>'mixed','locale='=>'string']");
f("datefmt_format", "['string','fmt'=>'intldateFormatter','value'=>'DateTime|IntlCalendar|array|int']");
f("datefmt_get_calendar", "['int','fmt'=>'intldateformatter']");
f("datefmt_get_calendar_object", "['IntlCalendar']");
f("datefmt_get_datetype", "['int','fmt'=>'intldateformatter']");
f("datefmt_get_error_code", "['int','fmt'=>'intldateformatter']");
f("datefmt_get_error_message", "['string','fmt'=>'intldateformatter']");
f("datefmt_get_locale", "['string','fmt'=>'intldateformatter','which='=>'int']");
f("datefmt_get_pattern", "['string','fmt'=>'intldateformatter']");
f("datefmt_get_timetype", "['int','fmt'=>'intldateformatter']");
f("datefmt_get_timezone_id", "['string','fmt'=>'intldateformatter']");
f("datefmt_get_timezone", "['IntlTimeZone']");
f("datefmt_is_lenient", "['bool','fmt'=>'intldateformatter']");
f("datefmt_localtime", "['array|bool','fmt'=>'intldateformatter','text_to_parse='=>'string','parse_pos='=>'int']");
f("datefmt_parse", "['int|false','fmt'=>'intldateformatter','text_to_parse='=>'string','parse_pos='=>'int']");
f("datefmt_set_calendar", "['bool','fmt'=>'intldateformatter','which'=>'int']");
f("datefmt_set_lenient", "['bool|null','fmt'=>'intldateformatter','lenient'=>'bool']");
f("datefmt_set_pattern", "['bool','fmt'=>'intldateformatter','pattern'=>'string']");
f("datefmt_set_timezone", "['bool','zone'=>'mixed']");
f("datefmt_set_timezone_id", "['bool','fmt'=>'intldateformatter','zone'=>'string']");
f("date_format", "['string','obj'=>'DateTime','format'=>'string']");
f("DateInterval::__construct", "['DateInterval','spec'=>'string']");
f("DateInterval::createFromDateString", "['DateInterval','time'=>'string']");
f("DateInterval::format", "['string','format'=>'string']");
f("DateInterval::__set_state", "['DateInterval','array'=>'array']");
f("DateInterval::__wakeup", "['DateInterval']");
f("date_offset_get", "['int','obj'=>'DateTime']");
f("date_parse", "['array','date'=>'string']");
f("date_parse_from_format", "['array','format'=>'string','date'=>'string']");
f("DatePeriod::__construct\\'1", "['DatePeriod','start'=>'any','interval'=>'DateInterval','end'=>'any','options='=>'int']");
f("DatePeriod::__construct\\'2", "['DatePeriod','iso'=>'string','options='=>'int']");
f("DatePeriod::__construct", "['DatePeriod','start'=>'any','interval'=>'DateInterval','recur'=>'int','options='=>'int']");
f("DatePeriod::__wakeup", "['DatePeriod']");
f("date", "['string','format'=>'string','timestamp='=>'int']");
f("date_sun_info", "['array','time'=>'int','latitude'=>'float','longitude'=>'float']");
f("date_sunrise", "['','time'=>'','format='=>'int','latitude='=>'float','longitude='=>'float','zenith='=>'float','gmt_offset='=>'float']");
f("date_sunset", "['','time'=>'','format='=>'int','latitude='=>'float','longitude='=>'float','zenith='=>'float','gmt_offset='=>'float']");
f("DateTime::add", "['DateTime','interval'=>'DateInterval']");
f("DateTime::__construct", "['DateTime','time='=>'string|null','timezone='=>'DateTimeZone|null']");
f("DateTime::createFromFormat", "['DateTime','format'=>'string','time'=>'string','timezone='=>'DateTimeZone']");
f("DateTime::diff", "['DateInterval','datetime2'=>'DateTime','absolute='=>'bool']");
f("DateTime::format", "['string|false','format'=>'string']");
f("DateTime::getLastErrors", "['array']");
f("DateTime::getOffset", "['int']");
f("DateTime::getTimestamp", "['int']");
f("DateTime::getTimezone", "['DateTimeZone','object='=>'DateTime']");
f("DateTimeImmutable::add", "['DateTimeImmutable','interval'=>'DateInterval']");
f("DateTimeImmutable::__construct", "['DateTimeImmutable','time='=>'string','timezone='=>'DateTimeZone']");
f("DateTimeImmutable::createFromFormat", "['DateTimeImmutable','format'=>'string','time'=>'string','timezone='=>'DateTimeZone']");
f("DateTimeImmutable::createFromMutable", "['DateTimeImmutable','datetime'=>'DateTime']");
f("DateTimeImmutable::diff", "['DateInterval','datetime2'=>'DateTime','absolute='=>'bool']");
f("DateTimeImmutable::format", "['string|false','format'=>'string']");
f("DateTimeImmutable::getLastErrors", "['array']");
f("DateTimeImmutable::getOffset", "['int']");
f("DateTimeImmutable::getTimestamp", "['int']");
f("DateTimeImmutable::getTimezone", "['DateTimeZone','any'=>'DateTime']");
f("DateTimeImmutable::modify", "['DateTimeImmutable','modify'=>'string']");
f("DateTimeImmutable::setDate", "['DateTimeImmutable','year'=>'int','month'=>'int','day'=>'int']");
f("DateTimeImmutable::setISODate", "['DateTimeImmutable','year'=>'int','week'=>'int','day='=>'int']");
f("DateTimeImmutable::__set_state", "['DateTimeImmutable','array'=>'array']");
f("DateTimeImmutable::setTime", "['DateTimeImmutable','hour'=>'int','minute'=>'int','second='=>'int']");
f("DateTimeImmutable::setTimestamp", "['DateTimeImmutable','unixtimestamp'=>'int']");
f("DateTimeImmutable::setTimezone", "['DateTimeImmutable','timezone'=>'DateTimeZone']");
f("DateTimeImmutable::sub", "['DateTimeImmutable','interval'=>'DateInterval']");
f("DateTimeImmutable::__wakeup", "['DateTimeImmutable']");
f("DateTime::modify", "['DateTime','modify'=>'string']");
f("DateTime::setDate", "['DateTime','year'=>'int','month'=>'int','day'=>'int']");
f("DateTime::setISODate", "['DateTime','year'=>'int','week'=>'int','day='=>'int']");
f("DateTime::__set_state", "['DateTime','array'=>'array']");
f("DateTime::setTime", "['DateTime','hour'=>'int','minute'=>'int','second='=>'int']");
f("DateTime::setTimestamp", "['DateTime','unixtimestamp'=>'int']");
f("DateTime::setTimezone", "['DateTime','timezone'=>'DateTimeZone']");
f("date_timestamp_get", "['int','obj'=>'DateTime']");
f("DateTime::sub", "['DateTime','interval'=>'DateInterval']");
f("DateTime::__wakeup", "['DateTime']");
f("DateTimeZone::__construct", "['DateTimeZone','timezone'=>'string']");
f("date_timezone_get", "['DateTimeZone','obj'=>'DateTime']");
f("DateTimeZone::getLocation", "['array','object='=>'DateTimeZone']");
f("DateTimeZone::getName", "['string','object='=>'DateTimeZone']");
f("DateTimeZone::getOffset", "['int','datetime'=>'DateTime']");
f("DateTimeZone::getTransitions", "['array','timestamp_begin='=>'int','timestamp_end='=>'int','object='=>'DateTimeZone']");
f("DateTimeZone::listAbbreviations", "['array']");
f("DateTimeZone::listIdentifiers", "['array','what='=>'int','country='=>'string']");
f("DateTimeZone::__set_state", "['DateTimeZone','array'=>'array']");
f("DateTimeZone::__wakeup", "['DateTimeZone']");
f("db2_autocommit", "['','connection'=>'','value='=>'bool']");
f("db2_bind_param", "['bool','stmt'=>'','parameter-number'=>'int','variable-name'=>'string','parameter-type='=>'int','data-type='=>'int','precision='=>'int','scale='=>'int']");
f("db2_client_info", "['any','connection'=>'']");
f("db2_close", "['bool','connection'=>'']");
f("db2_column_privileges", "['resource','connection'=>'','qualifier='=>'string','schema='=>'string','table-name='=>'string','column-name='=>'string']");
f("db2_columns", "['resource','connection'=>'','qualifier='=>'string','schema='=>'string','table-name='=>'string','column-name='=>'string']");
f("db2_commit", "['bool','connection'=>'']");
f("db2_connect", "['resource','database'=>'string','username'=>'string','password'=>'string','options='=>'array']");
f("db2_conn_errormsg", "['string','connection='=>'']");
f("db2_conn_error", "['string','connection='=>'']");
f("db2_cursor_type", "['int','stmt'=>'']");
f("db2_escape_string", "['string','string_literal'=>'string']");
f("db2_exec", "['resource','connection'=>'','statement'=>'string','options='=>'array']");
f("db2_execute", "['bool','stmt'=>'','parameters='=>'array']");
f("db2_fetch_array", "['array','stmt'=>'','row_number='=>'int']");
f("db2_fetch_assoc", "['array','stmt'=>'','row_number='=>'int']");
f("db2_fetch_both", "['array','stmt'=>'','row_number='=>'int']");
f("db2_fetch_object", "['any','stmt'=>'','row_number='=>'int']");
f("db2_fetch_row", "['bool','stmt'=>'','row_number='=>'int']");
f("db2_field_display_size", "['int','stmt'=>'','column'=>'']");
f("db2_field_name", "['string','stmt'=>'','column'=>'']");
f("db2_field_num", "['int','stmt'=>'','column'=>'']");
f("db2_field_precision", "['int','stmt'=>'','column'=>'']");
f("db2_field_scale", "['int','stmt'=>'','column'=>'']");
f("db2_field_type", "['string','stmt'=>'','column'=>'']");
f("db2_field_width", "['int','stmt'=>'','column'=>'']");
f("db2_foreign_keys", "['resource','connection'=>'','qualifier'=>'string','schema'=>'string','table-name'=>'string']");
f("db2_free_result", "['bool','stmt'=>'']");
f("db2_free_stmt", "['bool','stmt'=>'']");
f("db2_get_option", "['string','resource'=>'','option'=>'string']");
f("db2_last_insert_id", "['string','resource'=>'']");
f("db2_lob_read", "['string','stmt'=>'','colnum'=>'int','length'=>'int']");
f("db2_next_result", "['resource','stmt'=>'']");
f("db2_num_fields", "['int','stmt'=>'']");
f("db2_num_rows", "['bool','stmt'=>'']");
f("db2_pclose", "['bool','resource'=>'']");
f("db2_pconnect", "['resource','database'=>'string','username'=>'string','password'=>'string','options='=>'array']");
f("db2_prepare", "['resource','connection'=>'','statement'=>'string','options='=>'array']");
f("db2_primary_keys", "['resource','connection'=>'','qualifier'=>'string','schema'=>'string','table-name'=>'string']");
f("db2_procedure_columns", "['resource','connection'=>'','qualifier'=>'string','schema'=>'string','procedure'=>'string','parameter'=>'string']");
f("db2_procedures", "['resource','connection'=>'','qualifier'=>'string','schema'=>'string','procedure'=>'string']");
f("db2_result", "['','stmt'=>'','column'=>'']");
f("db2_rollback", "['bool','connection'=>'']");
f("db2_server_info", "['any','connection'=>'']");
f("db2_set_option", "['bool','resource'=>'','options'=>'array','type'=>'int']");
f("db2_special_columns", "['resource','connection'=>'','qualifier'=>'string','schema'=>'string','table_name'=>'string','scope'=>'int']");
f("db2_statistics", "['resource','connection'=>'','qualifier'=>'string','schema'=>'string','table-name'=>'string','unique'=>'bool']");
f("db2_stmt_errormsg", "['string','stmt='=>'']");
f("db2_stmt_error", "['string','stmt='=>'']");
f("db2_table_privileges", "['resource','connection'=>'','qualifier='=>'string','schema='=>'string','table_name='=>'string']");
f("db2_tables", "['resource','connection'=>'','qualifier='=>'string','schema='=>'string','table-name='=>'string','table-type='=>'string']");
f("dba_close", "['','handle'=>'']");
f("dba_delete", "['bool','key'=>'string','handle'=>'']");
f("dba_exists", "['bool','key'=>'string','handle'=>'']");
f("dba_fetch\\'1", "['string','key'=>'string','handle'=>'resource']");
f("dba_fetch", "['string','key'=>'string','skip'=>'int','handle'=>'resource']");
f("dba_firstkey", "['string','handle'=>'']");
f("dba_handlers", "['array','full_info='=>'bool']");
f("dba_insert", "['bool','key'=>'string','value'=>'string','handle'=>'']");
f("dba_key_split", "['array|false','key'=>'string']");
f("dba_list", "['array']");
f("dba_nextkey", "['string','handle'=>'']");
f("dba_open", "['resource','path'=>'string','mode'=>'string','handlername='=>'string','...='=>'string']");
f("dba_optimize", "['bool','handle'=>'']");
f("dba_popen", "['resource','path'=>'string','mode'=>'string','handlername='=>'string','...='=>'string']");
f("dba_replace", "['bool','key'=>'string','value'=>'string','handle'=>'']");
f("dbase_add_record", "['bool','dbase_identifier'=>'int','record'=>'array']");
f("dbase_close", "['bool','dbase_identifier'=>'int']");
f("dbase_create", "['int','filename'=>'string','fields'=>'array']");
f("dbase_delete_record", "['bool','dbase_identifier'=>'int','record_number'=>'int']");
f("dbase_get_header_info", "['array','dbase_identifier'=>'int']");
f("dbase_get_record", "['array','dbase_identifier'=>'int','record_number'=>'int']");
f("dbase_get_record_with_names", "['array','dbase_identifier'=>'int','record_number'=>'int']");
f("dbase_numfields", "['int','dbase_identifier'=>'int']");
f("dbase_numrecords", "['int','dbase_identifier'=>'int']");
f("dbase_open", "['int','filename'=>'string','mode'=>'int']");
f("dbase_pack", "['bool','dbase_identifier'=>'int']");
f("dbase_replace_record", "['bool','dbase_identifier'=>'int','record'=>'array','record_number'=>'int']");
f("dba_sync", "['bool','handle'=>'']");
f("dbplus_add", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_aql", "['resource','query'=>'string','server='=>'string','dbpath='=>'string']");
f("dbplus_chdir", "['string','newdir='=>'string']");
f("dbplus_close", "['','relation'=>'']");
f("dbplus_curr", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_errcode", "['string','errno='=>'int']");
f("dbplus_errno", "['int']");
f("dbplus_find", "['int','relation'=>'','constraints'=>'array','tuple'=>'']");
f("dbplus_first", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_flush", "['int','relation'=>'']");
f("dbplus_freealllocks", "['int']");
f("dbplus_freelock", "['int','relation'=>'','tuple'=>'string']");
f("dbplus_freerlocks", "['int','relation'=>'']");
f("dbplus_getlock", "['int','relation'=>'','tuple'=>'string']");
f("dbplus_getunique", "['int','relation'=>'','uniqueid'=>'int']");
f("dbplus_info", "['int','relation'=>'','key'=>'string','result'=>'array']");
f("dbplus_last", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_lockrel", "['int','relation'=>'']");
f("dbplus_next", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_open", "['resource','name'=>'string']");
f("dbplus_prev", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_rchperm", "['int','relation'=>'','mask'=>'int','user'=>'string','group'=>'string']");
f("dbplus_rcreate", "['resource','name'=>'string','domlist'=>'','overwrite='=>'bool']");
f("dbplus_rcrtexact", "['','name'=>'string','relation'=>'','overwrite='=>'bool']");
f("dbplus_rcrtlike", "['','name'=>'string','relation'=>'','overwrite='=>'int']");
f("dbplus_resolve", "['array','relation_name'=>'string']");
f("dbplus_restorepos", "['int','relation'=>'','tuple'=>'array']");
f("dbplus_rkeys", "['','relation'=>'','domlist'=>'']");
f("dbplus_ropen", "['resource','name'=>'string']");
f("dbplus_rquery", "['resource','query'=>'string','dbpath='=>'string']");
f("dbplus_rrename", "['int','relation'=>'','name'=>'string']");
f("dbplus_rsecindex", "['','relation'=>'','domlist'=>'','type'=>'int']");
f("dbplus_runlink", "['int','relation'=>'']");
f("dbplus_rzap", "['int','relation'=>'']");
f("dbplus_savepos", "['int','relation'=>'']");
f("dbplus_setindexbynumber", "['int','relation'=>'','idx_number'=>'int']");
f("dbplus_setindex", "['int','relation'=>'','idx_name'=>'string']");
f("dbplus_sql", "['resource','query'=>'string','server='=>'string','dbpath='=>'string']");
f("dbplus_tcl", "['string','sid'=>'int','script'=>'string']");
f("dbplus_tremove", "['int','relation'=>'','tuple'=>'array','current='=>'array']");
f("dbplus_undo", "['int','relation'=>'']");
f("dbplus_undoprepare", "['int','relation'=>'']");
f("dbplus_unlockrel", "['int','relation'=>'']");
f("dbplus_unselect", "['int','relation'=>'']");
f("dbplus_update", "['int','relation'=>'','old'=>'array','new'=>'array']");
f("dbplus_xlockrel", "['int','relation'=>'']");
f("dbplus_xunlockrel", "['int','relation'=>'']");
f("dbx_close", "['int','link_identifier'=>'any']");
f("dbx_compare", "['int','row_a'=>'array','row_b'=>'array','column_key'=>'string','flags='=>'int']");
f("dbx_connect", "['any','module'=>'','host'=>'string','database'=>'string','username'=>'string','password'=>'string','persistent='=>'int']");
f("dbx_error", "['string','link_identifier'=>'any']");
f("dbx_escape_string", "['string','link_identifier'=>'any','text'=>'string']");
f("dbx_fetch_row", "['','result_identifier'=>'any']");
f("dbx_query", "['','link_identifier'=>'any','sql_statement'=>'string','flags='=>'int']");
f("dbx_sort", "['bool','result'=>'any','user_compare_function'=>'string']");
f("dcgettext", "['string','domain_name'=>'string','msgid'=>'string','category'=>'int']");
f("dcngettext", "['string','domain'=>'string','msgid1'=>'string','msgid2'=>'string','n'=>'int','category'=>'int']");
f("deaggregate", "['','any'=>'any','class_name='=>'string']");
f("debug_backtrace", "['array','options='=>'int|bool','limit='=>'int']");
f("debug_print_backtrace", "['','options='=>'int|bool','limit='=>'int']");
f("debug_zval_dump", "['','var'=>'']");
f("decbin", "['string','decimal_number'=>'int']");
f("dechex", "['string','decimal_number'=>'int']");
f("decoct", "['string','decimal_number'=>'int']");
f("define", "['bool','constant_name'=>'string','value'=>'','case_insensitive='=>'bool']");
f("defined", "['bool','name'=>'string']");
f("define_syslog_variables", "['']");
f("deflate_add", "['string','context'=>'','data'=>'string','flush_mode='=>'int']");
f("deflate_init", "['resource','encoding'=>'int','options='=>'array']");
f("deg2rad", "['float','number'=>'float']");
f("dgettext", "['string','domain_name'=>'string','msgid'=>'string']");
f("dio_close", "['','fd'=>'']");
f("dio_fcntl", "['','fd'=>'','cmd'=>'int','args='=>'']");
f("dio_open", "['resource','filename'=>'string','flags'=>'int','mode='=>'int']");
f("dio_read", "['string','fd'=>'','len='=>'int']");
f("dio_seek", "['int','fd'=>'','pos'=>'int','whence='=>'int']");
f("dio_stat", "['array','fd'=>'']");
f("dio_tcsetattr", "['bool','fd'=>'','options'=>'array']");
f("dio_truncate", "['bool','fd'=>'','offset'=>'int']");
f("dio_write", "['int','fd'=>'','data'=>'string','len='=>'int']");
f("Directory::close", "['void','dir_handle='=>'resource']");
f("DirectoryIterator::__construct", "['DirectoryIterator','path'=>'string']");
f("DirectoryIterator::current", "['DirectoryIterator']");
f("DirectoryIterator::getATime", "['int']");
f("DirectoryIterator::getBasename", "['string','suffix='=>'string']");
f("DirectoryIterator::getChildren", "['RecursiveDirectoryIterator']");
f("DirectoryIterator::getCTime", "['int']");
f("DirectoryIterator::getExtension", "['string']");
f("DirectoryIterator::getFilename", "['string']");
f("DirectoryIterator::getGroup", "['int']");
f("DirectoryIterator::getInode", "['int']");
f("DirectoryIterator::getMTime", "['int']");
f("DirectoryIterator::getOwner", "['int']");
f("DirectoryIterator::getPathname", "['string']");
f("DirectoryIterator::getPath", "['string']");
f("DirectoryIterator::getPerms", "['int']");
f("DirectoryIterator::getSize", "['int']");
f("DirectoryIterator::getType", "['string']");
f("DirectoryIterator::isDir", "['bool']");
f("DirectoryIterator::isDot", "['bool']");
f("DirectoryIterator::isExecutable", "['bool']");
f("DirectoryIterator::isFile", "['bool']");
f("DirectoryIterator::isLink", "['bool']");
f("DirectoryIterator::isReadable", "['bool']");
f("DirectoryIterator::isWritable", "['bool']");
f("DirectoryIterator::key", "['string']");
f("DirectoryIterator::next", "['']");
f("DirectoryIterator::rewind", "['']");
f("DirectoryIterator::seek", "['','position'=>'int']");
f("DirectoryIterator::__toString", "['string']");
f("DirectoryIterator::valid", "['bool']");
f("Directory::read", "['string','dir_handle='=>'resource']");
f("Directory::rewind", "['void','dir_handle='=>'resource']");
f("dirname", "['string','path'=>'string']");
f("dir", "['any','directory='=>'string','context='=>'']");
f("disk_free_space", "['float','path'=>'string']");
f("disk_total_space", "['float','path'=>'string']");
f("display_disabled_function", "['']");
f("dl", "['int','extension_filename'=>'string']");
f("dngettext", "['string','domain'=>'string','msgid1'=>'string','msgid2'=>'string','count'=>'int']");
f("dns_check_record", "['bool','host'=>'string','type'=>'string']");
f("dns_get_mx", "['bool','hostname'=>'string','mxhosts'=>'array','weight'=>'array']");
f("dns_get_record", "['array|false','hostname'=>'string','type='=>'int','authns='=>'array','addtl='=>'array']");
f("DomainException::__clone", "['Throwable|DomainException']");
f("DomainException::__construct", "['DomainException','message='=>'string','code='=>'int','previous='=>'Throwable|DomainException|null']");
f("DomainException::getCode", "['int']");
f("DomainException::getFile", "['string']");
f("DomainException::getLine", "['int']");
f("DomainException::getMessage", "['string']");
f("DomainException::getPrevious", "['Throwable|DomainException']");
f("DomainException::getTrace", "['array']");
f("DomainException::getTraceAsString", "['string']");
f("DomainException::__toString", "['string']");
f("DOMAttr::__construct", "['DOMAttr','name'=>'string','value='=>'string']");
f("DomAttribute::name", "['string']");
f("DomAttribute::set_value", "['bool','content'=>'string']");
f("DomAttribute::specified", "['bool']");
f("DomAttribute::value", "['string']");
f("DOMAttr::isId", "['bool']");
f("DOMCdataSection::__construct", "['DOMCdataSection','value'=>'string']");
f("DOMCharacterData::appendData", "['','data'=>'string']");
f("DOMCharacterData::deleteData", "['','offset'=>'int','count'=>'int']");
f("DOMCharacterData::insertData", "['','offset'=>'int','data'=>'string']");
f("DOMCharacterData::replaceData", "['','offset'=>'int','count'=>'int','data'=>'string']");
f("DOMCharacterData::substringData", "['string','offset'=>'int','count'=>'int']");
f("DOMComment::__construct", "['DOMComment','value'=>'string']");
f("DOMDocument::__construct", "['DOMDocument','version='=>'string','encoding='=>'string']");
f("DOMDocument::createAttribute", "['DOMAttr','name'=>'string']");
f("DOMDocument::createAttributeNS", "['DOMAttr','namespaceuri'=>'string','qualifiedname'=>'string']");
f("DOMDocument::createCDATASection", "['DOMCDATASection','data'=>'string']");
f("DOMDocument::createComment", "['DOMComment','data'=>'string']");
f("DOMDocument::createDocumentFragment", "['DOMDocumentFragment']");
f("DOMDocument::createElement", "['DOMElement','name'=>'string','value='=>'string']");
f("DOMDocument::createElementNS", "['DOMElement','namespaceuri'=>'string','qualifiedname'=>'string','value='=>'string']");
f("DOMDocument::createEntityReference", "['DOMEntityReference','name'=>'string']");
f("DOMDocument::createProcessingInstruction", "['DOMProcessingInstruction','target'=>'string','data='=>'string']");
f("DOMDocument::createTextNode", "['DOMText','content'=>'string']");
f("DOMDocumentFragment::appendXML", "['bool','data'=>'string']");
f("DOMDocumentFragment::__construct", "['DOMDocumentFragment']");
f("DOMDocument::getElementById", "['DOMElement','elementid'=>'string']");
f("DOMDocument::getElementsByTagName", "['DOMNodeList','name'=>'string']");
f("DOMDocument::getElementsByTagNameNS", "['DOMNodeList','namespaceuri'=>'string','localname'=>'string']");
f("DOMDocument::importNode", "['DOMNode','importednode'=>'domnode','deep='=>'bool']");
f("DOMDocument::load", "['','filename'=>'string','options='=>'int']");
f("DOMDocument::loadHTML", "['bool','source'=>'string']");
f("DOMDocument::loadHTMLFile", "['bool','filename'=>'string']");
f("DOMDocument::loadXML", "['','source'=>'string','options='=>'int']");
f("DOMDocument::normalizeDocument", "['']");
f("DOMDocument::registerNodeClass", "['bool','baseclass'=>'string','extendedclass'=>'string']");
f("DOMDocument::relaxNGValidate", "['bool','filename'=>'string']");
f("dom_document_relaxNG_validate_file", "['bool','filename'=>'string']");
f("DOMDocument::relaxNGValidateSource", "['bool','source'=>'string']");
f("dom_document_relaxNG_validate_xml", "['bool','source'=>'string']");
f("DOMDocument::saveHTMLFile", "['int','filename'=>'string']");
f("DOMDocument::saveHTML", "['string','node='=>'domnode']");
f("DOMDocument::save", "['int','filename'=>'string','options='=>'int']");
f("DOMDocument::saveXML", "['string','node='=>'domnode','options='=>'int']");
f("dom_document_schema_validate", "['bool','source'=>'string','flags'=>'int']");
f("DOMDocument::schemaValidate", "['bool','filename'=>'string']");
f("dom_document_schema_validate_file", "['bool','filename'=>'string','flags'=>'int']");
f("DOMDocument::schemaValidateSource", "['bool','source'=>'string']");
f("DomDocumentType::entities", "['array']");
f("DomDocumentType::internal_subset", "['bool']");
f("DomDocumentType::name", "['string']");
f("DomDocumentType::notations", "['array']");
f("DomDocumentType::public_id", "['string']");
f("DomDocumentType::system_id", "['string']");
f("DOMDocument::validate", "['bool']");
f("dom_document_xinclude", "['int','options'=>'int']");
f("DOMDocument::xinclude", "['int','options='=>'int']");
f("DOMElement::__construct", "['DOMElement','name'=>'string','value='=>'string','uri='=>'string']");
f("DomElement::get_attribute_node", "['DomAttribute','name'=>'string']");
f("DOMElement::getAttributeNode", "['DOMAttr','name'=>'string']");
f("DOMElement::getAttributeNodeNS", "['DOMAttr','namespaceuri'=>'string','localname'=>'string']");
f("DOMElement::getAttributeNS", "['string','namespaceuri'=>'string','localname'=>'string']");
f("DomElement::get_attribute", "['string','name'=>'string']");
f("DOMElement::getAttribute", "['string','name'=>'string']");
f("DomElement::get_elements_by_tagname", "['array','name'=>'string']");
f("DOMElement::getElementsByTagName", "['DOMNodeList','name'=>'string']");
f("DOMElement::getElementsByTagNameNS", "['DOMNodeList','namespaceuri'=>'string','localname'=>'string']");
f("DomElement::has_attribute", "['bool','name'=>'string']");
f("DOMElement::hasAttribute", "['bool','name'=>'string']");
f("DOMElement::hasAttributeNS", "['bool','namespaceuri'=>'string','localname'=>'string']");
f("DomElement::remove_attribute", "['bool','name'=>'string']");
f("DOMElement::removeAttribute", "['bool','name'=>'string']");
f("DOMElement::removeAttributeNode", "['bool','oldnode'=>'domattr']");
f("DOMElement::removeAttributeNS", "['bool','namespaceuri'=>'string','localname'=>'string']");
f("DomElement::set_attribute", "['DomAttribute','name'=>'string','value'=>'string']");
f("DOMElement::setAttribute", "['DOMAttr','name'=>'string','value'=>'string']");
f("DOMElement::setAttributeNode", "['DOMAttr','attr'=>'domattr']");
f("DomElement::set_attribute_node", "['DomNode','attr'=>'domnode']");
f("DOMElement::setAttributeNodeNS", "['DOMAttr','attr'=>'domattr']");
f("DOMElement::setAttributeNS", "['','namespaceuri'=>'string','qualifiedname'=>'string','value'=>'string']");
f("DOMElement::setIdAttribute", "['','name'=>'string','isid'=>'bool']");
f("DOMElement::setIdAttributeNode", "['','attr'=>'domattr','isid'=>'bool']");
f("DOMElement::setIdAttributeNS", "['','namespaceuri'=>'string','localname'=>'string','isid'=>'bool']");
f("DomElement::tagname", "['string']");
f("DOMEntityReference::__construct", "['DOMEntityReference','name'=>'string']");
f("DOMImplementation::__construct", "['']");
f("DOMImplementation::createDocument", "['DOMDocument','namespaceuri='=>'string','qualifiedname='=>'string','doctype='=>'domdocumenttype']");
f("DOMImplementation::createDocumentType", "['DOMDocumentType','qualifiedname='=>'string','publicid='=>'string','systemid='=>'string']");
f("DOMImplementation::hasFeature", "['bool','feature'=>'string','version'=>'string']");
f("dom_import_simplexml", "['DOMElement','node'=>'SimpleXMLElement']");
f("DOMNamedNodeMap::getNamedItem", "['DOMNode','name'=>'string']");
f("DOMNamedNodeMap::getNamedItemNS", "['DOMNode','namespaceuri'=>'string','localname'=>'string']");
f("DOMNamedNodeMap::item", "['DOMNode','index'=>'int']");
f("DomNode::add_namespace", "['bool','uri'=>'string','prefix'=>'string']");
f("DomNode::append_child", "['DOMNode','newnode'=>'domnode']");
f("DOMNode::appendChild", "['DOMNode','newnode'=>'domnode']");
f("DOMNode::C14NFile", "['int','uri'=>'string','exclusive'=>'bool','with_comments'=>'bool','xpath'=>'array','ns_prefixes'=>'array']");
f("DOMNode::C14N", "['string','exclusive'=>'bool','with_comments'=>'bool','xpath'=>'array','ns_prefixes'=>'array']");
f("DOMNode::cloneNode", "['DOMNode','deep='=>'bool']");
f("DOMNode::getLineNo", "['int']");
f("DOMNode::getNodePath", "['string|null']");
f("DOMNode::hasAttributes", "['bool']");
f("DOMNode::hasChildNodes", "['bool']");
f("DOMNode::insertBefore", "['DOMNode','newnode'=>'domnode','refnode='=>'domnode']");
f("DOMNode::isDefaultNamespace", "['bool','namespaceuri'=>'string']");
f("DOMNode::isSameNode", "['bool','node'=>'domnode']");
f("DOMNode::isSupported", "['bool','feature'=>'string','version'=>'string']");
f("DOMNodelist::item", "['DOMElement','index'=>'int']");
f("DOMNode::lookupNamespaceURI", "['string','prefix'=>'string']");
f("DOMNode::lookupPrefix", "['string','namespaceuri'=>'string']");
f("DOMNode::normalize", "['']");
f("DOMNode::removeChild", "['DOMNode','oldnode'=>'domnode']");
f("DOMNode::replaceChild", "['DOMNode','newnode'=>'domnode','oldnode'=>'domnode']");
f("DOMProcessingInstruction::__construct", "['DOMProcessingInstruction','name'=>'string','value'=>'string']");
f("DomProcessingInstruction::data", "['string']");
f("DomProcessingInstruction::target", "['string']");
f("DOMText::__construct", "['DOMText','value'=>'string']");
f("DOMText::isWhitespaceInElementContent", "['bool']");
f("DOMText::splitText", "['DOMText','offset'=>'int']");
f("domxml_new_doc", "['DomDocument','version'=>'string']");
f("domxml_open_file", "['DomDocument','filename'=>'string','mode='=>'int','error='=>'array']");
f("domxml_open_mem", "['DomDocument','str'=>'string','mode='=>'int','error='=>'array']");
f("domxml_version", "['string']");
f("domxml_xmltree", "['DomDocument','str'=>'string']");
f("domxml_xslt_stylesheet_doc", "['DomXsltStylesheet','xsl_doc'=>'domdocument']");
f("domxml_xslt_stylesheet", "['DomXsltStylesheet','xsl_buf'=>'string']");
f("domxml_xslt_stylesheet_file", "['DomXsltStylesheet','xsl_file'=>'string']");
f("domxml_xslt_version", "['int']");
f("DOMXPath::__construct", "['DOMXPath','doc'=>'domdocument']");
f("DOMXPath::evaluate", "['','expression'=>'string','contextnode='=>'domnode','registernodens='=>'bool']");
f("dom_xpath_evaluate", "['','expr'=>'string','context'=>'domnode','registernodens'=>'bool']");
f("DOMXPath::query", "['DOMNodeList','expression'=>'string','contextnode='=>'domnode','registernodens='=>'bool']");
f("dom_xpath_query", "['DOMNodeList','expr'=>'string','context'=>'domnode','registernodens'=>'bool']");
f("DOMXPath::registerNamespace", "['bool','prefix'=>'string','namespaceuri'=>'string']");
f("dom_xpath_register_ns", "['bool','prefix'=>'string','uri'=>'string']");
f("dom_xpath_register_php_functions", "['']");
f("DOMXPath::registerPhpFunctions", "['','restrict='=>'']");
f("DomXsltStylesheet::process", "['DomDocument','xml_doc'=>'domdocument','xslt_params='=>'array','is_xpath_param='=>'bool','profile_filename='=>'string']");
f("DomXsltStylesheet::result_dump_file", "['string','xmldoc'=>'domdocument','filename'=>'string']");
f("DomXsltStylesheet::result_dump_mem", "['string','xmldoc'=>'domdocument']");
f("DOTNET::__construct", "['','assembly_name'=>'string','class_name'=>'string','codepage='=>'int']");
f("dotnet_load", "['int','assembly_name'=>'string','datatype_name='=>'string','codepage='=>'int']");
f("each", "['array','arr'=>'array']");
f("easter_date", "['int','year='=>'int']");
f("easter_days", "['int','year='=>'int','method='=>'int']");
f("echo", "['','arg1'=>'string','...='=>'string']");
f("eio_busy", "['resource','delay'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_cancel", "['void','req'=>'resource']");
f("eio_chmod", "['resource','path'=>'string','mode'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_chown", "['resource','path'=>'string','uid'=>'int','gid='=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_close", "['resource','fd'=>'mixed','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_custom", "['resource','execute'=>'callable','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_dup2", "['resource','fd'=>'mixed','fd2'=>'mixed','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_event_loop", "['bool']");
f("eio_fallocate", "['resource','fd'=>'mixed','mode'=>'int','offset'=>'int','length'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_fchmod", "['resource','fd'=>'mixed','mode'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_fchown", "['resource','fd'=>'mixed','uid'=>'int','gid='=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_fdatasync", "['resource','fd'=>'mixed','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_fstat", "['resource','fd'=>'mixed','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_fstatvfs", "['resource','fd'=>'mixed','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_fsync", "['resource','fd'=>'mixed','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_ftruncate", "['resource','fd'=>'mixed','offset='=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_futime", "['resource','fd'=>'mixed','atime'=>'float','mtime'=>'float','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_get_event_stream", "['mixed']");
f("eio_get_last_error", "['string','req'=>'resource']");
f("eio_grp_add", "['void','grp'=>'resource','req'=>'resource']");
f("eio_grp_cancel", "['void','grp'=>'resource']");
f("eio_grp_limit", "['void','grp'=>'resource','limit'=>'int']");
f("eio_grp", "['resource','callback'=>'callable','data='=>'string']");
f("eio_init", "['void']");
f("eio_link", "['resource','path'=>'string','new_path'=>'string','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_lstat", "['resource','path'=>'string','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_mkdir", "['resource','path'=>'string','mode'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_mknod", "['resource','path'=>'string','mode'=>'int','dev'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_nop", "['resource','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_npending", "['int']");
f("eio_nready", "['int']");
f("eio_nreqs", "['int']");
f("eio_nthreads", "['int']");
f("eio_open", "['resource','path'=>'string','flags'=>'int','mode'=>'int','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_poll", "['int']");
f("eio_readahead", "['resource','fd'=>'mixed','offset'=>'int','length'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_readdir", "['resource','path'=>'string','flags'=>'int','pri'=>'int','callback'=>'callable','data='=>'string']");
f("eio_readlink", "['resource','path'=>'string','pri'=>'int','callback'=>'callable','data='=>'string']");
f("eio_read", "['resource','fd'=>'mixed','length'=>'int','offset'=>'int','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_realpath", "['resource','path'=>'string','pri'=>'int','callback'=>'callable','data='=>'string']");
f("eio_rename", "['resource','path'=>'string','new_path'=>'string','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_rmdir", "['resource','path'=>'string','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_seek", "['resource','fd'=>'mixed','offset'=>'int','whence'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_sendfile", "['resource','out_fd'=>'mixed','in_fd'=>'mixed','offset'=>'int','length'=>'int','pri='=>'int','callback='=>'callable','data='=>'string']");
f("eio_set_max_idle", "['void','nthreads'=>'int']");
f("eio_set_max_parallel", "['void','nthreads'=>'int']");
f("eio_set_max_poll_reqs", "['void','nreqs'=>'int']");
f("eio_set_max_poll_time", "['void','nseconds'=>'float']");
f("eio_set_min_parallel", "['void','nthreads'=>'string']");
f("eio_stat", "['resource','path'=>'string','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_statvfs", "['resource','path'=>'string','pri'=>'int','callback'=>'callable','data='=>'mixed']");
f("eio_symlink", "['resource','path'=>'string','new_path'=>'string','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_sync_file_range", "['resource','fd'=>'mixed','offset'=>'int','nbytes'=>'int','flags'=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_syncfs", "['resource','fd'=>'mixed','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_sync", "['resource','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_truncate", "['resource','path'=>'string','offset='=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_unlink", "['resource','path'=>'string','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_utime", "['resource','path'=>'string','atime'=>'float','mtime'=>'float','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("eio_write", "['resource','fd'=>'mixed','str'=>'string','length='=>'int','offset='=>'int','pri='=>'int','callback='=>'callable','data='=>'mixed']");
f("empty", "['bool','var'=>'']");
f("EmptyIterator::current", "['']");
f("EmptyIterator::key", "['']");
f("EmptyIterator::next", "['']");
f("EmptyIterator::rewind", "['']");
f("EmptyIterator::valid", "['bool']");
f("enchant_broker_describe", "['array','broker'=>'']");
f("enchant_broker_dict_exists", "['bool','broker'=>'','tag'=>'string']");
f("enchant_broker_free", "['bool','broker'=>'']");
f("enchant_broker_free_dict", "['resource','dict'=>'']");
f("enchant_broker_get_dict_path", "['string','broker'=>'','dict_type'=>'int']");
f("enchant_broker_get_error", "['string','broker'=>'']");
f("enchant_broker_init", "['resource']");
f("enchant_broker_list_dicts", "['string','broker'=>'']");
f("enchant_broker_request_dict", "['resource','broker'=>'','tag'=>'string']");
f("enchant_broker_request_pwl_dict", "['resource','broker'=>'','filename'=>'string']");
f("enchant_broker_set_dict_path", "['bool','broker'=>'','dict_type'=>'int','value'=>'string']");
f("enchant_broker_set_ordering", "['bool','broker'=>'','tag'=>'string','ordering'=>'string']");
f("enchant_dict_add_to_personal", "['','dict'=>'','word'=>'string']");
f("enchant_dict_add_to_session", "['','dict'=>'','word'=>'string']");
f("enchant_dict_check", "['bool','dict'=>'','word'=>'string']");
f("enchant_dict_describe", "['array','dict'=>'']");
f("enchant_dict_get_error", "['string','dict'=>'']");
f("enchant_dict_is_in_session", "['bool','dict'=>'','word'=>'string']");
f("enchant_dict_quick_check", "['bool','dict'=>'','word'=>'string','suggestions='=>'array']");
f("enchant_dict_store_replacement", "['','dict'=>'','mis'=>'string','cor'=>'string']");
f("enchant_dict_suggest", "['array','dict'=>'','word'=>'string']");
f("end", "['','array_arg'=>'array']");
f("eregi", "['int','pattern'=>'string','string'=>'string','regs='=>'array']");
f("ereg", "['int','pattern'=>'string','string'=>'string','regs='=>'array']");
f("eregi_replace", "['string','pattern'=>'string','replacement'=>'string','string'=>'string']");
f("ereg_replace", "['string','pattern'=>'string','replacement'=>'string','string'=>'string']");
f("error_clear_last", "['']");
f("Error::__clone", "['Error']");
f("Error::__construct", "['Error','message='=>'string','code='=>'int','previous='=>'Throwable|Error']");
f("ErrorException::__clone", "['ErrorException']");
f("ErrorException::__construct", "['ErrorException','message='=>'string','code='=>'int','severity='=>'int','filename='=>'string','lineno='=>'int','previous='=>'Throwable|ErrorException|null']");
f("ErrorException::getCode", "['int']");
f("ErrorException::getFile", "['string']");
f("ErrorException::getLine", "['int']");
f("ErrorException::getMessage", "['string']");
f("ErrorException::getPrevious", "['Throwable|ErrorException']");
f("ErrorException::getSeverity", "['int']");
f("ErrorException::getTrace", "['array']");
f("ErrorException::getTraceAsString", "['string']");
f("ErrorException::__toString", "['string']");
f("Error::getCode", "['int']");
f("Error::getFile", "['string']");
f("error_get_last", "['array|null']");
f("Error::getLine", "['int']");
f("Error::getMessage", "['string']");
f("Error::getPrevious", "['Throwable|Error']");
f("Error::getTrace", "['array']");
f("Error::getTraceAsString", "['string']");
f("error_log", "['bool','message'=>'string','message_type='=>'int','destination='=>'string','extra_headers='=>'string']");
f("error_reporting", "['int','new_error_level='=>'int']");
f("Error::__toString", "['string']");
f("escapeshellarg", "['string','arg'=>'string']");
f("escapeshellcmd", "['string','command'=>'string']");
f("eval", "['','code_str'=>'string']");
f("Ev::backend", "['int']");
f("EvCheck::__construct", "['','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvCheck::createStopped", "['any','callback'=>'string','data='=>'string','priority='=>'string']");
f("EvChild::__construct", "['','pid'=>'int','trace'=>'bool','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvChild::createStopped", "['any','pid'=>'int','trace'=>'bool','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvChild::set", "['void','pid'=>'int','trace'=>'bool']");
f("Ev::depth", "['int']");
f("EvEmbed::__construct", "['','other'=>'any','callback='=>'callable','data='=>'mixed','priority='=>'int']");
f("EvEmbed::createStopped", "['void','other'=>'any','callback='=>'callable','data='=>'mixed','priority='=>'int']");
f("Ev::embeddableBackends", "['void']");
f("EvEmbed::set", "['void','other'=>'any']");
f("EvEmbed::sweep", "['void']");
f("event_add", "['bool','event'=>'','timeout='=>'int']");
f("Event::add", "['bool','timeout='=>'float']");
f("Event::addSignal", "['bool','timeout='=>'float']");
f("Event::addTimer", "['bool','timeout='=>'float']");
f("EventBase::__construct", "['','cfg='=>'EventConfig']");
f("EventBase::dispatch", "['void']");
f("EventBase::exit", "['bool','timeout='=>'float']");
f("event_base_free", "['','event_base'=>'']");
f("EventBase::free", "['void']");
f("EventBase::getFeatures", "['int']");
f("EventBase::getMethod", "['string','cfg='=>'EventConfig']");
f("EventBase::getTimeOfDayCached", "['float']");
f("EventBase::gotExit", "['bool']");
f("EventBase::gotStop", "['bool']");
f("EventBase::loop", "['bool','flags='=>'int']");
f("event_base_loopbreak", "['bool','event_base'=>'']");
f("event_base_loopexit", "['bool','event_base'=>'','timeout='=>'int']");
f("event_base_loop", "['int','event_base'=>'','flags='=>'int']");
f("event_base_new", "['resource']");
f("event_base_priority_init", "['bool','event_base'=>'','npriorities'=>'int']");
f("EventBase::priorityInit", "['bool','n_priorities'=>'int']");
f("EventBase::reInit", "['bool']");
f("event_base_reinit", "['bool','event_base'=>'resource']");
f("event_base_set", "['bool','event'=>'','event_base'=>'']");
f("EventBase::stop", "['bool']");
f("EventBuffer::add", "['bool','data'=>'string']");
f("EventBuffer::addBuffer", "['bool','buf'=>'EventBuffer']");
f("EventBuffer::appendFrom", "['int','buf'=>'EventBuffer','len'=>'int']");
f("event_buffer_base_set", "['bool','bevent'=>'','event_base'=>'']");
f("EventBuffer::__construct", "['']");
f("EventBuffer::copyout", "['int','&data'=>'string','max_bytes'=>'int']");
f("event_buffer_disable", "['bool','bevent'=>'','events'=>'int']");
f("EventBuffer::drain", "['bool','len'=>'int']");
f("event_buffer_enable", "['bool','bevent'=>'','events'=>'int']");
f("EventBuffer::enableLocking", "['void']");
f("EventBufferEvent::close", "['void']");
f("EventBufferEvent::connect", "['bool','addr'=>'string']");
f("EventBufferEvent::connectHost", "['bool','dns_base'=>'EventDnsBase','hostname'=>'string','port'=>'int','family='=>'int']");
f("EventBufferEvent::__construct", "['','base'=>'EventBase','socket='=>'mixed','options='=>'int','readcb='=>'callable','writecb='=>'callable','eventcb='=>'callable']");
f("EventBufferEvent::createPair", "['array','base'=>'EventBase','options='=>'int']");
f("EventBufferEvent::disable", "['bool','events'=>'int']");
f("EventBufferEvent::enable", "['bool','events'=>'int']");
f("EventBufferEvent::free", "['void']");
f("EventBufferEvent::getDnsErrorString", "['string']");
f("EventBufferEvent::getEnabled", "['int']");
f("EventBufferEvent::getInput", "['EventBuffer']");
f("EventBufferEvent::getOutput", "['EventBuffer']");
f("EventBufferEvent::readBuffer", "['bool','buf'=>'EventBuffer']");
f("EventBufferEvent::read", "['string','size'=>'int']");
f("EventBufferEvent::setCallbacks", "['void','readcb'=>'callable','writecb'=>'callable','eventcb'=>'callable','arg='=>'string']");
f("EventBufferEvent::setPriority", "['bool','priority'=>'int']");
f("EventBufferEvent::setTimeouts", "['bool','timeout_read'=>'float','timeout_write'=>'float']");
f("EventBufferEvent::setWatermark", "['void','events'=>'int','lowmark'=>'int','highmark'=>'int']");
f("EventBufferEvent::sslError", "['string']");
f("EventBufferEvent::sslFilter", "['EventBufferEvent','base'=>'EventBase','underlying'=>'EventBufferEvent','ctx'=>'EventSslContext','state'=>'int','options='=>'int']");
f("EventBufferEvent::sslGetCipherInfo", "['string']");
f("EventBufferEvent::sslGetCipherName", "['string']");
f("EventBufferEvent::sslGetCipherVersion", "['string']");
f("EventBufferEvent::sslGetProtocol", "['string']");
f("EventBufferEvent::sslRenegotiate", "['void']");
f("EventBufferEvent::sslSocket", "['EventBufferEvent','base'=>'EventBase','socket'=>'mixed','ctx'=>'EventSslContext','state'=>'int','options='=>'int']");
f("EventBufferEvent::write", "['bool','data'=>'string']");
f("EventBufferEvent::writeBuffer", "['bool','buf'=>'EventBuffer']");
f("EventBuffer::expand", "['bool','len'=>'int']");
f("event_buffer_fd_set", "['','bevent'=>'','fd'=>'']");
f("event_buffer_free", "['','bevent'=>'']");
f("EventBuffer::freeze", "['bool','at_front'=>'bool']");
f("EventBuffer::lock", "['void']");
f("event_buffer_new", "['resource','stream'=>'','readcb'=>'','writecb'=>'','errorcb'=>'','arg='=>'']");
f("EventBuffer::prepend", "['bool','data'=>'string']");
f("EventBuffer::prependBuffer", "['bool','buf'=>'EventBuffer']");
f("event_buffer_priority_set", "['bool','bevent'=>'','priority'=>'int']");
f("EventBuffer::pullup", "['string','size'=>'int']");
f("EventBuffer::read", "['int','fd'=>'mixed','howmuch'=>'int']");
f("EventBuffer::readLine", "['string','eol_style'=>'int']");
f("event_buffer_read", "['string','bevent'=>'','data_size'=>'int']");
f("EventBuffer::read", "['string','max_bytes'=>'int']");
f("EventBuffer::searchEol", "['mixed','start='=>'int','eol_style='=>'int']");
f("EventBuffer::search", "['mixed','what'=>'string','start='=>'int','end='=>'int']");
f("event_buffer_set_callback", "['bool','event'=>'','readcb'=>'','writecb'=>'','errorcb'=>'','arg='=>'']");
f("EventBuffer::substr", "['string','start'=>'int','length='=>'int']");
f("event_buffer_timeout_set", "['','bevent'=>'','read_timeout'=>'int','write_timeout'=>'int']");
f("EventBuffer::unfreeze", "['bool','at_front'=>'bool']");
f("EventBuffer::unlock", "['bool']");
f("event_buffer_watermark_set", "['','bevent'=>'','events'=>'int','lowmark'=>'int','highmark'=>'int']");
f("event_buffer_write", "['bool','bevent'=>'','data'=>'string','data_size='=>'int']");
f("EventBuffer::write", "['int','fd'=>'mixed','howmuch='=>'int']");
f("EventConfig::avoidMethod", "['bool','method'=>'int']");
f("EventConfig::__construct", "['']");
f("EventConfig::requireFeatures", "['bool','feature'=>'int']");
f("EventConfig::setMaxDispatchInterval", "['void','max_interval'=>'int','max_callbacks'=>'int','min_priority'=>'int']");
f("Event::__construct", "['','base'=>'EventBase','fd'=>'mixed','what'=>'int','cb'=>'callable','arg='=>'mixed']");
f("Event::del", "['bool']");
f("event_del", "['bool','event'=>'']");
f("Event::delSignal", "['bool']");
f("Event::delTimer", "['bool']");
f("EventDnsBase::addNameserverIp", "['bool','ip'=>'string']");
f("EventDnsBase::addSearch", "['void','domain'=>'string']");
f("EventDnsBase::clearSearch", "['void']");
f("EventDnsBase::__construct", "['','base'=>'EventBase','initialize'=>'bool']");
f("EventDnsBase::countNameservers", "['int']");
f("EventDnsBase::loadHosts", "['bool','hosts'=>'string']");
f("EventDnsBase::parseResolvConf", "['bool','flags'=>'int','filename'=>'string']");
f("EventDnsBase::setOption", "['bool','option'=>'string','value'=>'string']");
f("EventDnsBase::setSearchNdots", "['bool','ndots'=>'int']");
f("event_free", "['','event'=>'']");
f("Event::free", "['void']");
f("Event::getSupportedMethods", "['array']");
f("EventHttp::accept", "['bool','socket'=>'mixed']");
f("EventHttp::addServerAlias", "['bool','alias'=>'string']");
f("EventHttp::bind", "['void','address'=>'string','port'=>'int']");
f("EventHttpConnection::__construct", "['','base'=>'EventBase','dns_base'=>'EventDnsBase','address'=>'string','port'=>'int','ctx='=>'EventSslContext']");
f("EventHttpConnection::getBase", "['EventBase']");
f("EventHttpConnection::getPeer", "['void','&address'=>'string','&port'=>'int']");
f("EventHttpConnection::makeRequest", "['bool','req'=>'EventHttpRequest','type'=>'int','uri'=>'string']");
f("EventHttpConnection::setCloseCallback", "['void','callback'=>'callable','data='=>'mixed']");
f("EventHttpConnection::setLocalAddress", "['void','address'=>'string']");
f("EventHttpConnection::setLocalPort", "['void','port'=>'int']");
f("EventHttpConnection::setMaxBodySize", "['void','max_size'=>'string']");
f("EventHttpConnection::setMaxHeadersSize", "['void','max_size'=>'string']");
f("EventHttpConnection::setRetries", "['void','retries'=>'int']");
f("EventHttpConnection::setTimeout", "['void','timeout'=>'int']");
f("EventHttp::__construct", "['','base'=>'EventBase','ctx='=>'EventSslContext']");
f("EventHttp::removeServerAlias", "['bool','alias'=>'string']");
f("EventHttpRequest::addHeader", "['bool','key'=>'string','value'=>'string','type'=>'int']");
f("EventHttpRequest::cancel", "['void']");
f("EventHttpRequest::clearHeaders", "['void']");
f("EventHttpRequest::closeConnection", "['EventBufferEvent']");
f("EventHttpRequest::closeConnection", "['EventHttpConnection']");
f("EventHttpRequest::closeConnection", "['void']");
f("EventHttpRequest::__construct", "['','callback'=>'callable','data='=>'mixed']");
f("EventHttpRequest::findHeader", "['void','key'=>'string','type'=>'string']");
f("EventHttpRequest::free", "['void']");
f("EventHttpRequest::getCommand", "['void']");
f("EventHttpRequest::getHost", "['string']");
f("EventHttpRequest::getInputBuffer", "['EventBuffer']");
f("EventHttpRequest::getInputHeaders", "['array']");
f("EventHttpRequest::getOutputBuffer", "['EventBuffer']");
f("EventHttpRequest::getOutputHeaders", "['void']");
f("EventHttpRequest::getResponseCode", "['int']");
f("EventHttpRequest::getUri", "['string']");
f("EventHttpRequest::removeHeader", "['void','key'=>'string','type'=>'string']");
f("EventHttpRequest::sendError", "['void','error'=>'int','reason='=>'string']");
f("EventHttpRequest::sendReplyChunk", "['void','buf'=>'EventBuffer']");
f("EventHttpRequest::sendReplyEnd", "['void']");
f("EventHttpRequest::sendReplyStart", "['void','code'=>'int','reason'=>'string']");
f("EventHttpRequest::sendReply", "['void','code'=>'int','reason'=>'string','buf='=>'EventBuffer']");
f("EventHttp::setAllowedMethods", "['void','methods'=>'int']");
f("EventHttp::setCallback", "['void','path'=>'string','cb'=>'string','arg='=>'string']");
f("EventHttp::setDefaultCallback", "['void','cb'=>'string','arg='=>'string']");
f("EventHttp::setMaxBodySize", "['void','value'=>'int']");
f("EventHttp::setMaxHeadersSize", "['void','value'=>'int']");
f("EventHttp::setTimeout", "['void','value'=>'int']");
f("EventListener::__construct", "['','base'=>'EventBase','cb'=>'callable','data'=>'mixed','flags'=>'int','backlog'=>'int','target'=>'mixed']");
f("EventListener::disable", "['bool']");
f("EventListener::enable", "['bool']");
f("EventListener::getBase", "['void']");
f("EventListener::getSocketName", "['bool','&address'=>'string','&port='=>'mixed']");
f("EventListener::setCallback", "['void','cb'=>'callable','arg='=>'mixed']");
f("EventListener::setErrorCallback", "['void','cb'=>'string']");
f("event_new", "['resource']");
f("Event::pending", "['bool','flags'=>'int']");
f("event_priority_set", "['bool','event'=>'resource','priority'=>'int']");
f("Event::set", "['bool','base'=>'EventBase','fd'=>'mixed','what='=>'int','cb='=>'callable','arg='=>'mixed']");
f("event_set", "['bool','event'=>'','fd'=>'','events'=>'int','callback'=>'','arg='=>'']");
f("Event::setPriority", "['bool','priority'=>'int']");
f("Event::setTimer", "['bool','base'=>'EventBase','cb'=>'callable','arg='=>'mixed']");
f("Event::signal", "['Event','base'=>'EventBase','signum'=>'int','cb'=>'callable','arg='=>'mixed']");
f("EventSslContext::__construct", "['','method'=>'string','options'=>'string']");
f("Event::timer", "['Event','base'=>'EventBase','cb'=>'callable','arg='=>'mixed']");
f("event_timer_set", "['bool','event'=>'resource','callback'=>'callable','arg='=>'mixed']");
f("EventUtil::__construct", "['']");
f("EventUtil::getLastSocketErrno", "['int','socket='=>'mixed']");
f("EventUtil::getLastSocketError", "['string','socket='=>'mixed']");
f("EventUtil::getSocketFd", "['int','socket'=>'mixed']");
f("EventUtil::getSocketName", "['bool','socket'=>'mixed','&address'=>'string','&port='=>'mixed']");
f("EventUtil::setSocketOption", "['bool','socket'=>'mixed','level'=>'int','optname'=>'int','optval'=>'mixed']");
f("EventUtil::sslRandPoll", "['void']");
f("Ev::feedSignalEvent", "['void','signum'=>'int']");
f("Ev::feedSignal", "['void','signum'=>'int']");
f("EvFork::__construct", "['','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvFork::createStopped", "['any','callback'=>'string','data='=>'string','priority='=>'string']");
f("EvIdle::__construct", "['','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvIdle::createStopped", "['any','callback'=>'string','data='=>'mixed','priority='=>'int']");
f("EvIo::__construct", "['','fd'=>'mixed','events'=>'int','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvIo::createStopped", "['EvIo','fd'=>'mixed','events'=>'int','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvIo::set", "['void','fd'=>'mixed','events'=>'int']");
f("Ev::iteration", "['int']");
f("EvLoop::backend", "['int']");
f("EvLoop::check", "['EvCheck','callback'=>'string','data='=>'string','priority='=>'string']");
f("EvLoop::child", "['EvChild','pid'=>'string','trace'=>'string','callback'=>'string','data='=>'string','priority='=>'string']");
f("EvLoop::__construct", "['','flags='=>'int','data='=>'mixed','io_interval='=>'float','timeout_interval='=>'float']");
f("EvLoop::defaultLoop", "['EvLoop','flags='=>'int','data='=>'mixed','io_interval='=>'float','timeout_interval='=>'float']");
f("EvLoop::embed", "['EvEmbed','other'=>'string','callback='=>'string','data='=>'string','priority='=>'string']");
f("EvLoop::fork", "['EvFork','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::idle", "['EvIdle','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::invokePending", "['void']");
f("EvLoop::io", "['EvIo','fd'=>'mixed','events'=>'int','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::loopFork", "['void']");
f("EvLoop::now", "['float']");
f("EvLoop::nowUpdate", "['void']");
f("EvLoop::periodic", "['EvPeriodic','offset'=>'float','interval'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::prepare", "['EvPrepare','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::resume", "['void']");
f("EvLoop::run", "['void','flags='=>'int']");
f("EvLoop::signal", "['EvSignal','signum'=>'int','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::stat", "['EvStat','path'=>'string','interval'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::stop", "['void','how='=>'int']");
f("EvLoop::suspend", "['void']");
f("EvLoop::timer", "['EvTimer','after'=>'float','repeat'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvLoop::verify", "['void']");
f("Ev::now", "['float']");
f("Ev::nowUpdate", "['void']");
f("EvPeriodic::again", "['void']");
f("EvPeriodic::at", "['float']");
f("EvPeriodic::__construct", "['','offset'=>'float','interval'=>'string','reschedule_cb'=>'callable','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvPeriodic::createStopped", "['EvPeriodic','offset'=>'float','interval'=>'float','reschedule_cb'=>'callable','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvPeriodic::set", "['void','offset'=>'float','interval'=>'float']");
f("EvPrepare::__construct", "['','callback'=>'string','data='=>'string','priority='=>'string']");
f("EvPrepare::createStopped", "['EvPrepare','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("Ev::recommendedBackends", "['void']");
f("Ev::resume", "['void']");
f("Ev::run", "['void','flags='=>'int']");
f("EvSignal::__construct", "['','signum'=>'int','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvSignal::createStopped", "['EvSignal','signum'=>'int','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvSignal::set", "['void','signum'=>'int']");
f("Ev::sleep", "['void','seconds'=>'float']");
f("EvStat::attr", "['array']");
f("EvStat::__construct", "['','path'=>'string','interval'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvStat::createStopped", "['void','path'=>'string','interval'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvStat::prev", "['void']");
f("EvStat::set", "['void','path'=>'string','interval'=>'float']");
f("EvStat::stat", "['bool']");
f("Ev::stop", "['void','how='=>'int']");
f("Ev::supportedBackends", "['void']");
f("Ev::suspend", "['void']");
f("Ev::time", "['float']");
f("EvTimer::again", "['void']");
f("EvTimer::__construct", "['','after'=>'float','repeat'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvTimer::createStopped", "['EvTimer','after'=>'float','repeat'=>'float','callback'=>'callable','data='=>'mixed','priority='=>'int']");
f("EvTimer::set", "['void','after'=>'float','repeat'=>'float']");
f("Ev::verify", "['void']");
f("EvWatcher::clear", "['int']");
f("EvWatcher::__construct", "['']");
f("EvWatcher::feed", "['void','revents'=>'int']");
f("EvWatcher::getLoop", "['EvLoop']");
f("EvWatcher::invoke", "['void','revents'=>'int']");
f("EvWatcher::keepalive", "['bool','value='=>'bool']");
f("EvWatcher::setCallback", "['void','callback'=>'callable']");
f("EvWatcher::start", "['void']");
f("EvWatcher::stop", "['void']");
f("Exception::__clone", "['Throwable|Exception']");
f("Exception::__construct", "['Exception','message='=>'string','code='=>'int','previous='=>'Throwable|Exception|null']");
f("Exception::getCode", "['int']");
f("Exception::getFile", "['string']");
f("Exception::getLine", "['int']");
f("Exception::getMessage", "['string']");
f("Exception::getPrevious", "['Throwable|Exception']");
f("Exception::getTrace", "['array']");
f("Exception::getTraceAsString", "['string']");
f("Exception::__toString", "['string']");
f("exec", "['string','command'=>'string','&output='=>'array','&return_value='=>'int']");
f("exif_imagetype", "['int','imagefile'=>'string']");
f("exif_read_data", "['array','filename'=>'string','sections_needed='=>'string','sub_arrays='=>'bool','read_thumbnail='=>'bool']");
f("exif_tagname", "['string','index'=>'int']");
f("exif_thumbnail", "['string','filename'=>'string','&width='=>'int','&height='=>'int','&imagetype='=>'int']");
f("exit", "['','status'=>'string|int']");
f("expect_expectl", "['int','expect'=>'','cases'=>'array','match='=>'array']");
f("expect_popen", "['resource','command'=>'string']");
f("exp", "['float','number'=>'float']");
f("explode", "['array','separator'=>'string','str'=>'string','limit='=>'int']");
f("expm1", "['float','number'=>'float']");
f("extension_loaded", "['bool','extension_name'=>'string']");
f("extract", "['int','var_array'=>'array','extract_type='=>'int','prefix='=>'string']");
f("ezmlm_hash", "['int','addr'=>'string']");
f("fam_cancel_monitor", "['bool','fam'=>'','fam_monitor'=>'']");
f("fam_close", "['','fam'=>'']");
f("fam_monitor_collection", "['resource','fam'=>'','dirname'=>'string','depth'=>'int','mask'=>'string']");
f("fam_monitor_directory", "['resource','fam'=>'','dirname'=>'string']");
f("fam_monitor_file", "['resource','fam'=>'','filename'=>'string']");
f("fam_next_event", "['array','fam'=>'']");
f("fam_open", "['resource','appname='=>'string']");
f("fam_pending", "['int','fam'=>'']");
f("fam_resume_monitor", "['bool','fam'=>'','fam_monitor'=>'']");
f("fam_suspend_monitor", "['bool','fam'=>'','fam_monitor'=>'']");
f("fann_cascadetrain_on_data", "['bool','ann'=>'resource','data'=>'resource','max_neurons'=>'int','neurons_between_reports'=>'int','desired_error'=>'float']");
f("fann_cascadetrain_on_file", "['bool','ann'=>'resource','filename'=>'string','max_neurons'=>'int','neurons_between_reports'=>'int','desired_error'=>'float']");
f("fann_clear_scaling_params", "['bool','ann'=>'resource']");
f("FANNConnection::__construct", "['','from_neuron'=>'int','to_neuron'=>'int','weight'=>'float']");
f("FANNConnection::getFromNeuron", "['int']");
f("FANNConnection::getToNeuron", "['int']");
f("FANNConnection::getWeight", "['void']");
f("FANNConnection::setWeight", "['bool','weight'=>'float']");
f("fann_copy", "['resource','ann'=>'resource']");
f("fann_create_from_file", "['resource','configuration_file'=>'string']");
f("fann_create_shortcut_array", "['resource','num_layers'=>'int','layers'=>'array']");
f("fann_create_shortcut", "['reference','num_layers'=>'int','num_neurons1'=>'int','num_neurons2'=>'int','...='=>'int']");
f("fann_create_sparse_array", "['resource|false','connection_rate'=>'float','num_layers'=>'int','layers'=>'array']");
f("fann_create_sparse", "['resource|false','connection_rate'=>'float','num_layers'=>'int','num_neurons1'=>'int','num_neurons2'=>'int','...='=>'int']");
f("fann_create_standard_array", "['resource','num_layers'=>'int','layers'=>'array']");
f("fann_create_standard", "['resource','num_layers'=>'int','num_neurons1'=>'int','num_neurons2'=>'int','...='=>'int']");
f("fann_create_train_from_callback", "['resource','num_data'=>'int','num_input'=>'int','num_output'=>'int','user_function'=>'collable']");
f("fann_create_train", "['resource','num_data'=>'int','num_input'=>'int','num_output'=>'int']");
f("fann_descale_input", "['bool','ann'=>'resource','input_vector'=>'array']");
f("fann_descale_output", "['bool','ann'=>'resource','output_vector'=>'array']");
f("fann_descale_train", "['bool','ann'=>'resource','train_data'=>'resource']");
f("fann_destroy", "['bool','ann'=>'resource']");
f("fann_destroy_train", "['bool','train_data'=>'resource']");
f("fann_duplicate_train_data", "['resource','data'=>'resource']");
f("fann_get_activation_function", "['int','ann'=>'resource','layer'=>'int','neuron'=>'int']");
f("fann_get_activation_steepness", "['float','ann'=>'resource','layer'=>'int','neuron'=>'int']");
f("fann_get_bias_array", "['array','ann'=>'resource']");
f("fann_get_bit_fail", "['int','ann'=>'resource']");
f("fann_get_bit_fail_limit", "['float','ann'=>'resource']");
f("fann_get_cascade_activation_functions", "['array','ann'=>'resource']");
f("fann_get_cascade_activation_functions_count", "['int','ann'=>'resource']");
f("fann_get_cascade_activation_steepnesses", "['array','ann'=>'resource']");
f("fann_get_cascade_activation_steepnesses_count", "['int','ann'=>'resource']");
f("fann_get_cascade_candidate_change_fraction", "['float','ann'=>'resource']");
f("fann_get_cascade_candidate_limit", "['float','ann'=>'resource']");
f("fann_get_cascade_candidate_stagnation_epochs", "['float','ann'=>'resource']");
f("fann_get_cascade_max_cand_epochs", "['int','ann'=>'resource']");
f("fann_get_cascade_max_out_epochs", "['int','ann'=>'resource']");
f("fann_get_cascade_min_cand_epochs", "['int','ann'=>'resource']");
f("fann_get_cascade_min_out_epochs", "['int','ann'=>'resource']");
f("fann_get_cascade_num_candidate_groups", "['int','ann'=>'resource']");
f("fann_get_cascade_num_candidates", "['int','ann'=>'resource']");
f("fann_get_cascade_output_change_fraction", "['float','ann'=>'resource']");
f("fann_get_cascade_output_stagnation_epochs", "['int','ann'=>'resource']");
f("fann_get_cascade_weight_multiplier", "['float','ann'=>'resource']");
f("fann_get_connection_array", "['array','ann'=>'resource']");
f("fann_get_connection_rate", "['float','ann'=>'resource']");
f("fann_get_errno", "['int','errdat'=>'resource']");
f("fann_get_errstr", "['string','errdat'=>'resource']");
f("fann_get_layer_array", "['array','ann'=>'resource']");
f("fann_get_learning_momentum", "['float','ann'=>'resource']");
f("fann_get_learning_rate", "['float','ann'=>'resource']");
f("fann_get_MSE", "['float','ann'=>'resource']");
f("fann_get_network_type", "['int','ann'=>'resource']");
f("fann_get_num_input", "['int','ann'=>'resource']");
f("fann_get_num_layers", "['int','ann'=>'resource']");
f("fann_get_num_output", "['int','ann'=>'resource']");
f("fann_get_quickprop_decay", "['float','ann'=>'resource']");
f("fann_get_quickprop_mu", "['float','ann'=>'resource']");
f("fann_get_rprop_decrease_factor", "['float','ann'=>'resource']");
f("fann_get_rprop_delta_max", "['float','ann'=>'resource']");
f("fann_get_rprop_delta_min", "['float','ann'=>'resource']");
f("fann_get_rprop_delta_zero", "['float|false','ann'=>'resource']");
f("fann_get_rprop_increase_factor", "['float','ann'=>'resource']");
f("fann_get_sarprop_step_error_shift", "['float','ann'=>'resource']");
f("fann_get_sarprop_step_error_threshold_factor", "['float','ann'=>'resource']");
f("fann_get_sarprop_temperature", "['float','ann'=>'resource']");
f("fann_get_sarprop_weight_decay_shift", "['float','ann'=>'resource']");
f("fann_get_total_connections", "['int','ann'=>'resource']");
f("fann_get_total_neurons", "['int','ann'=>'resource']");
f("fann_get_train_error_function", "['int','ann'=>'resource']");
f("fann_get_training_algorithm", "['int','ann'=>'resource']");
f("fann_get_train_stop_function", "['int','ann'=>'resource']");
f("fann_init_weights", "['bool','ann'=>'resource','train_data'=>'resource']");
f("fann_length_train_data", "['int','data'=>'resource']");
f("fann_merge_train_data", "['resource','data1'=>'resource','data2'=>'resource']");
f("fann_num_input_train_data", "['int','data'=>'resource']");
f("fann_num_output_train_data", "['int','data'=>'resource']");
f("fann_print_error", "['void','errdat'=>'string']");
f("fann_randomize_weights", "['bool','ann'=>'resource','min_weight'=>'float','max_weight'=>'float']");
f("fann_read_train_from_file", "['resource','filename'=>'string']");
f("fann_reset_errno", "['void','errdat'=>'resource']");
f("fann_reset_errstr", "['void','errdat'=>'resource']");
f("fann_reset_MSE", "['bool','ann'=>'string']");
f("fann_run", "['array','ann'=>'resource','input'=>'array']");
f("fann_save", "['bool','ann'=>'resource','configuration_file'=>'string']");
f("fann_save_train", "['bool','data'=>'resource','file_name'=>'string']");
f("fann_scale_input", "['bool','ann'=>'resource','input_vector'=>'array']");
f("fann_scale_input_train_data", "['bool','train_data'=>'resource','new_min'=>'float','new_max'=>'float']");
f("fann_scale_output", "['bool','ann'=>'resource','output_vector'=>'array']");
f("fann_scale_output_train_data", "['bool','train_data'=>'resource','new_min'=>'float','new_max'=>'float']");
f("fann_scale_train", "['bool','ann'=>'resource','train_data'=>'resource']");
f("fann_scale_train_data", "['bool','train_data'=>'resource','new_min'=>'float','new_max'=>'float']");
f("fann_set_activation_function", "['bool','ann'=>'resource','activation_function'=>'int','layer'=>'int','neuron'=>'int']");
f("fann_set_activation_function_hidden", "['bool','ann'=>'resource','activation_function'=>'int']");
f("fann_set_activation_function_layer", "['bool','ann'=>'resource','activation_function'=>'int','layer'=>'int']");
f("fann_set_activation_function_output", "['bool','ann'=>'resource','activation_function'=>'int']");
f("fann_set_activation_steepness", "['bool','ann'=>'resource','activation_steepness'=>'float','layer'=>'int','neuron'=>'int']");
f("fann_set_activation_steepness_hidden", "['bool','ann'=>'resource','activation_steepness'=>'float']");
f("fann_set_activation_steepness_layer", "['bool','ann'=>'resource','activation_steepness'=>'float','layer'=>'int']");
f("fann_set_activation_steepness_output", "['bool','ann'=>'resource','activation_steepness'=>'float']");
f("fann_set_bit_fail_limit", "['bool','ann'=>'resource','bit_fail_limit'=>'float']");
f("fann_set_callback", "['bool','ann'=>'resource','callback'=>'collable']");
f("fann_set_cascade_activation_functions", "['bool','ann'=>'resource','cascade_activation_functions'=>'array']");
f("fann_set_cascade_activation_steepnesses", "['bool','ann'=>'resource','cascade_activation_steepnesses_count'=>'array']");
f("fann_set_cascade_candidate_change_fraction", "['bool','ann'=>'resource','cascade_candidate_change_fraction'=>'float']");
f("fann_set_cascade_candidate_limit", "['bool','ann'=>'resource','cascade_candidate_limit'=>'float']");
f("fann_set_cascade_candidate_stagnation_epochs", "['bool','ann'=>'resource','cascade_candidate_stagnation_epochs'=>'int']");
f("fann_set_cascade_max_cand_epochs", "['bool','ann'=>'resource','cascade_max_cand_epochs'=>'int']");
f("fann_set_cascade_max_out_epochs", "['bool','ann'=>'resource','cascade_max_out_epochs'=>'int']");
f("fann_set_cascade_min_cand_epochs", "['bool','ann'=>'resource','cascade_min_cand_epochs'=>'int']");
f("fann_set_cascade_min_out_epochs", "['bool','ann'=>'resource','cascade_min_out_epochs'=>'int']");
f("fann_set_cascade_num_candidate_groups", "['bool','ann'=>'resource','cascade_num_candidate_groups'=>'int']");
f("fann_set_cascade_output_change_fraction", "['bool','ann'=>'resource','cascade_output_change_fraction'=>'float']");
f("fann_set_cascade_output_stagnation_epochs", "['bool','ann'=>'resource','cascade_output_stagnation_epochs'=>'int']");
f("fann_set_cascade_weight_multiplier", "['bool','ann'=>'resource','cascade_weight_multiplier'=>'float']");
f("fann_set_error_log", "['void','errdat'=>'resource','log_file'=>'string']");
f("fann_set_input_scaling_params", "['bool','ann'=>'resource','train_data'=>'resource','new_input_min'=>'float','new_input_max'=>'float']");
f("fann_set_learning_momentum", "['bool','ann'=>'resource','learning_momentum'=>'float']");
f("fann_set_learning_rate", "['bool','ann'=>'resource','learning_rate'=>'float']");
f("fann_set_output_scaling_params", "['bool','ann'=>'resource','train_data'=>'resource','new_output_min'=>'float','new_output_max'=>'float']");
f("fann_set_quickprop_decay", "['bool','ann'=>'resource','quickprop_decay'=>'float']");
f("fann_set_quickprop_mu", "['bool','ann'=>'resource','quickprop_mu'=>'float']");
f("fann_set_rprop_decrease_factor", "['bool','ann'=>'resource','rprop_decrease_factor'=>'float']");
f("fann_set_rprop_delta_max", "['bool','ann'=>'resource','rprop_delta_max'=>'float']");
f("fann_set_rprop_delta_min", "['bool','ann'=>'resource','rprop_delta_min'=>'float']");
f("fann_set_rprop_delta_zero", "['bool','ann'=>'resource','rprop_delta_zero'=>'float']");
f("fann_set_rprop_increase_factor", "['bool','ann'=>'resource','rprop_increase_factor'=>'float']");
f("fann_set_sarprop_step_error_shift", "['bool','ann'=>'resource','sarprop_step_error_shift'=>'float']");
f("fann_set_sarprop_step_error_threshold_factor", "['bool','ann'=>'resource','sarprop_step_error_threshold_factor'=>'float']");
f("fann_set_sarprop_temperature", "['bool','ann'=>'resource','sarprop_temperature'=>'float']");
f("fann_set_sarprop_weight_decay_shift", "['bool','ann'=>'resource','sarprop_weight_decay_shift'=>'float']");
f("fann_set_scaling_params", "['bool','ann'=>'resource','train_data'=>'resource','new_input_min'=>'float','new_input_max'=>'float','new_output_min'=>'float','new_output_max'=>'float']");
f("fann_set_train_error_function", "['bool','ann'=>'resource','error_function'=>'int']");
f("fann_set_training_algorithm", "['bool','ann'=>'resource','training_algorithm'=>'int']");
f("fann_set_train_stop_function", "['bool','ann'=>'resource','stop_function'=>'int']");
f("fann_set_weight_array", "['bool','ann'=>'resource','connections'=>'array']");
f("fann_set_weight", "['bool','ann'=>'resource','from_neuron'=>'int','to_neuron'=>'int','weight'=>'float']");
f("fann_shuffle_train_data", "['bool','train_data'=>'resource']");
f("fann_subset_train_data", "['resource','data'=>'resource','pos'=>'int','length'=>'int']");
f("fann_test", "['bool','ann'=>'resource','input'=>'array','desired_output'=>'array']");
f("fann_test_data", "['float','ann'=>'resource','data'=>'resource']");
f("fann_train", "['bool','ann'=>'resource','input'=>'array','desired_output'=>'array']");
f("fann_train_epoch", "['float','ann'=>'resource','data'=>'resource']");
f("fann_train_on_data", "['bool','ann'=>'resource','data'=>'resource','max_epochs'=>'int','epochs_between_reports'=>'int','desired_error'=>'float']");
f("fann_train_on_file", "['bool','ann'=>'resource','filename'=>'string','max_epochs'=>'int','epochs_between_reports'=>'int','desired_error'=>'float']");
f("fastcgi_finish_request", "['bool']");
f("fbsql_affected_rows", "['int','link_identifier='=>'']");
f("fbsql_autocommit", "['bool','link_identifier'=>'','onoff='=>'bool']");
f("fbsql_blob_size", "['int','blob_handle'=>'string','link_identifier='=>'']");
f("fbsql_change_user", "['bool','user'=>'string','password'=>'string','database='=>'string','link_identifier='=>'']");
f("fbsql_clob_size", "['int','clob_handle'=>'string','link_identifier='=>'']");
f("fbsql_close", "['bool','link_identifier='=>'']");
f("fbsql_commit", "['bool','link_identifier='=>'']");
f("fbsql_connect", "['resource','hostname='=>'string','username='=>'string','password='=>'string']");
f("fbsql_create_blob", "['string','blob_data'=>'string','link_identifier='=>'']");
f("fbsql_create_clob", "['string','clob_data'=>'string','link_identifier='=>'']");
f("fbsql_create_db", "['bool','database_name'=>'string','link_identifier='=>'','database_options='=>'string']");
f("fbsql_database_password", "['string','link_identifier'=>'','database_password='=>'string']");
f("fbsql_database", "['string','link_identifier'=>'','database='=>'string']");
f("fbsql_data_seek", "['bool','result'=>'','row_number'=>'int']");
f("fbsql_db_query", "['resource','database'=>'string','query'=>'string','link_identifier='=>'']");
f("fbsql_db_status", "['int','database_name'=>'string','link_identifier='=>'']");
f("fbsql_drop_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("fbsql_errno", "['int','link_identifier='=>'']");
f("fbsql_error", "['string','link_identifier='=>'']");
f("fbsql_fetch_array", "['array','result'=>'','result_type='=>'int']");
f("fbsql_fetch_assoc", "['array','result'=>'']");
f("fbsql_fetch_field", "['any','result'=>'','field_offset='=>'int']");
f("fbsql_fetch_lengths", "['array','result'=>'']");
f("fbsql_fetch_object", "['any','result'=>'']");
f("fbsql_fetch_row", "['array','result'=>'']");
f("fbsql_field_flags", "['string','result'=>'','field_offset='=>'int']");
f("fbsql_field_len", "['int','result'=>'','field_offset='=>'int']");
f("fbsql_field_name", "['string','result'=>'','field_index='=>'int']");
f("fbsql_field_seek", "['bool','result'=>'','field_offset='=>'int']");
f("fbsql_field_table", "['string','result'=>'','field_offset='=>'int']");
f("fbsql_field_type", "['string','result'=>'','field_offset='=>'int']");
f("fbsql_free_result", "['bool','result'=>'']");
f("fbsql_get_autostart_info", "['array','link_identifier='=>'']");
f("fbsql_hostname", "['string','link_identifier'=>'','host_name='=>'string']");
f("fbsql_insert_id", "['int','link_identifier='=>'']");
f("fbsql_list_dbs", "['resource','link_identifier='=>'']");
f("fbsql_list_fields", "['resource','database_name'=>'string','table_name'=>'string','link_identifier='=>'']");
f("fbsql_list_tables", "['resource','database'=>'string','link_identifier='=>'']");
f("fbsql_next_result", "['bool','result'=>'']");
f("fbsql_num_fields", "['int','result'=>'']");
f("fbsql_num_rows", "['int','result'=>'']");
f("fbsql_password", "['string','link_identifier'=>'','password='=>'string']");
f("fbsql_pconnect", "['resource','hostname='=>'string','username='=>'string','password='=>'string']");
f("fbsql_query", "['resource','query'=>'string','link_identifier='=>'','batch_size='=>'int']");
f("fbsql_read_blob", "['string','blob_handle'=>'string','link_identifier='=>'']");
f("fbsql_read_clob", "['string','clob_handle'=>'string','link_identifier='=>'']");
f("fbsql_result", "['','result'=>'','row='=>'int','field='=>'']");
f("fbsql_rollback", "['bool','link_identifier='=>'']");
f("fbsql_rows_fetched", "['int','result'=>'']");
f("fbsql_select_db", "['bool','database_name='=>'string','link_identifier='=>'']");
f("fbsql_set_characterset", "['','link_identifier'=>'','characterset'=>'int','in_out_both='=>'int']");
f("fbsql_set_lob_mode", "['bool','result'=>'','lob_mode'=>'int']");
f("fbsql_set_password", "['bool','link_identifier'=>'','user'=>'string','password'=>'string','old_password'=>'string']");
f("fbsql_set_transaction", "['','link_identifier'=>'','locking'=>'int','isolation'=>'int']");
f("fbsql_start_db", "['bool','database_name'=>'string','link_identifier='=>'','database_options='=>'string']");
f("fbsql_stop_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("fbsql_table_name", "['string','result'=>'','index'=>'int']");
f("fbsql_username", "['string','link_identifier'=>'','username='=>'string']");
f("fbsql_warnings", "['bool','onoff='=>'bool']");
f("fclose", "['bool','fp'=>'']");
f("fdf_add_doc_javascript", "['bool','fdf_document'=>'','script_name'=>'string','script_code'=>'string']");
f("fdf_add_template", "['bool','fdf_document'=>'','newpage'=>'int','filename'=>'string','template'=>'string','rename'=>'int']");
f("fdf_close", "['','fdf_document'=>'']");
f("fdf_create", "['resource']");
f("fdf_enum_values", "['bool','fdf_document'=>'','function'=>'callable','userdata='=>'']");
f("fdf_errno", "['int']");
f("fdf_error", "['string','error_code='=>'int']");
f("fdf_get_ap", "['bool','fdf_document'=>'','field'=>'string','face'=>'int','filename'=>'string']");
f("fdf_get_attachment", "['array','fdf_document'=>'','fieldname'=>'string','savepath'=>'string']");
f("fdf_get_encoding", "['string','fdf_document'=>'']");
f("fdf_get_file", "['string','fdf_document'=>'']");
f("fdf_get_flags", "['int','fdf_document'=>'','fieldname'=>'string','whichflags'=>'int']");
f("fdf_get_opt", "['','fdf_document'=>'','fieldname'=>'string','element='=>'int']");
f("fdf_get_status", "['string','fdf_document'=>'']");
f("fdf_get_value", "['','fdf_document'=>'','fieldname'=>'string','which='=>'int']");
f("fdf_get_version", "['string','fdf_document='=>'']");
f("fdf_header", "['']");
f("fdf_next_field_name", "['string','fdf_document'=>'','fieldname='=>'string']");
f("fdf_open", "['resource','filename'=>'string']");
f("fdf_open_string", "['resource','fdf_data'=>'string']");
f("fdf_remove_item", "['bool','fdf_document'=>'','fieldname'=>'string','item'=>'int']");
f("fdf_save", "['bool','fdf_document'=>'','filename='=>'string']");
f("fdf_save_string", "['string','fdf_document'=>'']");
f("fdf_set_ap", "['bool','fdf_document'=>'','field_name'=>'string','face'=>'int','filename'=>'string','page_number'=>'int']");
f("fdf_set_encoding", "['bool','fdf_document'=>'','encoding'=>'string']");
f("fdf_set_file", "['bool','fdf_document'=>'','url'=>'string','target_frame='=>'string']");
f("fdf_set_flags", "['bool','fdf_document'=>'','fieldname'=>'string','whichflags'=>'int','newflags'=>'int']");
f("fdf_set_javascript_action", "['bool','fdf_document'=>'','fieldname'=>'string','trigger'=>'int','script'=>'string']");
f("fdf_set_on_import_javascript", "['bool','fdf_document'=>'','script'=>'string','before_data_import'=>'bool']");
f("fdf_set_opt", "['bool','fdf_document'=>'','fieldname'=>'string','element'=>'int','str1'=>'string','str2'=>'string']");
f("fdf_set_status", "['bool','fdf_document'=>'','status'=>'string']");
f("fdf_set_submit_form_action", "['bool','fdf_document'=>'','fieldname'=>'string','trigger'=>'int','script'=>'string','flags'=>'int']");
f("fdf_set_target_frame", "['bool','fdf_document'=>'','frame_name'=>'string']");
f("fdf_set_value", "['bool','fdf_document'=>'','fieldname'=>'string','value'=>'','isname='=>'int']");
f("fdf_set_version", "['bool','fdf_document'=>'','version'=>'string']");
f("feof", "['bool','fp'=>'']");
f("fflush", "['bool','fp'=>'']");
f("fgetc", "['string|false','fp'=>'']");
f("fgetcsv", "['array|false|null','fp'=>'','length='=>'int','delimiter='=>'string','enclosure='=>'string','escape='=>'string']");
f("fgetss", "['string|false','fp'=>'','length='=>'int','allowable_tags='=>'string']");
f("fgets", "['string|false','fp'=>'','length='=>'int']");
f("file", "['array|false','filename'=>'string','flags='=>'int','context='=>'']");
f("fileatime", "['int|false','filename'=>'string']");
f("filectime", "['int|false','filename'=>'string']");
f("file_exists", "['bool','filename'=>'string']");
f("file_get_contents", "['string|false','filename'=>'string','use_include_path='=>'bool','context='=>'','offset='=>'int','maxlen='=>'int']");
f("filegroup", "['int|false','filename'=>'string']");
f("fileinode", "['int|false','filename'=>'string']");
f("filemtime", "['int|false','filename'=>'string']");
f("fileowner", "['int|false','filename'=>'string']");
f("fileperms", "['int|bool','filename'=>'string']");
f("filepro", "['bool','directory'=>'string']");
f("filepro_fieldcount", "['int']");
f("filepro_fieldname", "['string','field_number'=>'int']");
f("filepro_fieldtype", "['string','field_number'=>'int']");
f("filepro_fieldwidth", "['int','field_number'=>'int']");
f("filepro_retrieve", "['string','row_number'=>'int','field_number'=>'int']");
f("filepro_rowcount", "['int']");
f("file_put_contents", "['int','file'=>'string','data'=>'','flags='=>'int','context='=>'']");
f("filesize", "['int|false','filename'=>'string']");
f("FilesystemIterator::__construct", "['FilesystemIterator','path'=>'string','flags'=>'int']");
f("FilesystemIterator::current", "['string']");
f("FilesystemIterator::getFlags", "['int']");
f("FilesystemIterator::key", "['string']");
f("FilesystemIterator::next", "['']");
f("FilesystemIterator::rewind", "['']");
f("FilesystemIterator::setFlags", "['','flags='=>'int']");
f("filetype", "['string|false','filename'=>'string']");
f("filter_has_var", "['bool','type'=>'int','variable_name'=>'string']");
f("filter_id", "['int|false','filtername'=>'string']");
f("filter_input_array", "['','type'=>'int','definition='=>'']");
f("filter_input", "['','type'=>'int','variable_name'=>'string','filter='=>'int','options='=>'']");
f("FilterIterator::accept", "['bool']");
f("FilterIterator::__construct", "['FilterIterator','it'=>'iterator']");
f("FilterIterator::current", "['']");
f("FilterIterator::getInnerIterator", "['Iterator']");
f("FilterIterator::key", "['']");
f("FilterIterator::next", "['']");
f("FilterIterator::rewind", "['']");
f("FilterIterator::valid", "['bool']");
f("filter_list", "['array']");
f("filter_var_array", "['','data'=>'array','definition='=>'','add_empty='=>'bool']");
f("filter_var", "['','variable'=>'','filter='=>'int','options='=>'']");
f("finfo_buffer", "['string','finfo'=>'resource','string'=>'string','options='=>'int','context='=>'resource']");
f("finfo::buffer", "['string','string'=>'string','options='=>'int','context='=>'resource']");
f("finfo_close", "['bool','finfo'=>'resource']");
f("finfo::__construct", "['finfo','options='=>'int','magic_file='=>'string']");
f("finfo_file", "['string','finfo'=>'resource','file_name'=>'string','options='=>'int','context='=>'resource']");
f("finfo_open", "['resource','options='=>'int','arg='=>'string']");
f("finfo_set_flags", "['bool','finfo'=>'resource','options'=>'int']");
f("floatval", "['float','var'=>'']");
f("flock", "['bool','fp'=>'','operation'=>'int','&wouldblock='=>'int']");
f("floor", "['float','number'=>'float']");
f("flush", "['']");
f("fmod", "['float','x'=>'float','y'=>'float']");
f("fnmatch", "['bool','pattern'=>'string','filename'=>'string','flags='=>'int']");
f("fopen", "['resource','filename'=>'string','mode'=>'string','use_include_path='=>'bool','context='=>'']");
f("forward_static_call_array", "['','function'=>'callable','parameters'=>'array']");
f("forward_static_call", "['','function'=>'callable','parameter='=>'','...='=>'']");
f("fpassthru", "['int','fp'=>'']");
f("fprintf", "['int','stream'=>'','format'=>'string','arg1='=>'','...='=>'']");
f("fputcsv", "['int','fp'=>'','fields'=>'array','delimiter='=>'string','enclosure='=>'string','escape_char='=>'string']");
f("fputs", "['int','fp'=>'','str'=>'string','length='=>'int']");
f("fread", "['string','fp'=>'','length'=>'int']");
f("frenchtojd", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("FrenchToJD", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("fribidi_log2vis", "['string','str'=>'string','direction'=>'string','charset'=>'int']");
f("fscanf", "['','stream'=>'','format'=>'string','...='=>'string']");
f("fseek", "['int','fp'=>'','offset'=>'int','whence='=>'int']");
f("fsockopen", "['resource','hostname'=>'string','port='=>'int','&errno='=>'int','&errstr='=>'string','timeout='=>'float']");
f("fstat", "['array','fp'=>'']");
f("ftell", "['int','fp'=>'']");
f("ftok", "['int','pathname'=>'string','proj'=>'string']");
f("ftp_alloc", "['bool','stream'=>'resource','size'=>'int','response='=>'string']");
f("ftp_cdup", "['bool','stream'=>'resource']");
f("ftp_chdir", "['bool','stream'=>'resource','directory'=>'string']");
f("ftp_chmod", "['int','stream'=>'resource','mode'=>'int','filename'=>'string']");
f("ftp_close", "['bool','stream'=>'resource']");
f("ftp_connect", "['resource','host'=>'string','port='=>'int','timeout='=>'int']");
f("ftp_delete", "['bool','stream'=>'resource','file'=>'string']");
f("ftp_exec", "['bool','stream'=>'resource','command'=>'string']");
f("ftp_fget", "['bool','stream'=>'resource','fp'=>'','remote_file'=>'string','mode'=>'int','resumepos='=>'int']");
f("ftp_fput", "['bool','stream'=>'resource','remote_file'=>'string','fp'=>'','mode'=>'int','startpos='=>'int']");
f("ftp_get", "['bool','stream'=>'resource','local_file'=>'string','remote_file'=>'string','mode'=>'int','resume_pos='=>'int']");
f("ftp_get_option", "['','stream'=>'resource','option'=>'int']");
f("ftp_login", "['bool','stream'=>'resource','username'=>'string','password'=>'string']");
f("ftp_mdtm", "['int','stream'=>'resource','filename'=>'string']");
f("ftp_mkdir", "['string','stream'=>'resource','directory'=>'string']");
f("ftp_nb_continue", "['int','stream'=>'resource']");
f("ftp_nb_fget", "['int','stream'=>'resource','fp'=>'','remote_file'=>'string','mode'=>'int','resumepos='=>'int']");
f("ftp_nb_fput", "['int','stream'=>'resource','remote_file'=>'string','fp'=>'','mode'=>'int','startpos='=>'int']");
f("ftp_nb_get", "['int','stream'=>'resource','local_file'=>'string','remote_file'=>'string','mode'=>'int','resume_pos='=>'int']");
f("ftp_nb_put", "['int','stream'=>'resource','remote_file'=>'string','local_file'=>'string','mode'=>'int','startpos='=>'int']");
f("ftp_nlist", "['array','stream'=>'resource','directory'=>'string']");
f("ftp_pasv", "['bool','stream'=>'resource','pasv'=>'bool']");
f("ftp_put", "['bool','stream'=>'resource','remote_file'=>'string','local_file'=>'string','mode'=>'int','startpos='=>'int']");
f("ftp_pwd", "['string','stream'=>'resource']");
f("ftp_raw", "['array','stream'=>'resource','command'=>'string']");
f("ftp_rawlist", "['array','stream'=>'resource','directory'=>'string','recursive='=>'bool']");
f("ftp_rename", "['bool','stream'=>'resource','src'=>'string','dest'=>'string']");
f("ftp_rmdir", "['bool','stream'=>'resource','directory'=>'string']");
f("ftp_set_option", "['bool','stream'=>'resource','option'=>'int','value'=>'']");
f("ftp_site", "['bool','stream'=>'resource','cmd'=>'string']");
f("ftp_size", "['int','stream'=>'resource','filename'=>'string']");
f("ftp_ssl_connect", "['resource','host'=>'string','port='=>'int','timeout='=>'int']");
f("ftp_systype", "['string','stream'=>'resource']");
f("ftruncate", "['bool','fp'=>'','size'=>'int']");
f("func_get_arg", "['','arg_num'=>'int']");
f("func_get_args", "['array']");
f("func_num_args", "['int']");
f("function_exists", "['bool','function_name'=>'string']");
f("fwrite", "['int','fp'=>'','str'=>'string','length='=>'int']");
f("gc_collect_cycles", "['int']");
f("gc_disable", "['']");
f("gc_enable", "['']");
f("gc_enabled", "['']");
f("gd_info", "['array']");
f("GearmanClient::addOptions", "['bool','options'=>'int']");
f("GearmanClient::addServer", "['bool','host='=>'string','port='=>'int']");
f("GearmanClient::addServers", "['bool','servers='=>'string']");
f("GearmanClient::addTaskBackground", "['GearmanTask','function_name'=>'string','workload'=>'string','context='=>'','unique='=>'string']");
f("GearmanClient::addTask", "['GearmanTask','function_name'=>'string','workload'=>'string','context='=>'','unique='=>'string']");
f("GearmanClient::addTaskHighBackground", "['GearmanTask','function_name'=>'string','workload'=>'string','context='=>'','unique='=>'string']");
f("GearmanClient::addTaskHigh", "['GearmanTask','function_name'=>'string','workload'=>'string','context='=>'','unique='=>'string']");
f("GearmanClient::addTaskLowBackground", "['GearmanTask','function_name'=>'string','workload'=>'string','context='=>'','unique='=>'string']");
f("GearmanClient::addTaskLow", "['GearmanTask','function_name'=>'string','workload'=>'string','context='=>'','unique='=>'string']");
f("GearmanClient::addTaskStatus", "['GearmanTask','job_handle'=>'string','context='=>'string']");
f("GearmanClient::clearCallbacks", "['bool']");
f("GearmanClient::clone", "['GearmanClient']");
f("GearmanClient::__construct", "['']");
f("GearmanClient::context", "['string']");
f("GearmanClient::data", "['string']");
f("GearmanClient::doBackground", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::doHighBackground", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::doHigh", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::doJobHandle", "['string']");
f("GearmanClient::doLowBackground", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::doLow", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::doNormal", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::doStatus", "['array']");
f("GearmanClient::do", "['string','function_name'=>'string','workload'=>'string','unique='=>'string']");
f("GearmanClient::echo", "['bool','workload'=>'string']");
f("GearmanClient::error", "['string']");
f("GearmanClient::getErrno", "['int']");
f("GearmanClient::jobStatus", "['array','job_handle'=>'string']");
f("GearmanClient::ping", "['bool','workload'=>'string']");
f("GearmanClient::removeOptions", "['bool','options'=>'int']");
f("GearmanClient::returnCode", "['int']");
f("GearmanClient::runTasks", "['bool']");
f("GearmanClient::setClientCallback", "['','callback'=>'callable']");
f("GearmanClient::setCompleteCallback", "['bool','callback'=>'callable']");
f("GearmanClient::setContext", "['bool','context'=>'string']");
f("GearmanClient::setCreatedCallback", "['bool','callback'=>'string']");
f("GearmanClient::setData", "['bool','data'=>'string']");
f("GearmanClient::setDataCallback", "['bool','callback'=>'callable']");
f("GearmanClient::setExceptionCallback", "['bool','callback'=>'callable']");
f("GearmanClient::setFailCallback", "['bool','callback'=>'callable']");
f("GearmanClient::setOptions", "['bool','options'=>'int']");
f("GearmanClient::setStatusCallback", "['bool','callback'=>'callable']");
f("GearmanClient::setTimeout", "['bool','timeout'=>'int']");
f("GearmanClient::setWarningCallback", "['bool','callback'=>'callable']");
f("GearmanClient::setWorkloadCallback", "['bool','callback'=>'callable']");
f("GearmanClient::timeout", "['int']");
f("GearmanJob::complete", "['bool','result'=>'string']");
f("GearmanJob::__construct", "['']");
f("GearmanJob::data", "['bool','data'=>'string']");
f("GearmanJob::exception", "['bool','exception'=>'string']");
f("GearmanJob::fail", "['bool']");
f("GearmanJob::functionName", "['string']");
f("gearman_job_handle", "['string']");
f("GearmanJob::handle", "['string']");
f("GearmanJob::returnCode", "['int']");
f("GearmanJob::sendComplete", "['bool','result'=>'string']");
f("GearmanJob::sendData", "['bool','data'=>'string']");
f("GearmanJob::sendException", "['bool','exception'=>'string']");
f("GearmanJob::sendFail", "['bool']");
f("GearmanJob::sendStatus", "['bool','numerator'=>'int','denominator'=>'int']");
f("GearmanJob::sendWarning", "['bool','warning'=>'string']");
f("GearmanJob::setReturn", "['bool','gearman_return_t'=>'string']");
f("gearman_job_status", "['array','job_handle'=>'string']");
f("GearmanJob::status", "['bool','numerator'=>'int','denominator'=>'int']");
f("GearmanJob::unique", "['string']");
f("GearmanJob::warning", "['bool','warning'=>'string']");
f("GearmanJob::workloadSize", "['int']");
f("GearmanJob::workload", "['string']");
f("GearmanTask::__construct", "['']");
f("GearmanTask::create", "['GearmanTask']");
f("GearmanTask::dataSize", "['int']");
f("GearmanTask::data", "['string']");
f("GearmanTask::functionName", "['string']");
f("GearmanTask::function", "['string']");
f("GearmanTask::isKnown", "['bool']");
f("GearmanTask::isRunning", "['bool']");
f("GearmanTask::jobHandle", "['string']");
f("GearmanTask::recvData", "['array','data_len'=>'int']");
f("GearmanTask::returnCode", "['int']");
f("GearmanTask::sendData", "['int','data'=>'string']");
f("GearmanTask::sendWorkload", "['int','data'=>'string']");
f("GearmanTask::taskDenominator", "['int']");
f("GearmanTask::taskNumerator", "['int']");
f("GearmanTask::unique", "['string']");
f("GearmanTask::uuid", "['string']");
f("GearmanWorker::addFunction", "['bool','function_name'=>'string','function'=>'callable','context='=>'','timeout='=>'int']");
f("GearmanWorker::addOptions", "['bool','option'=>'int']");
f("GearmanWorker::addServer", "['bool','host='=>'string','port='=>'int']");
f("GearmanWorker::addServers", "['bool','servers'=>'string']");
f("GearmanWorker::clone", "['']");
f("GearmanWorker::__construct", "['']");
f("GearmanWorker::echo", "['bool','workload'=>'string']");
f("GearmanWorker::error", "['string']");
f("GearmanWorker::getErrno", "['int']");
f("GearmanWorker::options", "['int']");
f("GearmanWorker::register", "['bool','function_name'=>'string','timeout='=>'int']");
f("GearmanWorker::removeOptions", "['bool','option'=>'int']");
f("GearmanWorker::returnCode", "['int']");
f("GearmanWorker::setId", "['bool','id'=>'string']");
f("GearmanWorker::setOptions", "['bool','option'=>'int']");
f("GearmanWorker::setTimeout", "['bool','timeout'=>'int']");
f("GearmanWorker::timeout", "['int']");
f("GearmanWorker::unregisterAll", "['bool']");
f("GearmanWorker::unregister", "['bool','function_name'=>'string']");
f("GearmanWorker::wait", "['bool']");
f("GearmanWorker::work", "['bool']");
f("Gender\\Gender::connect", "['bool','dsn'=>'string']");
f("Gender\\Gender::__construct", "['','dsn='=>'string']");
f("Gender\\Gender::country", "['array','country'=>'int']");
f("Gender\\Gender::get", "['int','name'=>'string','country='=>'int']");
f("Gender\\Gender::isNick", "['array','name0'=>'string','name1'=>'string','country='=>'int']");
f("Gender\\Gender::similarNames", "['array','name'=>'string','country='=>'int']");
f("Generator::current", "['']");
f("Generator::getReturn", "['']");
f("Generator::key", "['']");
f("Generator::next", "['']");
f("Generator::rewind", "['']");
f("Generator::send", "['','value'=>'']");
f("Generator::throw", "['','exception'=>'exception']");
f("Generator::valid", "['bool']");
f("Generator::__wakeup", "['']");
f("geoip_asnum_by_name", "['string','hostname'=>'string']");
f("geoip_continent_code_by_name", "['string','hostname'=>'string']");
f("geoip_country_code3_by_name", "['string','hostname'=>'string']");
f("geoip_country_code_by_name", "['string','hostname'=>'string']");
f("geoip_country_name_by_name", "['string','hostname'=>'string']");
f("geoip_database_info", "['string','database='=>'int']");
f("geoip_db_avail", "['bool','database'=>'int']");
f("geoip_db_filename", "['string','database'=>'int']");
f("geoip_db_get_all_info", "['array']");
f("geoip_domain_by_name", "['string','hostname'=>'string']");
f("geoip_id_by_name", "['int','hostname'=>'string']");
f("geoip_isp_by_name", "['string','hostname'=>'string']");
f("geoip_netspeedcell_by_name", "['string','hostname'=>'string']");
f("geoip_org_by_name", "['string','hostname'=>'string']");
f("geoip_record_by_name", "['array','hostname'=>'string']");
f("geoip_region_by_name", "['array','hostname'=>'string']");
f("geoip_region_name_by_code", "['string','country_code'=>'string','region_code'=>'string']");
f("geoip_setup_custom_directory", "['void','path'=>'string']");
f("geoip_time_zone_by_country_and_region", "['string','country_code'=>'string','region_code='=>'string']");
f("getallheaders", "['array']");
f("get_browser", "['','browser_name='=>'string','return_array='=>'bool']");
f("get_called_class", "['string']");
f("get_cfg_var", "['','option_name'=>'string']");
f("get_class_methods", "['array','class'=>'']");
f("get_class", "['string','object='=>'any']");
f("get_class_vars", "['array','class_name'=>'string']");
f("get_current_user", "['string']");
f("getcwd", "['string|false']");
f("getdate", "['array','timestamp='=>'int']");
f("get_declared_classes", "['array']");
f("get_declared_interfaces", "['array']");
f("get_declared_traits", "['array']");
f("get_defined_constants", "['array','categorize='=>'bool']");
f("get_defined_functions", "['array']");
f("get_defined_vars", "['array']");
f("getenv", "['string','varname'=>'string']");
f("get_extension_funcs", "['array','extension_name'=>'string']");
f("get_headers", "['array','url'=>'string','format='=>'int']");
f("gethostbyaddr", "['string','ip_address'=>'string']");
f("gethostbynamel", "['array|false','hostname'=>'string']");
f("gethostbyname", "['string','hostname'=>'string']");
f("gethostname", "['string']");
f("get_html_translation_table", "['array','table='=>'int','flags='=>'int','encoding='=>'string']");
f("getimagesize", "['array|false','imagefile'=>'string','&info='=>'array']");
f("getimagesizefromstring", "['array|false','data'=>'string','&info='=>'array']");
f("get_included_files", "['array']");
f("get_include_path", "['string']");
f("getlastmod", "['int']");
f("get_loaded_extensions", "['array','zend_extensions='=>'bool']");
f("get_magic_quotes_gpc", "['bool']");
f("get_magic_quotes_runtime", "['bool']");
f("get_meta_tags", "['array','filename'=>'string','use_include_path='=>'bool']");
f("getmxrr", "['bool','hostname'=>'string','&mxhosts'=>'array','&weight='=>'array']");
f("getmygid", "['int']");
f("getmyinode", "['int']");
f("getmypid", "['int']");
f("getmyuid", "['int']");
f("get_object_vars", "['array','obj'=>'any']");
f("getopt", "['array','options'=>'string','longopts='=>'array']");
f("get_parent_class", "['','object='=>'']");
f("getprotobyname", "['int|false','name'=>'string']");
f("getprotobynumber", "['string','proto'=>'int']");
f("getrandmax", "['int']");
f("get_resources", "['array','resouce_type'=>'string']");
f("get_resource_type", "['string','res'=>'']");
f("getrusage", "['array','who='=>'int']");
f("getservbyname", "['int|false','service'=>'string','protocol'=>'string']");
f("getservbyport", "['string|bool','port'=>'int','protocol'=>'string']");
f("gettext", "['string','msgid'=>'string']");
f("gettimeofday", "['array|float','get_as_float='=>'bool']");
f("gettype", "['string','var'=>'']");
f("glob", "['array','pattern'=>'string','flags='=>'int']");
f("GlobIterator::__construct", "['GlobIterator','path'=>'string','flags'=>'int']");
f("GlobIterator::cont", "['int']");
f("GlobIterator::count", "['int']");
f("Gmagick::addimage", "['Gmagick','gmagick'=>'gmagick']");
f("Gmagick::addnoiseimage", "['Gmagick','noise'=>'int']");
f("Gmagick::annotateimage", "['Gmagick','gmagickdraw'=>'gmagickdraw','x'=>'float','y'=>'float','angle'=>'float','text'=>'string']");
f("Gmagick::blurimage", "['Gmagick','radius'=>'float','sigma'=>'float','channel='=>'int']");
f("Gmagick::borderimage", "['Gmagick','color'=>'gmagickpixel','width'=>'int','height'=>'int']");
f("Gmagick::charcoalimage", "['Gmagick','radius'=>'float','sigma'=>'float']");
f("Gmagick::chopimage", "['Gmagick','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Gmagick::clear", "['Gmagick']");
f("Gmagick::commentimage", "['Gmagick','comment'=>'string']");
f("Gmagick::compositeimage", "['Gmagick','source'=>'gmagick','compose'=>'int','x'=>'int','y'=>'int']");
f("Gmagick::__construct", "['','filename='=>'string']");
f("Gmagick::cropimage", "['Gmagick','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Gmagick::cropthumbnailimage", "['Gmagick','width'=>'int','height'=>'int']");
f("Gmagick::current", "['Gmagick']");
f("Gmagick::cyclecolormapimage", "['Gmagick','displace'=>'int']");
f("Gmagick::deconstructimages", "['']");
f("Gmagick::despeckleimage", "['Gmagick']");
f("Gmagick::destroy", "['Gmagick']");
f("GmagickDraw::annotate", "['GmagickDraw','x'=>'float','y'=>'float','text'=>'string']");
f("GmagickDraw::arc", "['GmagickDraw','sx'=>'float','sy'=>'float','ex'=>'float','ey'=>'float','sd'=>'float','ed'=>'float']");
f("GmagickDraw::bezier", "['GmagickDraw','coordinate_array'=>'array']");
f("GmagickDraw::ellipse", "['GmagickDraw','ox'=>'float','oy'=>'float','rx'=>'float','ry'=>'float','start'=>'float','end'=>'float']");
f("GmagickDraw::getfillcolor", "['']");
f("GmagickDraw::getfillopacity", "['float']");
f("GmagickDraw::getfontsize", "['float']");
f("GmagickDraw::getfont", "['string']");
f("GmagickDraw::getfontstyle", "['int']");
f("GmagickDraw::getfontweight", "['int']");
f("GmagickDraw::getstrokecolor", "['']");
f("GmagickDraw::getstrokeopacity", "['float']");
f("GmagickDraw::getstrokewidth", "['float']");
f("GmagickDraw::gettextdecoration", "['int']");
f("GmagickDraw::gettextencoding", "['string']");
f("Gmagick::drawimage", "['Gmagick','gmagickdraw'=>'gmagickdraw']");
f("GmagickDraw::line", "['GmagickDraw','sx'=>'float','sy'=>'float','ex'=>'float','ey'=>'float']");
f("GmagickDraw::point", "['GmagickDraw','x'=>'float','y'=>'float']");
f("GmagickDraw::polygon", "['GmagickDraw','coordinates'=>'array']");
f("GmagickDraw::polyline", "['GmagickDraw','coordinate_array'=>'array']");
f("GmagickDraw::rectangle", "['GmagickDraw','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float']");
f("GmagickDraw::rotate", "['GmagickDraw','degrees'=>'float']");
f("GmagickDraw::roundrectangle", "['GmagickDraw','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','rx'=>'float','ry'=>'float']");
f("GmagickDraw::scale", "['GmagickDraw','x'=>'float','y'=>'float']");
f("GmagickDraw::setfillcolor", "['GmagickDraw','color'=>'string']");
f("GmagickDraw::setfillopacity", "['GmagickDraw','fill_opacity'=>'float']");
f("GmagickDraw::setfont", "['GmagickDraw','font'=>'string']");
f("GmagickDraw::setfontsize", "['GmagickDraw','pointsize'=>'float']");
f("GmagickDraw::setfontstyle", "['GmagickDraw','style'=>'int']");
f("GmagickDraw::setfontweight", "['GmagickDraw','weight'=>'int']");
f("GmagickDraw::setstrokecolor", "['GmagickDraw','color'=>'gmagickpixel']");
f("GmagickDraw::setstrokeopacity", "['GmagickDraw','stroke_opacity'=>'float']");
f("GmagickDraw::setstrokewidth", "['GmagickDraw','width'=>'float']");
f("GmagickDraw::settextdecoration", "['GmagickDraw','decoration'=>'int']");
f("GmagickDraw::settextencoding", "['GmagickDraw','encoding'=>'string']");
f("Gmagick::edgeimage", "['Gmagick','radius'=>'float']");
f("Gmagick::embossimage", "['Gmagick','radius'=>'float','sigma'=>'float']");
f("Gmagick::enhanceimage", "['Gmagick']");
f("Gmagick::equalizeimage", "['Gmagick']");
f("Gmagick::flipimage", "['Gmagick']");
f("Gmagick::flopimage", "['Gmagick']");
f("Gmagick::frameimage", "['Gmagick','color'=>'gmagickpixel','width'=>'int','height'=>'int','inner_bevel'=>'int','outer_bevel'=>'int']");
f("Gmagick::gammaimage", "['Gmagick','gamma'=>'float']");
f("Gmagick::getcopyright", "['string']");
f("Gmagick::getfilename", "['string']");
f("Gmagick::getimagebackgroundcolor", "['']");
f("Gmagick::getimageblueprimary", "['array']");
f("Gmagick::getimagebordercolor", "['']");
f("Gmagick::getimagechanneldepth", "['int','channel_type'=>'int']");
f("Gmagick::getimagecolors", "['int']");
f("Gmagick::getimagecolorspace", "['int']");
f("Gmagick::getimagecompose", "['int']");
f("Gmagick::getimagedelay", "['int']");
f("Gmagick::getimagedepth", "['int']");
f("Gmagick::getimagedispose", "['int']");
f("Gmagick::getimageextrema", "['array']");
f("Gmagick::getimagefilename", "['string']");
f("Gmagick::getimageformat", "['string']");
f("Gmagick::getimagegamma", "['float']");
f("Gmagick::getimagegreenprimary", "['array']");
f("Gmagick::getimageheight", "['int']");
f("Gmagick::getimagehistogram", "['array']");
f("Gmagick::getimageindex", "['int']");
f("Gmagick::getimageinterlacescheme", "['int']");
f("Gmagick::getimageiterations", "['int']");
f("Gmagick::getimagemattecolor", "['']");
f("Gmagick::getimagematte", "['int']");
f("Gmagick::getimageprofile", "['string','name'=>'string']");
f("Gmagick::getimageredprimary", "['array']");
f("Gmagick::getimagerenderingintent", "['int']");
f("Gmagick::getimageresolution", "['array']");
f("Gmagick::getimagescene", "['int']");
f("Gmagick::getimagesignature", "['string']");
f("Gmagick::getimagetype", "['int']");
f("Gmagick::getimageunits", "['int']");
f("Gmagick::getimagewhitepoint", "['array']");
f("Gmagick::getimagewidth", "['int']");
f("Gmagick::getpackagename", "['string']");
f("Gmagick::getquantumdepth", "['array']");
f("Gmagick::getreleasedate", "['string']");
f("Gmagick::getsamplingfactors", "['array']");
f("Gmagick::getsize", "['array']");
f("Gmagick::getversion", "['array']");
f("Gmagick::hasnextimage", "['']");
f("Gmagick::haspreviousimage", "['']");
f("Gmagick::implodeimage", "['','radius'=>'float']");
f("Gmagick::labelimage", "['','label'=>'string']");
f("Gmagick::levelimage", "['','blackpoint'=>'float','gamma'=>'float','whitepoint'=>'float','channel='=>'int']");
f("Gmagick::magnifyimage", "['']");
f("Gmagick::mapimage", "['Gmagick','gmagick'=>'gmagick','dither'=>'bool']");
f("Gmagick::medianfilterimage", "['','radius'=>'float']");
f("Gmagick::minifyimage", "['']");
f("Gmagick::modulateimage", "['','brightness'=>'float','saturation'=>'float','hue'=>'float']");
f("Gmagick::motionblurimage", "['','radius'=>'float','sigma'=>'float','angle'=>'float']");
f("Gmagick::newimage", "['','width'=>'int','height'=>'int','background'=>'string','format='=>'string']");
f("Gmagick::nextimage", "['bool']");
f("Gmagick::normalizeimage", "['','channel='=>'int']");
f("Gmagick::oilpaintimage", "['','radius'=>'float']");
f("GmagickPixel::__construct", "['','color='=>'string']");
f("GmagickPixel::getcolor", "['','as_array='=>'bool','normalize_array='=>'bool']");
f("GmagickPixel::getcolorcount", "['int']");
f("GmagickPixel::getcolorvalue", "['float','color'=>'int']");
f("GmagickPixel::setcolor", "['GmagickPixel','color'=>'string']");
f("GmagickPixel::setcolorvalue", "['GmagickPixel','color'=>'int','value'=>'float']");
f("Gmagick::previousimage", "['bool']");
f("Gmagick::profileimage", "['','name'=>'string','profile'=>'string']");
f("Gmagick::quantizeimage", "['','numcolors'=>'int','colorspace'=>'int','treedepth'=>'int','dither'=>'bool','measureerror'=>'bool']");
f("Gmagick::quantizeimages", "['','numcolors'=>'int','colorspace'=>'int','treedepth'=>'int','dither'=>'bool','measureerror'=>'bool']");
f("Gmagick::queryfontmetrics", "['array','draw'=>'gmagickdraw','text'=>'string']");
f("Gmagick::queryfonts", "['array','pattern='=>'string']");
f("Gmagick::queryformats", "['array','pattern='=>'string']");
f("Gmagick::radialblurimage", "['','angle'=>'float','channel='=>'int']");
f("Gmagick::raiseimage", "['','width'=>'int','height'=>'int','x'=>'int','y'=>'int','raise'=>'bool']");
f("Gmagick::read", "['','filename'=>'string']");
f("Gmagick::readimageblob", "['','imagecontents'=>'string','filename='=>'string']");
f("Gmagick::readimagefile", "['','fp'=>'','filename='=>'string']");
f("Gmagick::readimage", "['','filename'=>'string']");
f("Gmagick::reducenoiseimage", "['','radius'=>'float']");
f("Gmagick::removeimage", "['']");
f("Gmagick::removeimageprofile", "['string','name'=>'string']");
f("Gmagick::resampleimage", "['','xresolution'=>'float','yresolution'=>'float','filter'=>'int','blur'=>'float']");
f("Gmagick::resizeimage", "['','width'=>'int','height'=>'int','filter'=>'int','blur'=>'float','fit='=>'bool']");
f("Gmagick::rollimage", "['','x'=>'int','y'=>'int']");
f("Gmagick::rotateimage", "['Gmagick','color'=>'','degrees'=>'float']");
f("Gmagick::scaleimage", "['Gmagick','width'=>'int','height'=>'int','fit='=>'bool']");
f("Gmagick::separateimagechannel", "['Gmagick','channel'=>'int']");
f("Gmagick::setfilename", "['Gmagick','filename'=>'string']");
f("Gmagick::setimagebackgroundcolor", "['Gmagick','color'=>'gmagickpixel']");
f("Gmagick::setimageblueprimary", "['Gmagick','x'=>'float','y'=>'float']");
f("Gmagick::setimagebordercolor", "['Gmagick','color'=>'gmagickpixel']");
f("Gmagick::setimagechanneldepth", "['Gmagick','channel'=>'int','depth'=>'int']");
f("Gmagick::setimagecolorspace", "['Gmagick','colorspace'=>'int']");
f("Gmagick::setimagecompose", "['Gmagick','composite'=>'int']");
f("Gmagick::setimagedelay", "['Gmagick','delay'=>'int']");
f("Gmagick::setimagedepth", "['Gmagick','depth'=>'int']");
f("Gmagick::setimagedispose", "['Gmagick','disposetype'=>'int']");
f("Gmagick::setimagefilename", "['Gmagick','filename'=>'string']");
f("Gmagick::setimageformat", "['Gmagick','imageformat'=>'string']");
f("Gmagick::setimagegamma", "['Gmagick','gamma'=>'float']");
f("Gmagick::setimagegreenprimary", "['Gmagick','x'=>'float','y'=>'float']");
f("Gmagick::setimageindex", "['Gmagick','index'=>'int']");
f("Gmagick::setimageinterlacescheme", "['Gmagick','interlace'=>'int']");
f("Gmagick::setimageiterations", "['Gmagick','iterations'=>'int']");
f("Gmagick::setimageprofile", "['Gmagick','name'=>'string','profile'=>'string']");
f("Gmagick::setimageredprimary", "['Gmagick','x'=>'float','y'=>'float']");
f("Gmagick::setimagerenderingintent", "['Gmagick','rendering_intent'=>'int']");
f("Gmagick::setimageresolution", "['Gmagick','xresolution'=>'float','yresolution'=>'float']");
f("Gmagick::setimagescene", "['Gmagick','scene'=>'int']");
f("Gmagick::setimagetype", "['Gmagick','imgtype'=>'int']");
f("Gmagick::setimageunits", "['Gmagick','resolution'=>'int']");
f("Gmagick::setimagewhitepoint", "['Gmagick','x'=>'float','y'=>'float']");
f("Gmagick::setsamplingfactors", "['Gmagick','factors'=>'array']");
f("Gmagick::setsize", "['Gmagick','columns'=>'int','rows'=>'int']");
f("Gmagick::shearimage", "['Gmagick','color'=>'','xshear'=>'float','yshear'=>'float']");
f("Gmagick::solarizeimage", "['Gmagick','threshold'=>'int']");
f("Gmagick::spreadimage", "['Gmagick','radius'=>'float']");
f("Gmagick::stripimage", "['Gmagick']");
f("Gmagick::swirlimage", "['Gmagick','degrees'=>'float']");
f("Gmagick::thumbnailimage", "['Gmagick','width'=>'int','height'=>'int','fit='=>'bool']");
f("Gmagick::trimimage", "['Gmagick','fuzz'=>'float']");
f("Gmagick::write", "['','filename'=>'string']");
f("Gmagick::writeimage", "['Gmagick','filename'=>'string','all_frames='=>'bool']");
f("gmdate", "['string','format'=>'string','timestamp='=>'int']");
f("gmmktime", "['int','hour='=>'int','min='=>'int','sec='=>'int','mon='=>'int','day='=>'int','year='=>'int']");
f("gmp_abs", "['GMP','a'=>'']");
f("gmp_add", "['GMP','a'=>'','b'=>'']");
f("gmp_and", "['GMP','a'=>'','b'=>'']");
f("gmp_clrbit", "['','a'=>'gmp','index'=>'int']");
f("gmp_cmp", "['int','a'=>'','b'=>'']");
f("gmp_com", "['GMP','a'=>'']");
f("gmp_divexact", "['GMP','a'=>'','b'=>'']");
f("gmp_div_q", "['GMP','a'=>'','b'=>'','round='=>'int']");
f("gmp_div_qr", "['array','a'=>'','b'=>'','round='=>'int']");
f("gmp_div_r", "['GMP','a'=>'','b'=>'','round='=>'int']");
f("gmp_export", "['string','gmpnumber'=>'gmp','word_size'=>'int','options'=>'int']");
f("gmp_fact", "['GMP','a'=>'int']");
f("gmp_gcdext", "['array','a'=>'','b'=>'']");
f("gmp_gcd", "['GMP','a'=>'','b'=>'']");
f("gmp_hamdist", "['int','a'=>'','b'=>'']");
f("gmp_import", "['GMP','data'=>'string','word_size'=>'int','options'=>'int']");
f("gmp_init", "['GMP','number'=>'','base='=>'int']");
f("gmp_intval", "['int','gmpnumber'=>'']");
f("gmp_invert", "['GMP','a'=>'','b'=>'']");
f("gmp_jacobi", "['int','a'=>'','b'=>'']");
f("gmp_legendre", "['int','a'=>'','b'=>'']");
f("gmp_mod", "['GMP','a'=>'','b'=>'']");
f("gmp_mul", "['GMP','a'=>'','b'=>'']");
f("gmp_neg", "['GMP','a'=>'']");
f("gmp_nextprime", "['GMP','a'=>'']");
f("gmp_or", "['GMP','a'=>'','b'=>'']");
f("gmp_perfect_square", "['bool','a'=>'']");
f("gmp_popcount", "['int','a'=>'']");
f("gmp_pow", "['GMP','base'=>'','exp'=>'int']");
f("gmp_powm", "['GMP','base'=>'','exp'=>'','mod'=>'']");
f("gmp_prob_prime", "['int','a'=>'','reps='=>'int']");
f("gmp_random_bits", "['GMP','bits'=>'int']");
f("gmp_random", "['GMP','limiter='=>'int']");
f("gmp_random_range", "['GMP','min'=>'','max'=>'']");
f("gmp_random_seed", "['GMP','seed'=>'']");
f("gmp_root", "['GMP','a'=>'','nth'=>'int']");
f("gmp_rootrem", "['GMP[]','a'=>'','nth'=>'int']");
f("gmp_scan0", "['int','a'=>'','start'=>'int']");
f("gmp_scan1", "['int','a'=>'','start'=>'int']");
f("gmp_setbit", "['','a'=>'gmp','index'=>'int','set_clear='=>'bool']");
f("gmp_sign", "['int','a'=>'']");
f("gmp_sqrt", "['GMP','a'=>'']");
f("gmp_sqrtrem", "['array','a'=>'']");
f("gmp_strval", "['string','gmpnumber'=>'','base='=>'int']");
f("gmp_sub", "['GMP','a'=>'','b'=>'']");
f("gmp_testbit", "['bool','a'=>'','index'=>'int']");
f("gmp_xor", "['GMP','a'=>'','b'=>'']");
f("gmstrftime", "['string','format'=>'string','timestamp='=>'int']");
f("gnupg_adddecryptkey", "['bool','identifier'=>'','fingerprint'=>'string','passphrase'=>'string']");
f("gnupg_addencryptkey", "['bool','identifier'=>'','fingerprint'=>'string']");
f("gnupg_addsignkey", "['bool','identifier'=>'','fingerprint'=>'string','passphrase='=>'string']");
f("gnupg_cleardecryptkeys", "['bool','identifier'=>'']");
f("gnupg_clearencryptkeys", "['bool','identifier'=>'']");
f("gnupg_clearsignkeys", "['bool','identifier'=>'']");
f("gnupg_decrypt", "['string','identifier'=>'','text'=>'string']");
f("gnupg_decryptverify", "['array','identifier'=>'','text'=>'string','plaintext'=>'string']");
f("gnupg_encryptsign", "['string','identifier'=>'','plaintext'=>'string']");
f("gnupg_encrypt", "['string','identifier'=>'','plaintext'=>'string']");
f("gnupg_export", "['string','identifier'=>'','fingerprint'=>'string']");
f("gnupg_geterror", "['string','identifier'=>'']");
f("gnupg_getprotocol", "['int','identifier'=>'']");
f("gnupg_import", "['array','identifier'=>'','keydata'=>'string']");
f("gnupg_init", "['resource']");
f("gnupg_keyinfo", "['array','identifier'=>'','pattern'=>'string']");
f("gnupg_setarmor", "['bool','identifier'=>'','armor'=>'int']");
f("gnupg_seterrormode", "['','identifier'=>'','errormode'=>'int']");
f("gnupg_setsignmode", "['bool','identifier'=>'','signmode'=>'int']");
f("gnupg_sign", "['string','identifier'=>'','plaintext'=>'string']");
f("gnupg_verify", "['array','identifier'=>'','signed_text'=>'string','signature'=>'string','plaintext='=>'string']");
f("gopher_parsedir", "['array','dirent'=>'string']");
f("grapheme_extract", "['string|bool','str'=>'string','size'=>'int','extract_type='=>'int','start='=>'int','next='=>'int']");
f("grapheme_stripos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("grapheme_stristr", "['string|false','haystack'=>'string','needle'=>'string','part='=>'bool']");
f("grapheme_strlen", "['int|bool','str'=>'string']");
f("grapheme_strpos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("grapheme_strripos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("grapheme_strrpos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("grapheme_strstr", "['string|false','haystack'=>'string','needle'=>'string','part='=>'bool']");
f("grapheme_substr", "['string|bool','str'=>'string','start'=>'int','length='=>'int']");
f("gregoriantojd", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("GregorianToJD", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("gupnp_context_get_host_ip", "['string','context'=>'']");
f("gupnp_context_get_port", "['int','context'=>'']");
f("gupnp_context_get_subscription_timeout", "['int','context'=>'']");
f("gupnp_context_host_path", "['bool','context'=>'','local_path'=>'string','server_path'=>'string']");
f("gupnp_context_new", "['resource','host_ip='=>'string','port='=>'int']");
f("gupnp_context_set_subscription_timeout", "['','context'=>'','timeout'=>'int']");
f("gupnp_context_timeout_add", "['bool','context'=>'','timeout'=>'int','callback'=>'','arg='=>'']");
f("gupnp_context_unhost_path", "['bool','context'=>'','server_path'=>'string']");
f("gupnp_control_point_browse_start", "['bool','cpoint'=>'']");
f("gupnp_control_point_browse_stop", "['bool','cpoint'=>'']");
f("gupnp_control_point_callback_set", "['bool','cpoint'=>'','signal'=>'int','callback'=>'','arg='=>'']");
f("gupnp_control_point_new", "['resource','context'=>'','target'=>'string']");
f("gupnp_device_action_callback_set", "['bool','root_device'=>'','signal'=>'int','action_name'=>'string','callback'=>'','arg='=>'']");
f("gupnp_device_info_get", "['array','root_device'=>'']");
f("gupnp_device_info_get_service", "['resource','root_device'=>'','type'=>'string']");
f("gupnp_root_device_get_available", "['bool','root_device'=>'']");
f("gupnp_root_device_get_relative_location", "['string','root_device'=>'']");
f("gupnp_root_device_new", "['resource','context'=>'','location'=>'string','description_dir'=>'string']");
f("gupnp_root_device_set_available", "['bool','root_device'=>'','available'=>'bool']");
f("gupnp_root_device_start", "['bool','root_device'=>'']");
f("gupnp_root_device_stop", "['bool','root_device'=>'']");
f("gupnp_service_action_get", "['','action'=>'','name'=>'string','type'=>'int']");
f("gupnp_service_action_return", "['bool','action'=>'']");
f("gupnp_service_action_return_error", "['bool','action'=>'','error_code'=>'int','error_description='=>'string']");
f("gupnp_service_action_set", "['bool','action'=>'','name'=>'string','type'=>'int','value'=>'']");
f("gupnp_service_freeze_notify", "['bool','service'=>'']");
f("gupnp_service_info_get", "['array','proxy'=>'']");
f("gupnp_service_info_get_introspection", "['','proxy'=>'','callback='=>'','arg='=>'']");
f("gupnp_service_introspection_get_state_variable", "['array','introspection'=>'','variable_name'=>'string']");
f("gupnp_service_notify", "['bool','service'=>'','name'=>'string','type'=>'int','value'=>'']");
f("gupnp_service_proxy_action_get", "['','proxy'=>'','action'=>'string','name'=>'string','type'=>'int']");
f("gupnp_service_proxy_action_set", "['bool','proxy'=>'','action'=>'string','name'=>'string','value'=>'','type'=>'int']");
f("gupnp_service_proxy_add_notify", "['bool','proxy'=>'','value'=>'string','type'=>'int','callback'=>'','arg='=>'']");
f("gupnp_service_proxy_callback_set", "['bool','proxy'=>'','signal'=>'int','callback'=>'','arg='=>'']");
f("gupnp_service_proxy_get_subscribed", "['bool','proxy'=>'']");
f("gupnp_service_proxy_remove_notify", "['bool','proxy'=>'','value'=>'string']");
f("gupnp_service_proxy_send_action", "['array','proxy'=>'','action'=>'string','in_params'=>'array','out_params'=>'array']");
f("gupnp_service_proxy_set_subscribed", "['bool','proxy'=>'','subscribed'=>'bool']");
f("gupnp_service_thaw_notify", "['bool','service'=>'']");
f("gzclose", "['bool','zp'=>'']");
f("gzcompress", "['string','data'=>'string','level='=>'int','encoding='=>'int']");
f("gzdecode", "['string','data'=>'string','max_decoded_len='=>'int']");
f("gzdeflate", "['string','data'=>'string','level='=>'int','encoding='=>'int']");
f("gzencode", "['string','data'=>'string','level='=>'int','encoding='=>'int']");
f("gzeof", "['int','zp'=>'']");
f("gzfile", "['array','filename'=>'string','use_include_path='=>'int']");
f("gzgetc", "['string','zp'=>'']");
f("gzgetss", "['string','zp'=>'','length'=>'int','allowable_tags='=>'string']");
f("gzgets", "['string','zp'=>'','length='=>'int']");
f("gzinflate", "['string','data'=>'string','max_decoded_len='=>'int']");
f("gzopen", "['resource','filename'=>'string','mode'=>'string','use_include_path='=>'int']");
f("gzpassthru", "['int','zp'=>'']");
f("gzread", "['string','zp'=>'','length'=>'int']");
f("gzrewind", "['bool','zp'=>'']");
f("gzseek", "['int','zp'=>'','offset'=>'int','whence='=>'int']");
f("gztell", "['int','zp'=>'']");
f("gzuncompress", "['string','data'=>'string','max_decoded_len='=>'int']");
f("gzwrite", "['int','zp'=>'','string'=>'string','length='=>'int']");
f("__halt_compiler", "['']");
f("HaruAnnotation::setBorderStyle", "['bool','width'=>'float','dash_on'=>'int','dash_off'=>'int']");
f("HaruAnnotation::setHighlightMode", "['bool','mode'=>'int']");
f("HaruAnnotation::setIcon", "['bool','icon'=>'int']");
f("HaruAnnotation::setOpened", "['bool','opened'=>'bool']");
f("HaruDestination::setFitB", "['bool']");
f("HaruDestination::setFitBH", "['bool','top'=>'float']");
f("HaruDestination::setFit", "['bool']");
f("HaruDestination::setFitBV", "['bool','left'=>'float']");
f("HaruDestination::setFitH", "['bool','top'=>'float']");
f("HaruDestination::setFitR", "['bool','left'=>'float','bottom'=>'float','right'=>'float','top'=>'float']");
f("HaruDestination::setFitV", "['bool','left'=>'float']");
f("HaruDestination::setXYZ", "['bool','left'=>'float','top'=>'float','zoom'=>'float']");
f("HaruDoc::addPageLabel", "['bool','first_page'=>'int','style'=>'int','first_num'=>'int','prefix='=>'string']");
f("HaruDoc::addPage", "['any']");
f("HaruDoc::__construct", "['HaruDoc']");
f("HaruDoc::createOutline", "['any','title'=>'string','parent_outline='=>'any','encoder='=>'any']");
f("HaruDoc::getCurrentEncoder", "['any']");
f("HaruDoc::getCurrentPage", "['any']");
f("HaruDoc::getEncoder", "['any','encoding'=>'string']");
f("HaruDoc::getFont", "['any','fontname'=>'string','encoding='=>'string']");
f("HaruDoc::getInfoAttr", "['string','type'=>'int']");
f("HaruDoc::getPageLayout", "['int']");
f("HaruDoc::getPageMode", "['int']");
f("HaruDoc::getStreamSize", "['int']");
f("HaruDoc::insertPage", "['any','page'=>'any']");
f("HaruDoc::loadJPEG", "['any','filename'=>'string']");
f("HaruDoc::loadPNG", "['any','filename'=>'string','deferred='=>'bool']");
f("HaruDoc::loadRaw", "['any','filename'=>'string','width'=>'int','height'=>'int','color_space'=>'int']");
f("HaruDoc::loadTTC", "['string','fontfile'=>'string','index'=>'int','embed='=>'bool']");
f("HaruDoc::loadTTF", "['string','fontfile'=>'string','embed='=>'bool']");
f("HaruDoc::loadType1", "['string','afmfile'=>'string','pfmfile='=>'string']");
f("HaruDoc::output", "['bool']");
f("HaruDoc::readFromStream", "['string','bytes'=>'int']");
f("HaruDoc::resetError", "['bool']");
f("HaruDoc::resetStream", "['bool']");
f("HaruDoc::save", "['bool','file'=>'string']");
f("HaruDoc::saveToStream", "['bool']");
f("HaruDoc::setCompressionMode", "['bool','mode'=>'int']");
f("HaruDoc::setCurrentEncoder", "['bool','encoding'=>'string']");
f("HaruDoc::setEncryptionMode", "['bool','mode'=>'int','key_len='=>'int']");
f("HaruDoc::setInfoAttr", "['bool','type'=>'int','info'=>'string']");
f("HaruDoc::setInfoDateAttr", "['bool','type'=>'int','year'=>'int','month'=>'int','day'=>'int','hour'=>'int','min'=>'int','sec'=>'int','ind'=>'string','off_hour'=>'int','off_min'=>'int']");
f("HaruDoc::setOpenAction", "['bool','destination'=>'any']");
f("HaruDoc::setPageLayout", "['bool','layout'=>'int']");
f("HaruDoc::setPageMode", "['bool','mode'=>'int']");
f("HaruDoc::setPagesConfiguration", "['bool','page_per_pages'=>'int']");
f("HaruDoc::setPassword", "['bool','owner_password'=>'string','user_password'=>'string']");
f("HaruDoc::setPermission", "['bool','permission'=>'int']");
f("HaruDoc::useCNSEncodings", "['bool']");
f("HaruDoc::useCNSFonts", "['bool']");
f("HaruDoc::useCNTEncodings", "['bool']");
f("HaruDoc::useCNTFonts", "['bool']");
f("HaruDoc::useJPEncodings", "['bool']");
f("HaruDoc::useJPFonts", "['bool']");
f("HaruDoc::useKREncodings", "['bool']");
f("HaruDoc::useKRFonts", "['bool']");
f("HaruEncoder::getByteType", "['int','text'=>'string','index'=>'int']");
f("HaruEncoder::getType", "['int']");
f("HaruEncoder::getUnicode", "['int','character'=>'int']");
f("HaruEncoder::getWritingMode", "['int']");
f("HaruFont::getAscent", "['int']");
f("HaruFont::getCapHeight", "['int']");
f("HaruFont::getDescent", "['int']");
f("HaruFont::getEncodingName", "['string']");
f("HaruFont::getFontName", "['string']");
f("HaruFont::getTextWidth", "['array','text'=>'string']");
f("HaruFont::getUnicodeWidth", "['int','character'=>'int']");
f("HaruFont::getXHeight", "['int']");
f("HaruFont::measureText", "['int','text'=>'string','width'=>'float','font_size'=>'float','char_space'=>'float','word_space'=>'float','word_wrap='=>'bool']");
f("HaruImage::getBitsPerComponent", "['int']");
f("HaruImage::getColorSpace", "['string']");
f("HaruImage::getHeight", "['int']");
f("HaruImage::getSize", "['array']");
f("HaruImage::getWidth", "['int']");
f("HaruImage::setColorMask", "['bool','rmin'=>'int','rmax'=>'int','gmin'=>'int','gmax'=>'int','bmin'=>'int','bmax'=>'int']");
f("HaruImage::setMaskImage", "['bool','mask_image'=>'any']");
f("HaruOutline::setDestination", "['bool','destination'=>'any']");
f("HaruOutline::setOpened", "['bool','opened'=>'bool']");
f("HaruPage::arc", "['bool','x'=>'float','y'=>'float','ray'=>'float','ang1'=>'float','ang2'=>'float']");
f("HaruPage::beginText", "['bool']");
f("HaruPage::circle", "['bool','x'=>'float','y'=>'float','ray'=>'float']");
f("HaruPage::closePath", "['bool']");
f("HaruPage::concat", "['bool','a'=>'float','b'=>'float','c'=>'float','d'=>'float','x'=>'float','y'=>'float']");
f("HaruPage::createDestination", "['any']");
f("HaruPage::createLinkAnnotation", "['any','rectangle'=>'array','destination'=>'any']");
f("HaruPage::createTextAnnotation", "['any','rectangle'=>'array','text'=>'string','encoder='=>'any']");
f("HaruPage::createURLAnnotation", "['any','rectangle'=>'array','url'=>'string']");
f("HaruPage::curveTo2", "['bool','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float']");
f("HaruPage::curveTo3", "['bool','x1'=>'float','y1'=>'float','x3'=>'float','y3'=>'float']");
f("HaruPage::curveTo", "['bool','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float']");
f("HaruPage::drawImage", "['bool','image'=>'any','x'=>'float','y'=>'float','width'=>'float','height'=>'float']");
f("HaruPage::ellipse", "['bool','x'=>'float','y'=>'float','xray'=>'float','yray'=>'float']");
f("HaruPage::endPath", "['bool']");
f("HaruPage::endText", "['bool']");
f("HaruPage::eofill", "['bool']");
f("HaruPage::eoFillStroke", "['bool','close_path='=>'bool']");
f("HaruPage::fill", "['bool']");
f("HaruPage::fillStroke", "['bool','close_path='=>'bool']");
f("HaruPage::getCharSpace", "['float']");
f("HaruPage::getCMYKFill", "['array']");
f("HaruPage::getCMYKStroke", "['array']");
f("HaruPage::getCurrentFont", "['any']");
f("HaruPage::getCurrentFontSize", "['float']");
f("HaruPage::getCurrentPos", "['array']");
f("HaruPage::getCurrentTextPos", "['array']");
f("HaruPage::getDash", "['array']");
f("HaruPage::getFillingColorSpace", "['int']");
f("HaruPage::getFlatness", "['float']");
f("HaruPage::getGMode", "['int']");
f("HaruPage::getGrayFill", "['float']");
f("HaruPage::getGrayStroke", "['float']");
f("HaruPage::getHeight", "['float']");
f("HaruPage::getHorizontalScaling", "['float']");
f("HaruPage::getLineCap", "['int']");
f("HaruPage::getLineJoin", "['int']");
f("HaruPage::getLineWidth", "['float']");
f("HaruPage::getMiterLimit", "['float']");
f("HaruPage::getRGBFill", "['array']");
f("HaruPage::getRGBStroke", "['array']");
f("HaruPage::getStrokingColorSpace", "['int']");
f("HaruPage::getTextLeading", "['float']");
f("HaruPage::getTextMatrix", "['array']");
f("HaruPage::getTextRenderingMode", "['int']");
f("HaruPage::getTextRise", "['float']");
f("HaruPage::getTextWidth", "['float','text'=>'string']");
f("HaruPage::getTransMatrix", "['array']");
f("HaruPage::getWidth", "['float']");
f("HaruPage::getWordSpace", "['float']");
f("HaruPage::lineTo", "['bool','x'=>'float','y'=>'float']");
f("HaruPage::measureText", "['int','text'=>'string','width'=>'float','wordwrap='=>'bool']");
f("HaruPage::moveTextPos", "['bool','x'=>'float','y'=>'float','set_leading='=>'bool']");
f("HaruPage::moveTo", "['bool','x'=>'float','y'=>'float']");
f("HaruPage::moveToNextLine", "['bool']");
f("HaruPage::rectangle", "['bool','x'=>'float','y'=>'float','width'=>'float','height'=>'float']");
f("HaruPage::setCharSpace", "['bool','char_space'=>'float']");
f("HaruPage::setCMYKFill", "['bool','c'=>'float','m'=>'float','y'=>'float','k'=>'float']");
f("HaruPage::setCMYKStroke", "['bool','c'=>'float','m'=>'float','y'=>'float','k'=>'float']");
f("HaruPage::setDash", "['bool','pattern'=>'array','phase'=>'int']");
f("HaruPage::setFlatness", "['bool','flatness'=>'float']");
f("HaruPage::setFontAndSize", "['bool','font'=>'any','size'=>'float']");
f("HaruPage::setGrayFill", "['bool','value'=>'float']");
f("HaruPage::setGrayStroke", "['bool','value'=>'float']");
f("HaruPage::setHeight", "['bool','height'=>'float']");
f("HaruPage::setHorizontalScaling", "['bool','scaling'=>'float']");
f("HaruPage::setLineCap", "['bool','cap'=>'int']");
f("HaruPage::setLineJoin", "['bool','join'=>'int']");
f("HaruPage::setLineWidth", "['bool','width'=>'float']");
f("HaruPage::setMiterLimit", "['bool','limit'=>'float']");
f("HaruPage::setRGBFill", "['bool','r'=>'float','g'=>'float','b'=>'float']");
f("HaruPage::setRGBStroke", "['bool','r'=>'float','g'=>'float','b'=>'float']");
f("HaruPage::setRotate", "['bool','angle'=>'int']");
f("HaruPage::setSize", "['bool','size'=>'int','direction'=>'int']");
f("HaruPage::setSlideShow", "['bool','type'=>'int','disp_time'=>'float','trans_time'=>'float']");
f("HaruPage::setTextLeading", "['bool','text_leading'=>'float']");
f("HaruPage::setTextMatrix", "['bool','a'=>'float','b'=>'float','c'=>'float','d'=>'float','x'=>'float','y'=>'float']");
f("HaruPage::setTextRenderingMode", "['bool','mode'=>'int']");
f("HaruPage::setTextRise", "['bool','rise'=>'float']");
f("HaruPage::setWidth", "['bool','width'=>'float']");
f("HaruPage::setWordSpace", "['bool','word_space'=>'float']");
f("HaruPage::showText", "['bool','text'=>'string']");
f("HaruPage::showTextNextLine", "['bool','text'=>'string','word_space='=>'float','char_space='=>'float']");
f("HaruPage::stroke", "['bool','close_path='=>'bool']");
f("HaruPage::textOut", "['bool','x'=>'float','y'=>'float','text'=>'string']");
f("HaruPage::textRect", "['bool','left'=>'float','top'=>'float','right'=>'float','bottom'=>'float','text'=>'string','align='=>'int']");
f("hash_algos", "['array']");
f("hash_copy", "['resource','context'=>'resource']");
f("hash_equals", "['bool','known_string'=>'string','user_string'=>'string']");
f("hash_file", "['string','algo'=>'string','filename'=>'string','raw_output='=>'bool']");
f("hash_final", "['string','context'=>'resource','raw_output='=>'bool']");
f("hash_hmac_file", "['string','algo'=>'string','filename'=>'string','key'=>'string','raw_output='=>'bool']");
f("hash_hmac", "['string','algo'=>'string','data'=>'string','key'=>'string','raw_output='=>'bool']");
f("hash_init", "['resource','algo'=>'string','options='=>'int','key='=>'string']");
f("hash", "['string','algo'=>'string','data'=>'string','raw_output='=>'bool']");
f("hash_update", "['bool','context'=>'resource','data'=>'string']");
f("hash_update_file", "['bool','context='=>'resource','filename='=>'string']");
f("hash_update_stream", "['int','context'=>'resource','handle'=>'','length='=>'int']");
f("header", "['','header'=>'string','replace='=>'bool','http_response_code='=>'int']");
f("header_register_callback", "['bool','callback'=>'callable']");
f("header_remove", "['','name='=>'string']");
f("headers_list", "['array']");
f("headers_sent", "['bool','&file='=>'string','&line='=>'int']");
f("hebrevc", "['string','str'=>'string','max_chars_per_line='=>'int']");
f("hebrev", "['string','str'=>'string','max_chars_per_line='=>'int']");
f("hex2bin", "['string','data'=>'string']");
f("hexdec", "['int','hexadecimal_number'=>'string']");
f("highlight_file", "['bool','file_name'=>'string','return='=>'bool']");
f("highlight_string", "['string|bool','string'=>'string','return='=>'bool']");
f("HRTime\\PerformanceCounter::getElapsedTicks", "['int']");
f("HRTime\\PerformanceCounter::getFrequency", "['int']");
f("HRTime\\PerformanceCounter::getLastElapsedTicks", "['int']");
f("HRTime\\PerformanceCounter::isRunning", "['bool']");
f("HRTime\\PerformanceCounter::start", "['void']");
f("HRTime\\PerformanceCounter::stop", "['void']");
f("HRTime\\StopWatch::getElapsedTime", "['float','unit='=>'int']");
f("HRTime\\StopWatch::getLastElapsedTime", "['float','unit='=>'int']");
f("htmlentities", "['string','string'=>'string','quote_style='=>'int','encoding='=>'string','double_encode='=>'bool']");
f("html_entity_decode", "['string','string'=>'string','quote_style='=>'int','encoding='=>'string']");
f("htmlspecialchars_decode", "['string','string'=>'string','quote_style='=>'int']");
f("htmlspecialchars", "['string','string'=>'string','quote_style='=>'int','encoding='=>'string','double_encode='=>'bool']");
f("http_build_cookie", "['string','cookie'=>'array']");
f("http_build_query", "['string','querydata'=>'array|object','prefix='=>'string','arg_separator='=>'string','enc_type='=>'int']");
f("http_build_str", "['string','query'=>'array','prefix='=>'string','arg_separator='=>'string']");
f("http_build_url", "['string','url='=>'string|array','parts='=>'string|array','flags='=>'int','new_url='=>'array']");
f("http_cache_etag", "['bool','etag='=>'string']");
f("http_cache_last_modified", "['bool','timestamp_or_expires='=>'int']");
f("http_chunked_decode", "['string','encoded'=>'string']");
f("http_date", "['string','timestamp='=>'int']");
f("HttpDeflateStream::__construct", "['HttpDeflateStream','flags='=>'int']");
f("HttpDeflateStream::factory", "['HttpDeflateStream','flags='=>'int','class_name='=>'string']");
f("HttpDeflateStream::finish", "['string','data='=>'string']");
f("HttpDeflateStream::flush", "['string','data='=>'string']");
f("HttpDeflateStream::update", "['string','data'=>'string']");
f("http_deflate", "['string','data'=>'string','flags='=>'int']");
f("http_get_request_body_stream", "['resource']");
f("http_get_request_body", "['string']");
f("http_get_request_headers", "['array']");
f("http_get", "['string','url'=>'string','options='=>'array','info='=>'array']");
f("http_head", "['string','url'=>'string','options='=>'array','info='=>'array']");
f("HttpInflateStream::__construct", "['HttpInflateStream','flags='=>'int']");
f("HttpInflateStream::factory", "['HttpInflateStream','flags='=>'int','class_name='=>'string']");
f("HttpInflateStream::finish", "['string','data='=>'string']");
f("HttpInflateStream::flush", "['string','data='=>'string']");
f("HttpInflateStream::update", "['string','data'=>'string']");
f("http_inflate", "['string','data'=>'string']");
f("http_match_etag", "['bool','etag'=>'string','for_range='=>'bool']");
f("http_match_modified", "['bool','timestamp='=>'int','for_range='=>'bool']");
f("http_match_request_header", "['bool','header'=>'string','value'=>'string','match_case='=>'bool']");
f("HttpMessage::addHeaders", "['','headers'=>'array','append='=>'bool']");
f("HttpMessage::__construct", "['HttpMessage','message='=>'string']");
f("HttpMessage::detach", "['HttpMessage']");
f("HttpMessage::factory", "['HttpMessage','raw_message='=>'string','class_name='=>'string']");
f("HttpMessage::fromEnv", "['HttpMessage','message_type'=>'int','class_name='=>'string']");
f("HttpMessage::fromString", "['HttpMessage','raw_message='=>'string','class_name='=>'string']");
f("HttpMessage::getBody", "['string']");
f("HttpMessage::getHeaders", "['array']");
f("HttpMessage::getHeader", "['string','header'=>'string']");
f("HttpMessage::getHttpVersion", "['string']");
f("HttpMessage::getParentMessage", "['HttpMessage']");
f("HttpMessage::getRequestMethod", "['string']");
f("HttpMessage::getRequestUrl", "['string']");
f("HttpMessage::getResponseCode", "['int']");
f("HttpMessage::getResponseStatus", "['string']");
f("HttpMessage::getType", "['int']");
f("HttpMessage::guessContentType", "['string','magic_file'=>'string','magic_mode='=>'int']");
f("HttpMessage::prepend", "['','message'=>'httpmessage','top='=>'bool']");
f("HttpMessage::reverse", "['HttpMessage']");
f("HttpMessage::send", "['bool']");
f("HttpMessage::setBody", "['','body'=>'string']");
f("HttpMessage::setHeaders", "['','headers'=>'array']");
f("HttpMessage::setHttpVersion", "['bool','version'=>'string']");
f("HttpMessage::setRequestMethod", "['bool','method'=>'string']");
f("HttpMessage::setRequestUrl", "['bool','url'=>'string']");
f("HttpMessage::setResponseCode", "['bool','code'=>'int']");
f("HttpMessage::setResponseStatus", "['bool','status'=>'string']");
f("HttpMessage::setType", "['','type'=>'int']");
f("HttpMessage::toMessageTypeObject", "['HttpRequest|HttpResponse']");
f("HttpMessage::toString", "['string','include_parent='=>'bool']");
f("http_negotiate_charset", "['string','supported'=>'array','result='=>'array']");
f("http_negotiate_content_type", "['string','supported'=>'array','result='=>'array']");
f("http_negotiate_language", "['string','supported'=>'array','result='=>'array']");
f("http_parse_cookie", "['any','cookie'=>'string','flags='=>'int','allowed_extras='=>'array']");
f("http_parse_headers", "['array','header'=>'string']");
f("http_parse_message", "['any','message'=>'string']");
f("http_parse_params", "['any','param'=>'string','flags='=>'int']");
f("http_persistent_handles_clean", "['string','ident='=>'string']");
f("http_persistent_handles_count", "['any']");
f("http_persistent_handles_ident", "['string','ident='=>'string']");
f("http_post_data", "['string','url'=>'string','data'=>'string','options='=>'array','info='=>'array']");
f("http_post_fields", "['string','url'=>'string','data'=>'array','files='=>'array','options='=>'array','info='=>'array']");
f("http_put_data", "['string','url'=>'string','data'=>'string','options='=>'array','info='=>'array']");
f("http_put_file", "['string','url'=>'string','file'=>'string','options='=>'array','info='=>'array']");
f("http_put_stream", "['string','url'=>'string','stream'=>'','options='=>'array','info='=>'array']");
f("HttpQueryString::__construct", "['HttpQueryString','global='=>'bool','add='=>'']");
f("HttpQueryString::get", "['','key='=>'string','type='=>'','defval='=>'','delete='=>'bool']");
f("HttpQueryString::mod", "['HttpQueryString','params'=>'']");
f("HttpQueryString::set", "['string','params'=>'']");
f("HttpQueryString::singleton", "['HttpQueryString','global='=>'bool']");
f("HttpQueryString::toArray", "['array']");
f("HttpQueryString::toString", "['string']");
f("HttpQueryString::xlate", "['bool','ie'=>'string','oe'=>'string']");
f("http_redirect", "['bool','url='=>'string','params='=>'array','session='=>'bool','status='=>'int']");
f("HttpRequest::addCookies", "['bool','cookies'=>'array']");
f("HttpRequest::addHeaders", "['bool','headers'=>'array']");
f("HttpRequest::addPostFields", "['bool','post_data'=>'array']");
f("HttpRequest::addPostFile", "['bool','name'=>'string','file'=>'string','content_type='=>'string']");
f("HttpRequest::addPutData", "['bool','put_data'=>'string']");
f("HttpRequest::addQueryData", "['bool','query_params'=>'array']");
f("HttpRequest::addRawPostData", "['bool','raw_post_data'=>'string']");
f("HttpRequest::addSslOptions", "['bool','options'=>'array']");
f("http_request_body_encode", "['string','fields'=>'array','files'=>'array']");
f("HttpRequest::clearHistory", "['']");
f("HttpRequest::__construct", "['HttpRequest','url='=>'string','request_method='=>'int','options='=>'array']");
f("HttpRequest::enableCookies", "['bool']");
f("HttpRequest::getContentType", "['string']");
f("HttpRequest::getCookies", "['array']");
f("HttpRequest::getHeaders", "['array']");
f("HttpRequest::getHistory", "['HttpMessage']");
f("HttpRequest::getMethod", "['int']");
f("HttpRequest::getOptions", "['array']");
f("HttpRequest::getPostFields", "['array']");
f("HttpRequest::getPostFiles", "['array']");
f("HttpRequest::getPutData", "['string']");
f("HttpRequest::getPutFile", "['string']");
f("HttpRequest::getQueryData", "['string']");
f("HttpRequest::getRawPostData", "['string']");
f("HttpRequest::getRawRequestMessage", "['string']");
f("HttpRequest::getRawResponseMessage", "['string']");
f("HttpRequest::getRequestMessage", "['HttpMessage']");
f("HttpRequest::getResponseBody", "['string']");
f("HttpRequest::getResponseCode", "['int']");
f("HttpRequest::getResponseCookies", "['array','flags='=>'int','allowed_extras='=>'array']");
f("HttpRequest::getResponseData", "['array']");
f("HttpRequest::getResponseHeader", "['','name='=>'string']");
f("HttpRequest::getResponseInfo", "['','name='=>'string']");
f("HttpRequest::getResponseMessage", "['HttpMessage']");
f("HttpRequest::getResponseStatus", "['string']");
f("HttpRequest::getSslOptions", "['array']");
f("HttpRequest::getUrl", "['string']");
f("http_request_method_exists", "['int','method'=>'']");
f("http_request_method_name", "['string','method'=>'int']");
f("http_request_method_register", "['int','method'=>'string']");
f("http_request_method_unregister", "['bool','method'=>'']");
f("HttpRequestPool::attach", "['bool','request'=>'httprequest']");
f("HttpRequestPool::__construct", "['HttpRequestPool','request='=>'httprequest']");
f("HttpRequestPool::__destruct", "['']");
f("HttpRequestPool::detach", "['bool','request'=>'httprequest']");
f("HttpRequestPool::getAttachedRequests", "['array']");
f("HttpRequestPool::getFinishedRequests", "['array']");
f("HttpRequestPool::reset", "['']");
f("HttpRequestPool::send", "['bool']");
f("HttpRequestPool::socketPerform", "['bool']");
f("HttpRequestPool::socketSelect", "['bool','timeout='=>'float']");
f("HttpRequest::resetCookies", "['bool','session_only='=>'bool']");
f("HttpRequest::send", "['HttpMessage']");
f("HttpRequest::setBody", "['bool','request_body_data='=>'string']");
f("HttpRequest::setContentType", "['bool','content_type'=>'string']");
f("HttpRequest::setCookies", "['bool','cookies='=>'array']");
f("HttpRequest::setHeaders", "['bool','headers='=>'array']");
f("HttpRequest::setMethod", "['bool','request_method'=>'int']");
f("HttpRequest::setOptions", "['bool','options='=>'array']");
f("HttpRequest::setPostFields", "['bool','post_data'=>'array']");
f("HttpRequest::setPostFiles", "['bool','post_files'=>'array']");
f("HttpRequest::setPutData", "['bool','put_data='=>'string']");
f("HttpRequest::setPutFile", "['bool','file='=>'string']");
f("HttpRequest::setQueryData", "['bool','query_data'=>'']");
f("HttpRequest::setRawPostData", "['bool','raw_post_data='=>'string']");
f("HttpRequest::setSslOptions", "['bool','options='=>'array']");
f("HttpRequest::setUrl", "['bool','url'=>'string']");
f("http_request", "['string','method'=>'int','url'=>'string','body='=>'string','options='=>'array','info='=>'array']");
f("HttpResponse::capture", "['']");
f("http_response_code", "['int|bool','response_code='=>'int']");
f("HttpResponse::getBufferSize", "['int']");
f("HttpResponse::getCache", "['bool']");
f("HttpResponse::getCacheControl", "['string']");
f("HttpResponse::getContentDisposition", "['string']");
f("HttpResponse::getContentType", "['string']");
f("HttpResponse::getData", "['string']");
f("HttpResponse::getETag", "['string']");
f("HttpResponse::getFile", "['string']");
f("HttpResponse::getGzip", "['bool']");
f("HttpResponse::getHeader", "['','name='=>'string']");
f("HttpResponse::getLastModified", "['int']");
f("HttpResponse::getRequestBodyStream", "['resource']");
f("HttpResponse::getRequestBody", "['string']");
f("HttpResponse::getRequestHeaders", "['array']");
f("HttpResponse::getStream", "['resource']");
f("HttpResponse::getThrottleDelay", "['float']");
f("HttpResponse::guessContentType", "['string','magic_file'=>'string','magic_mode='=>'int']");
f("HttpResponse::redirect", "['','url='=>'string','params='=>'array','session='=>'bool','status='=>'int']");
f("HttpResponse::send", "['bool','clean_ob='=>'bool']");
f("HttpResponse::setBufferSize", "['bool','bytes'=>'int']");
f("HttpResponse::setCache", "['bool','cache'=>'bool']");
f("HttpResponse::setCacheControl", "['bool','control'=>'string','max_age='=>'int','must_revalidate='=>'bool']");
f("HttpResponse::setContentDisposition", "['bool','filename'=>'string','inline='=>'bool']");
f("HttpResponse::setContentType", "['bool','content_type'=>'string']");
f("HttpResponse::setData", "['bool','data'=>'']");
f("HttpResponse::setETag", "['bool','etag'=>'string']");
f("HttpResponse::setFile", "['bool','file'=>'string']");
f("HttpResponse::setGzip", "['bool','gzip'=>'bool']");
f("HttpResponse::setHeader", "['bool','name'=>'string','value='=>'','replace='=>'bool']");
f("HttpResponse::setLastModified", "['bool','timestamp'=>'int']");
f("HttpResponse::setStream", "['bool','stream'=>'']");
f("HttpResponse::setThrottleDelay", "['bool','seconds'=>'float']");
f("HttpResponse::status", "['bool','status'=>'int']");
f("http_send_content_disposition", "['bool','filename'=>'string','inline='=>'bool']");
f("http_send_content_type", "['bool','content_type='=>'string']");
f("http_send_data", "['bool','data'=>'string']");
f("http_send_file", "['bool','file'=>'string']");
f("http_send_last_modified", "['bool','timestamp='=>'int']");
f("http_send_status", "['bool','status'=>'int']");
f("http_send_stream", "['bool','stream'=>'']");
f("http_support", "['int','feature='=>'int']");
f("http_throttle", "['','sec'=>'float','bytes='=>'int']");
f("hw_api_attribute", "['HW_API_Attribute','name='=>'string','value='=>'string']");
f("hw_api_attribute::key", "['string']");
f("hw_api_attribute::langdepvalue", "['string','language'=>'string']");
f("hwapi_attribute_new", "['HW_API_Attribute','name='=>'string','value='=>'string']");
f("hw_api_attribute::values", "['array']");
f("hw_api_attribute::value", "['string']");
f("hw_api::checkin", "['bool','parameter'=>'array']");
f("hw_api::checkout", "['bool','parameter'=>'array']");
f("hw_api::children", "['array','parameter'=>'array']");
f("hw_api_content", "['HW_API_Content','content'=>'string','mimetype'=>'string']");
f("hw_api::content", "['HW_API_Content','parameter'=>'array']");
f("hw_api_content::mimetype", "['string']");
f("hwapi_content_new", "['HW_API_Content','content'=>'string','mimetype'=>'string']");
f("hw_api_content::read", "['string','buffer'=>'string','len'=>'int']");
f("hw_api::copy", "['hw_api_content','parameter'=>'array']");
f("hw_api::dbstat", "['hw_api_object','parameter'=>'array']");
f("hw_api::dcstat", "['hw_api_object','parameter'=>'array']");
f("hw_api::dstanchors", "['array','parameter'=>'array']");
f("hw_api::dstofsrcanchor", "['hw_api_object','parameter'=>'array']");
f("hw_api_error::count", "['int']");
f("hw_api_error::reason", "['HW_API_Reason']");
f("hw_api::find", "['array','parameter'=>'array']");
f("hw_api::ftstat", "['hw_api_object','parameter'=>'array']");
f("hwapi_hgcsp", "['HW_API','hostname'=>'string','port='=>'int']");
f("hw_api::hwstat", "['hw_api_object','parameter'=>'array']");
f("hw_api::identify", "['bool','parameter'=>'array']");
f("hw_api::info", "['array','parameter'=>'array']");
f("hw_api::insertanchor", "['hw_api_object','parameter'=>'array']");
f("hw_api::insertcollection", "['hw_api_object','parameter'=>'array']");
f("hw_api::insertdocument", "['hw_api_object','parameter'=>'array']");
f("hw_api::insert", "['hw_api_object','parameter'=>'array']");
f("hw_api::link", "['bool','parameter'=>'array']");
f("hw_api::lock", "['bool','parameter'=>'array']");
f("hw_api::move", "['bool','parameter'=>'array']");
f("hw_api_object::assign", "['bool','parameter'=>'array']");
f("hw_api_object::attreditable", "['bool','parameter'=>'array']");
f("hw_api::objectbyanchor", "['hw_api_object','parameter'=>'array']");
f("hw_api_object::count", "['int','parameter'=>'array']");
f("hw_api_object", "['hw_api_object','parameter'=>'array']");
f("hw_api::object", "['hw_api_object','parameter'=>'array']");
f("hw_api_object::insert", "['bool','attribute'=>'hw_api_attribute']");
f("hwapi_object_new", "['hw_api_object','parameter'=>'array']");
f("hw_api_object::remove", "['bool','name'=>'string']");
f("hw_api_object::title", "['string','parameter'=>'array']");
f("hw_api_object::value", "['string','name'=>'string']");
f("hw_api::parents", "['array','parameter'=>'array']");
f("hw_api_reason::description", "['string']");
f("hw_api_reason::type", "['HW_API_Reason']");
f("hw_api::remove", "['bool','parameter'=>'array']");
f("hw_api::replace", "['hw_api_object','parameter'=>'array']");
f("hw_api::setcommittedversion", "['hw_api_object','parameter'=>'array']");
f("hw_api::srcanchors", "['array','parameter'=>'array']");
f("hw_api::srcsofdst", "['array','parameter'=>'array']");
f("hw_api::unlock", "['bool','parameter'=>'array']");
f("hw_api::user", "['hw_api_object','parameter'=>'array']");
f("hw_api::userlist", "['array','parameter'=>'array']");
f("hw_Array2Objrec", "['string','object_array'=>'array']");
f("hw_changeobject", "['bool','link'=>'int','objid'=>'int','attributes'=>'array']");
f("hw_Children", "['array','connection'=>'int','objectid'=>'int']");
f("hw_ChildrenObj", "['array','connection'=>'int','objectid'=>'int']");
f("hw_Close", "['bool','connection'=>'int']");
f("hw_Connect", "['int','host'=>'string','port'=>'int','username='=>'string','password='=>'string']");
f("hw_connection_info", "['','link'=>'int']");
f("hw_cp", "['int','connection'=>'int','object_id_array'=>'array','destination_id'=>'int']");
f("hw_Deleteobject", "['bool','connection'=>'int','object_to_delete'=>'int']");
f("hw_DocByAnchor", "['int','connection'=>'int','anchorid'=>'int']");
f("hw_DocByAnchorObj", "['string','connection'=>'int','anchorid'=>'int']");
f("hw_Document_Attributes", "['string','hw_document'=>'int']");
f("hw_Document_BodyTag", "['string','hw_document'=>'int','prefix='=>'string']");
f("hw_Document_Content", "['string','hw_document'=>'int']");
f("hw_Document_SetContent", "['bool','hw_document'=>'int','content'=>'string']");
f("hw_Document_Size", "['int','hw_document'=>'int']");
f("hw_dummy", "['string','link'=>'int','id'=>'int','msgid'=>'int']");
f("hw_EditText", "['bool','connection'=>'int','hw_document'=>'int']");
f("hw_Error", "['int','connection'=>'int']");
f("hw_ErrorMsg", "['string','connection'=>'int']");
f("hw_Free_Document", "['bool','hw_document'=>'int']");
f("hw_GetAnchors", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetAnchorsObj", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetAndLock", "['string','connection'=>'int','objectid'=>'int']");
f("hw_GetChildColl", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetChildCollObj", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetChildDocColl", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetChildDocCollObj", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetObjectByQuery", "['array','connection'=>'int','query'=>'string','max_hits'=>'int']");
f("hw_GetObjectByQueryColl", "['array','connection'=>'int','objectid'=>'int','query'=>'string','max_hits'=>'int']");
f("hw_GetObjectByQueryCollObj", "['array','connection'=>'int','objectid'=>'int','query'=>'string','max_hits'=>'int']");
f("hw_GetObjectByQueryObj", "['array','connection'=>'int','query'=>'string','max_hits'=>'int']");
f("hw_GetObject", "['','connection'=>'int','objectid'=>'','query='=>'string']");
f("hw_GetParents", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetParentsObj", "['array','connection'=>'int','objectid'=>'int']");
f("hw_getrellink", "['string','link'=>'int','rootid'=>'int','sourceid'=>'int','destid'=>'int']");
f("hw_getremotechildren", "['','connection'=>'int','object_record'=>'string']");
f("hw_GetRemote", "['int','connection'=>'int','objectid'=>'int']");
f("hw_GetSrcByDestObj", "['array','connection'=>'int','objectid'=>'int']");
f("hw_GetText", "['int','connection'=>'int','objectid'=>'int','rootid/prefix='=>'']");
f("hw_getusername", "['string','connection'=>'int']");
f("hw_Identify", "['string','link'=>'int','username'=>'string','password'=>'string']");
f("hw_InCollections", "['array','connection'=>'int','object_id_array'=>'array','collection_id_array'=>'array','return_collections'=>'int']");
f("hw_Info", "['string','connection'=>'int']");
f("hw_InsColl", "['int','connection'=>'int','objectid'=>'int','object_array'=>'array']");
f("hw_InsDoc", "['int','connection'=>'','parentid'=>'int','object_record'=>'string','text='=>'string']");
f("hw_insertanchors", "['bool','hwdoc'=>'int','anchorecs'=>'array','dest'=>'array','urlprefixes='=>'array']");
f("hw_InsertDocument", "['int','connection'=>'int','parent_id'=>'int','hw_document'=>'int']");
f("hw_InsertObject", "['int','connection'=>'int','object_rec'=>'string','parameter'=>'string']");
f("hw_mapid", "['int','connection'=>'int','server_id'=>'int','object_id'=>'int']");
f("hw_Modifyobject", "['bool','connection'=>'int','object_to_change'=>'int','remove'=>'array','add'=>'array','mode='=>'int']");
f("hw_mv", "['int','connection'=>'int','object_id_array'=>'array','source_id'=>'int','destination_id'=>'int']");
f("hw_New_Document", "['int','object_record'=>'string','document_data'=>'string','document_size'=>'int']");
f("hw_objrec2array", "['array','object_record'=>'string','format='=>'array']");
f("hw_Output_Document", "['bool','hw_document'=>'int']");
f("hw_pConnect", "['int','host'=>'string','port'=>'int','username='=>'string','password='=>'string']");
f("hw_PipeDocument", "['int','connection'=>'int','objectid'=>'int','url_prefixes='=>'array']");
f("hw_Root", "['int']");
f("hw_setlinkroot", "['int','link'=>'int','rootid'=>'int']");
f("hw_stat", "['string','link'=>'int']");
f("hw_Unlock", "['bool','connection'=>'int','objectid'=>'int']");
f("hw_Who", "['array','connection'=>'int']");
f("hypot", "['float','num1'=>'float','num2'=>'float']");
f("ibase_add_user", "['bool','service_handle'=>'','user_name'=>'string','password'=>'string','first_name='=>'string','middle_name='=>'string','last_name='=>'string']");
f("ibase_affected_rows", "['int','link_identifier='=>'']");
f("ibase_backup", "['','service_handle'=>'','source_db'=>'string','dest_file'=>'string','options='=>'int','verbose='=>'bool']");
f("ibase_blob_add", "['bool','blob_handle'=>'','data'=>'string']");
f("ibase_blob_cancel", "['bool','blob_handle'=>'']");
f("ibase_blob_close", "['string','blob_handle'=>'']");
f("ibase_blob_create", "['resource','link_identifier='=>'']");
f("ibase_blob_echo\\'1", "['bool','blob_id'=>'string']");
f("ibase_blob_echo", "['bool','link_identifier'=>'','blob_id'=>'string']");
f("ibase_blob_get", "['string','blob_handle'=>'','len'=>'int']");
f("ibase_blob_import", "['string','link_identifier'=>'','file_handle'=>'']");
f("ibase_blob_info\\'1", "['array','blob_id'=>'string']");
f("ibase_blob_info", "['array','link_identifier'=>'','blob_id'=>'string']");
f("ibase_blob_open\\'1", "['resource','blob_id'=>'string']");
f("ibase_blob_open", "['resource','link_identifier'=>'','blob_id'=>'string']");
f("ibase_close", "['bool','link_identifier='=>'']");
f("ibase_commit", "['bool','link_identifier='=>'']");
f("ibase_commit_ret", "['bool','link_identifier='=>'']");
f("ibase_connect", "['resource','database='=>'string','username='=>'string','password='=>'string','charset='=>'string','buffers='=>'int','dialect='=>'int','role='=>'string']");
f("ibase_db_info", "['string','service_handle'=>'','db'=>'string','action'=>'int','argument='=>'int']");
f("ibase_delete_user", "['bool','service_handle'=>'','user_name'=>'string','password='=>'string','first_name='=>'string','middle_name='=>'string','last_name='=>'string']");
f("ibase_drop_db", "['bool','link_identifier='=>'']");
f("ibase_errcode", "['int']");
f("ibase_errmsg", "['string']");
f("ibase_execute", "['','query'=>'','bind_arg='=>'','...='=>'']");
f("ibase_fetch_assoc", "['array','result'=>'','fetch_flags='=>'int']");
f("ibase_fetch_object", "['any','result'=>'','fetch_flags='=>'int']");
f("ibase_fetch_row", "['array','result'=>'','fetch_flags='=>'int']");
f("ibase_field_info", "['array','query_result'=>'','field_number'=>'int']");
f("ibase_free_event_handler", "['bool','event'=>'']");
f("ibase_free_query", "['bool','query'=>'']");
f("ibase_free_result", "['bool','result'=>'']");
f("ibase_gen_id", "['int','generator'=>'string','increment='=>'int','link_identifier='=>'']");
f("ibase_maintain_db", "['bool','service_handle'=>'','db'=>'string','action'=>'int','argument='=>'int']");
f("ibase_modify_user", "['bool','service_handle'=>'','user_name'=>'string','password'=>'string','first_name='=>'string','middle_name='=>'string','last_name='=>'string']");
f("ibase_name_result", "['bool','result'=>'','name'=>'string']");
f("ibase_num_fields", "['int','query_result'=>'']");
f("ibase_num_params", "['int','query'=>'']");
f("ibase_num_rows", "['int','result_identifier'=>'']");
f("ibase_param_info", "['array','query'=>'','field_number'=>'int']");
f("ibase_pconnect", "['resource','database='=>'string','username='=>'string','password='=>'string','charset='=>'string','buffers='=>'int','dialect='=>'int','role='=>'string']");
f("ibase_prepare", "['resource','link_identifier'=>'','query'=>'string','trans_identifier'=>'']");
//f("'ibase_query", "['','link_identifier='=>'','string='=>']]','bind_arg='=>'','...='=>'']");
f("ibase_restore", "['','service_handle'=>'','source_file'=>'string','dest_db'=>'string','options='=>'int','verbose='=>'bool']");
f("ibase_rollback", "['bool','link_identifier='=>'']");
f("ibase_rollback_ret", "['bool','link_identifier='=>'']");
f("ibase_server_info", "['string','service_handle'=>'','action'=>'int']");
f("ibase_service_attach", "['resource','host'=>'string','dba_username'=>'string','dba_password'=>'string']");
f("ibase_service_detach", "['bool','service_handle'=>'']");
f("ibase_set_event_handler\\'1", "['resource','callback'=>'callable','event'=>'string','...'=>'']");
f("ibase_set_event_handler", "['resource','link_identifier'=>'','callback'=>'callable','event='=>'string','...='=>'']");
f("ibase_timefmt", "['bool','format'=>'string','columntype='=>'int']");
f("ibase_trans", "['resource','trans_args='=>'int','link_identifier='=>'','...='=>'']");
f("ibase_wait_event\\'1", "['string','event'=>'string','...'=>'']");
f("ibase_wait_event", "['string','link_identifier'=>'','event='=>'string','...='=>'']");
f("iconv_get_encoding", "['','type='=>'string']");
f("iconv_mime_decode_headers", "['array','headers'=>'string','mode='=>'int','charset='=>'string']");
f("iconv_mime_decode", "['string','encoded_string'=>'string','mode='=>'int','charset='=>'string']");
f("iconv_mime_encode", "['string','field_name'=>'string','field_value'=>'string','preference='=>'array']");
f("iconv_set_encoding", "['bool','type'=>'string','charset'=>'string']");
f("iconv", "['string','in_charset'=>'string','out_charset'=>'string','str'=>'string']");
f("iconv_strlen", "['int','str'=>'string','charset='=>'string']");
f("iconv_strpos", "['int','haystack'=>'string','needle'=>'string','offset='=>'int','charset='=>'string']");
f("iconv_strrpos", "['int','haystack'=>'string','needle'=>'string','charset='=>'string']");
f("iconv_substr", "['string','str'=>'string','offset'=>'int','length='=>'int','charset='=>'string']");
f("id3_get_frame_long_name", "['string','frameid'=>'string']");
f("id3_get_frame_short_name", "['string','frameid'=>'string']");
f("id3_get_genre_id", "['int','genre'=>'string']");
f("id3_get_genre_list", "['array']");
f("id3_get_genre_name", "['string','genre_id'=>'int']");
f("id3_get_tag", "['array','filename'=>'string','version='=>'int']");
f("id3_get_version", "['int','filename'=>'string']");
f("id3_remove_tag", "['bool','filename'=>'string','version='=>'int']");
f("id3_set_tag", "['bool','filename'=>'string','tag'=>'array','version='=>'int']");
f("idate", "['int','format'=>'string','timestamp='=>'int']");
f("idn_strerror", "['string','errorcode'=>'int']");
f("idn_to_ascii", "['string|false','domain'=>'string','options='=>'int','variant='=>'int','&idna_info='=>'array']");
f("idn_to_utf8", "['string|false','domain'=>'string','options='=>'int','variant='=>'int','&idna_info='=>'array']");
f("ifx_affected_rows", "['int','result_id'=>'']");
f("ifx_blobinfile_mode", "['bool','mode'=>'int']");
f("ifx_byteasvarchar", "['bool','mode'=>'int']");
f("ifx_close", "['bool','link_identifier='=>'']");
f("ifx_connect", "['resource','database='=>'string','userid='=>'string','password='=>'string']");
f("ifx_copy_blob", "['int','bid'=>'int']");
f("ifx_create_blob", "['int','type'=>'int','mode'=>'int','param'=>'string']");
f("ifx_create_char", "['int','param'=>'string']");
f("ifx_do", "['bool','result_id'=>'']");
f("ifx_errormsg", "['string','errorcode='=>'int']");
f("ifx_error", "['string','link_identifier='=>'']");
f("ifx_fetch_row", "['array','result_id'=>'','position='=>'']");
f("ifx_fieldproperties", "['array','result_id'=>'']");
f("ifx_fieldtypes", "['array','result_id'=>'']");
f("ifx_free_blob", "['bool','bid'=>'int']");
f("ifx_free_char", "['bool','bid'=>'int']");
f("ifx_free_result", "['bool','result_id'=>'']");
f("ifx_get_blob", "['string','bid'=>'int']");
f("ifx_get_char", "['string','bid'=>'int']");
f("ifx_getsqlca", "['array','result_id'=>'']");
f("ifx_htmltbl_result", "['int','result_id'=>'','html_table_options='=>'string']");
f("ifx_nullformat", "['bool','mode'=>'int']");
f("ifx_num_fields", "['int','result_id'=>'']");
f("ifx_num_rows", "['int','result_id'=>'']");
f("ifx_pconnect", "['resource','database='=>'string','userid='=>'string','password='=>'string']");
f("ifx_prepare", "['resource','query'=>'string','link_identifier'=>'','cursor_def='=>'int','blobidarray='=>'']");
f("ifx_query", "['resource','query'=>'string','link_identifier'=>'','cursor_type='=>'int','blobidarray='=>'']");
f("ifx_textasvarchar", "['bool','mode'=>'int']");
f("ifx_update_blob", "['bool','bid'=>'int','content'=>'string']");
f("ifx_update_char", "['bool','bid'=>'int','content'=>'string']");
f("ifxus_close_slob", "['bool','bid'=>'int']");
f("ifxus_create_slob", "['int','mode'=>'int']");
f("ifxus_free_slob", "['bool','bid'=>'int']");
f("ifxus_open_slob", "['int','bid'=>'int','mode'=>'int']");
f("ifxus_read_slob", "['string','bid'=>'int','nbytes'=>'int']");
f("ifxus_seek_slob", "['int','bid'=>'int','mode'=>'int','offset'=>'int']");
f("ifxus_tell_slob", "['int','bid'=>'int']");
f("ifxus_write_slob", "['int','bid'=>'int','content'=>'string']");
f("igbinary_serialize", "['string|false','value'=>'']");
f("igbinary_unserialize", "['','str'=>'string']");
f("ignore_user_abort", "['int','value='=>'bool']");
f("iis_add_server", "['int','path'=>'string','comment'=>'string','server_ip'=>'string','port'=>'int','host_name'=>'string','rights'=>'int','start_server'=>'int']");
f("iis_get_dir_security", "['int','server_instance'=>'int','virtual_path'=>'string']");
f("iis_get_script_map", "['string','server_instance'=>'int','virtual_path'=>'string','script_extension'=>'string']");
f("iis_get_server_by_comment", "['int','comment'=>'string']");
f("iis_get_server_by_path", "['int','path'=>'string']");
f("iis_get_server_rights", "['int','server_instance'=>'int','virtual_path'=>'string']");
f("iis_get_service_state", "['int','service_id'=>'string']");
f("iis_remove_server", "['int','server_instance'=>'int']");
f("iis_set_app_settings", "['int','server_instance'=>'int','virtual_path'=>'string','application_scope'=>'string']");
f("iis_set_dir_security", "['int','server_instance'=>'int','virtual_path'=>'string','directory_flags'=>'int']");
f("iis_set_script_map", "['int','server_instance'=>'int','virtual_path'=>'string','script_extension'=>'string','engine_path'=>'string','allow_scripting'=>'int']");
f("iis_set_server_rights", "['int','server_instance'=>'int','virtual_path'=>'string','directory_flags'=>'int']");
f("iis_start_server", "['int','server_instance'=>'int']");
f("iis_start_service", "['int','service_id'=>'string']");
f("iis_stop_server", "['int','server_instance'=>'int']");
f("iis_stop_service", "['int','service_id'=>'string']");
f("image2wbmp", "['bool','im'=>'','filename='=>'string|null','threshold='=>'int']");
f("imageaffineconcat", "['array','m1'=>'array','m2'=>'array']");
f("imageaffinematrixconcat", "['array','m1'=>'array','m2'=>'array']");
f("imageaffinematrixget", "['array','type'=>'int','options'=>'array']");
f("imageaffine", "['resource','src'=>'','affine'=>'array','clip'=>'array']");
f("imagealphablending", "['bool','im'=>'','on'=>'bool']");
f("imageantialias", "['bool','im'=>'','on'=>'bool']");
f("imagearc", "['bool','im'=>'','cx'=>'int','cy'=>'int','w'=>'int','h'=>'int','s'=>'int','e'=>'int','col'=>'int']");
f("imagechar", "['bool','im'=>'','font'=>'int','x'=>'int','y'=>'int','c'=>'string','col'=>'int']");
f("imagecharup", "['bool','im'=>'','font'=>'int','x'=>'int','y'=>'int','c'=>'string','col'=>'int']");
f("imagecolorallocatealpha", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int','alpha'=>'int']");
f("imagecolorallocate", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int']");
f("imagecolorat", "['int','im'=>'','x'=>'int','y'=>'int']");
f("imagecolorclosestalpha", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int','alpha'=>'int']");
f("imagecolorclosesthwb", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int']");
f("imagecolorclosest", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int']");
f("imagecolordeallocate", "['bool','im'=>'','index'=>'int']");
f("imagecolorexactalpha", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int','alpha'=>'int']");
f("imagecolorexact", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int']");
f("imagecolormatch", "['bool','im1'=>'','im2'=>'']");
f("imagecolorresolvealpha", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int','alpha'=>'int']");
f("imagecolorresolve", "['int','im'=>'','red'=>'int','green'=>'int','blue'=>'int']");
f("imagecolorset", "['','im'=>'','col'=>'int','red'=>'int','green'=>'int','blue'=>'int','alpha='=>'int']");
f("imagecolorsforindex", "['array','im'=>'','col'=>'int']");
f("imagecolorstotal", "['int','im'=>'']");
f("imagecolortransparent", "['int','im'=>'','col='=>'int']");
f("imageconvolution", "['resource','src_im'=>'','matrix3x3'=>'array','div'=>'float','offset'=>'float']");
f("imagecopy", "['bool','dst_im'=>'','src_im'=>'','dst_x'=>'int','dst_y'=>'int','src_x'=>'int','src_y'=>'int','src_w'=>'int','src_h'=>'int']");
f("imagecopymerge", "['bool','src_im'=>'','dst_im'=>'','dst_x'=>'int','dst_y'=>'int','src_x'=>'int','src_y'=>'int','src_w'=>'int','src_h'=>'int','pct'=>'int']");
f("imagecopymergegray", "['bool','src_im'=>'','dst_im'=>'','dst_x'=>'int','dst_y'=>'int','src_x'=>'int','src_y'=>'int','src_w'=>'int','src_h'=>'int','pct'=>'int']");
f("imagecopyresampled", "['bool','dst_im'=>'','src_im'=>'','dst_x'=>'int','dst_y'=>'int','src_x'=>'int','src_y'=>'int','dst_w'=>'int','dst_h'=>'int','src_w'=>'int','src_h'=>'int']");
f("imagecopyresized", "['bool','dst_im'=>'','src_im'=>'','dst_x'=>'int','dst_y'=>'int','src_x'=>'int','src_y'=>'int','dst_w'=>'int','dst_h'=>'int','src_w'=>'int','src_h'=>'int']");
f("imagecreatefromgd2part", "['resource','filename'=>'string','srcx'=>'int','srcy'=>'int','width'=>'int','height'=>'int']");
f("imagecreatefromgd2", "['resource','filename'=>'string']");
f("imagecreatefromgd", "['resource','filename'=>'string']");
f("imagecreatefromgif", "['resource','filename'=>'string']");
f("imagecreatefromjpeg", "['resource','filename'=>'string']");
f("imagecreatefrompng", "['resource','filename'=>'string']");
f("imagecreatefromstring", "['resource','image'=>'string']");
f("imagecreatefromwbmp", "['resource','filename'=>'string']");
f("imagecreatefromwebp", "['resource','filename'=>'string']");
f("imagecreatefromxbm", "['resource','filename'=>'string']");
f("imagecreatefromxpm", "['resource','filename'=>'string']");
f("imagecreate", "['resource','x_size'=>'int','y_size'=>'int']");
f("imagecreatetruecolor", "['resource','x_size'=>'int','y_size'=>'int']");
f("imagecropauto", "['','im'=>'','mode'=>'int','threshold'=>'float','color'=>'int']");
f("imagecrop", "['','im'=>'','rect'=>'array']");
f("imagedashedline", "['bool','im'=>'','x1'=>'int','y1'=>'int','x2'=>'int','y2'=>'int','col'=>'int']");
f("imagedestroy", "['bool','im'=>'']");
f("imageellipse", "['bool','im'=>'','cx'=>'int','cy'=>'int','w'=>'int','h'=>'int','color'=>'int']");
f("imagefill", "['bool','im'=>'','x'=>'int','y'=>'int','col'=>'int']");
f("imagefilledarc", "['bool','im'=>'','cx'=>'int','cy'=>'int','w'=>'int','h'=>'int','s'=>'int','e'=>'int','col'=>'int','style'=>'int']");
f("imagefilledellipse", "['bool','im'=>'','cx'=>'int','cy'=>'int','w'=>'int','h'=>'int','color'=>'int']");
f("imagefilledpolygon", "['bool','im'=>'','point'=>'array','num_points'=>'int','col'=>'int']");
f("imagefilledrectangle", "['bool','im'=>'','x1'=>'int','y1'=>'int','x2'=>'int','y2'=>'int','col'=>'int']");
f("imagefilltoborder", "['bool','im'=>'','x'=>'int','y'=>'int','border'=>'int','col'=>'int']");
f("imagefilter", "['bool','src_im'=>'','filtertype'=>'int','arg1='=>'int','arg2='=>'int','arg3='=>'int','arg4='=>'int']");
f("imageflip", "['','im'=>'','mode'=>'int']");
f("imagefontheight", "['int','font'=>'int']");
f("imagefontwidth", "['int','font'=>'int']");
f("imageftbbox", "['array','size'=>'float','angle'=>'float','font_file'=>'string','text'=>'string','extrainfo='=>'array']");
f("imagefttext", "['array','im'=>'','size'=>'float','angle'=>'float','x'=>'int','y'=>'int','col'=>'int','font_file'=>'string','text'=>'string','extrainfo='=>'array']");
f("imagegammacorrect", "['bool','im'=>'','inputgamma'=>'float','outputgamma'=>'float']");
f("imagegd2", "['bool','im'=>'','filename='=>'string|null','chunk_size='=>'int','type='=>'int']");
f("imagegd", "['bool','im'=>'','filename='=>'string|null']");
f("imagegif", "['bool','im'=>'','filename='=>'string|null']");
f("imagegrabscreen", "['resource']");
f("imagegrabwindow", "['resource','window_handle'=>'int','client_area='=>'int']");
f("imageinterlace", "['int','im'=>'','interlace='=>'int']");
f("imageistruecolor", "['bool','im'=>'']");
f("imagejpeg", "['bool','im'=>'','filename='=>'string|null','quality='=>'int']");
f("imagelayereffect", "['bool','im'=>'','effect'=>'int']");
f("imageline", "['bool','im'=>'','x1'=>'int','y1'=>'int','x2'=>'int','y2'=>'int','col'=>'int']");
f("imageloadfont", "['int','filename'=>'string']");
f("imagepalettecopy", "['','dst'=>'','src'=>'']");
f("imagepalettetotruecolor", "['bool','src'=>'resource']");
f("imagepng", "['bool','im'=>'','filename='=>'string|null','quality='=>'int','filters='=>'int']");
f("imagepolygon", "['bool','im'=>'','point'=>'array','num_points'=>'int','col'=>'int']");
f("imagepsbbox", "['array','text'=>'string','font'=>'','size'=>'int','space'=>'int','tightness'=>'int','angle'=>'float']");
f("imagepsencodefont", "['bool','font_index'=>'','encodingfile'=>'string']");
f("imagepsextendfont", "['bool','font_index'=>'','extend'=>'float']");
f("imagepsfreefont", "['bool','font_index'=>'']");
f("imagepsloadfont", "['resource','filename'=>'string']");
f("imagepsslantfont", "['bool','font_index'=>'','slant'=>'float']");
f("imagepstext", "['array','image'=>'','text'=>'string','font_index'=>'','size'=>'int','foreground'=>'int','background'=>'int','x'=>'int','y'=>'int','space='=>'int','tightness='=>'int','angle='=>'float','antialias_steps='=>'int']");
f("imagerectangle", "['bool','im'=>'','x1'=>'int','y1'=>'int','x2'=>'int','y2'=>'int','col'=>'int']");
f("imagerotate", "['resource','src_im'=>'','angle'=>'float','bgdcolor'=>'int','ignoretransparent='=>'int']");
f("imagesavealpha", "['bool','im'=>'','on'=>'bool']");
f("imagescale", "['resource','im'=>'','new_width'=>'int','new_height'=>'int','method'=>'int']");
f("imagesetbrush", "['bool','image'=>'','brush'=>'']");
f("imagesetinterpolation", "['bool','im'=>'','method'=>'int']");
f("imagesetpixel", "['bool','im'=>'','x'=>'int','y'=>'int','col'=>'int']");
f("imagesetstyle", "['bool','im'=>'','styles'=>'array']");
f("imagesetthickness", "['bool','im'=>'','thickness'=>'int']");
f("imagesettile", "['bool','image'=>'','tile'=>'']");
f("imagestring", "['bool','im'=>'','font'=>'int','x'=>'int','y'=>'int','str'=>'string','col'=>'int']");
f("imagestringup", "['bool','im'=>'','font'=>'int','x'=>'int','y'=>'int','str'=>'string','col'=>'int']");
f("imagesx", "['int','im'=>'']");
f("imagesy", "['int','im'=>'']");
f("imagetruecolortopalette", "['','im'=>'','ditherflag'=>'bool','colorswanted'=>'int']");
f("imagettfbbox", "['array','size'=>'float','angle'=>'float','font_file'=>'string','text'=>'string']");
f("imagettftext", "['array','im'=>'','size'=>'float','angle'=>'float','x'=>'int','y'=>'int','col'=>'int','font_file'=>'string','text'=>'string']");
f("imagetypes", "['int']");
f("image_type_to_extension", "['string','imagetype'=>'int','include_dot='=>'bool']");
f("image_type_to_mime_type", "['string','imagetype'=>'int']");
f("imagewbmp", "['bool','im'=>'','filename='=>'string|null','foreground='=>'int']");
f("imagewebp", "['bool','im'=>'','filename'=>'string|null','quality'=>'int']");
f("imagexbm", "['bool','im'=>'int','filename'=>'string|null','foreground='=>'int']");
f("Imagick::adaptiveBlurImage", "['bool','radius'=>'float','sigma'=>'float','channel='=>'int']");
f("Imagick::adaptiveResizeImage", "['bool','columns'=>'int','rows'=>'int','bestfit='=>'bool']");
f("Imagick::adaptiveSharpenImage", "['bool','radius'=>'float','sigma'=>'float','channel='=>'int']");
f("Imagick::adaptiveThresholdImage", "['bool','width'=>'int','height'=>'int','offset'=>'int']");
f("Imagick::addImage", "['bool','source'=>'imagick']");
f("Imagick::addNoiseImage", "['bool','noise_type'=>'int','channel='=>'int']");
f("Imagick::affineTransformImage", "['bool','matrix'=>'imagickdraw']");
f("Imagick::animateImages", "['bool','x_server'=>'string']");
f("Imagick::annotateImage", "['bool','draw_settings'=>'imagickdraw','x'=>'float','y'=>'float','angle'=>'float','text'=>'string']");
f("Imagick::appendImages", "['Imagick','stack'=>'bool']");
f("Imagick::autoLevelImage", "['void','CHANNEL='=>'string']");
f("Imagick::averageImages", "['Imagick']");
f("Imagick::blackThresholdImage", "['bool','threshold'=>'']");
f("Imagick::blueShiftImage", "['void','factor='=>'float']");
f("Imagick::blurImage", "['bool','radius'=>'float','sigma'=>'float','channel='=>'int']");
f("Imagick::borderImage", "['bool','bordercolor'=>'','width'=>'int','height'=>'int']");
f("Imagick::brightnessContrastImage", "['void','brightness'=>'string','contrast'=>'string','CHANNEL='=>'string']");
f("Imagick::charcoalImage", "['bool','radius'=>'float','sigma'=>'float']");
f("Imagick::chopImage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::clampImage", "['void','CHANNEL='=>'string']");
f("Imagick::clear", "['bool']");
f("Imagick::clipImage", "['bool']");
f("Imagick::clipImagePath", "['void','pathname'=>'string','inside'=>'string']");
f("Imagick::clipPathImage", "['bool','pathname'=>'string','inside'=>'bool']");
f("Imagick::clone", "['Imagick']");
f("Imagick::clutImage", "['bool','lookup_table'=>'imagick','channel='=>'float']");
f("Imagick::coalesceImages", "['Imagick']");
f("Imagick::colorFloodfillImage", "['bool','fill'=>'','fuzz'=>'float','bordercolor'=>'','x'=>'int','y'=>'int']");
f("Imagick::colorizeImage", "['bool','colorize'=>'','opacity'=>'']");
f("Imagick::colorMatrixImage", "['void','color_matrix'=>'string']");
f("Imagick::combineImages", "['Imagick','channeltype'=>'int']");
f("Imagick::commentImage", "['bool','comment'=>'string']");
f("Imagick::compareImageChannels", "['array','image'=>'imagick','channeltype'=>'int','metrictype'=>'int']");
f("Imagick::compareImageLayers", "['Imagick','method'=>'int']");
f("Imagick::compareImages", "['array','compare'=>'imagick','metric'=>'int']");
f("Imagick::compositeImage", "['bool','composite_object'=>'imagick','composite'=>'int','x'=>'int','y'=>'int','channel='=>'int']");
f("Imagick::__construct", "['Imagick','files='=>'']");
f("Imagick::contrastImage", "['bool','sharpen'=>'bool']");
f("Imagick::contrastStretchImage", "['bool','black_point'=>'float','white_point'=>'float','channel='=>'int']");
f("Imagick::convolveImage", "['bool','kernel'=>'array','channel='=>'int']");
f("Imagick::count", "['void','mode='=>'string']");
f("Imagick::cropImage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::cropThumbnailImage", "['bool','width'=>'int','height'=>'int']");
f("Imagick::current", "['Imagick']");
f("Imagick::cycleColormapImage", "['bool','displace'=>'int']");
f("Imagick::decipherImage", "['bool','passphrase'=>'string']");
f("Imagick::deconstructImages", "['Imagick']");
f("Imagick::deleteImageArtifact", "['bool','artifact'=>'string']");
f("Imagick::deleteImageProperty", "['void','name'=>'string']");
f("Imagick::deskewImage", "['bool','threshold'=>'float']");
f("Imagick::despeckleImage", "['bool']");
f("Imagick::destroy", "['bool']");
f("Imagick::displayImage", "['bool','servername'=>'string']");
f("Imagick::displayImages", "['bool','servername'=>'string']");
f("Imagick::distortImage", "['bool','method'=>'int','arguments'=>'array','bestfit'=>'bool']");
f("ImagickDraw::affine", "['bool','affine'=>'array']");
f("ImagickDraw::annotation", "['bool','x'=>'float','y'=>'float','text'=>'string']");
f("ImagickDraw::arc", "['bool','sx'=>'float','sy'=>'float','ex'=>'float','ey'=>'float','sd'=>'float','ed'=>'float']");
f("ImagickDraw::bezier", "['bool','coordinates'=>'array']");
f("ImagickDraw::circle", "['bool','ox'=>'float','oy'=>'float','px'=>'float','py'=>'float']");
f("ImagickDraw::clear", "['bool']");
f("ImagickDraw::clone", "['ImagickDraw']");
f("ImagickDraw::color", "['bool','x'=>'float','y'=>'float','paintmethod'=>'int']");
f("ImagickDraw::comment", "['bool','comment'=>'string']");
f("ImagickDraw::composite", "['bool','compose'=>'int','x'=>'float','y'=>'float','width'=>'float','height'=>'float','compositewand'=>'imagick']");
f("ImagickDraw::__construct", "['ImagickDraw']");
f("ImagickDraw::destroy", "['bool']");
f("ImagickDraw::ellipse", "['bool','ox'=>'float','oy'=>'float','rx'=>'float','ry'=>'float','start'=>'float','end'=>'float']");
f("ImagickDraw::getClipPath", "['string']");
f("ImagickDraw::getClipRule", "['int']");
f("ImagickDraw::getClipUnits", "['int']");
f("ImagickDraw::getFillColor", "['ImagickPixel']");
f("ImagickDraw::getFillOpacity", "['float']");
f("ImagickDraw::getFillRule", "['int']");
f("ImagickDraw::getFontFamily", "['string']");
f("ImagickDraw::getFontSize", "['float']");
f("ImagickDraw::getFontStretch", "['int']");
f("ImagickDraw::getFont", "['string']");
f("ImagickDraw::getFontStyle", "['int']");
f("ImagickDraw::getFontWeight", "['int']");
f("ImagickDraw::getGravity", "['int']");
f("ImagickDraw::getStrokeAntialias", "['bool']");
f("ImagickDraw::getStrokeColor", "['ImagickPixel']");
f("ImagickDraw::getStrokeDashArray", "['array']");
f("ImagickDraw::getStrokeDashOffset", "['float']");
f("ImagickDraw::getStrokeLineCap", "['int']");
f("ImagickDraw::getStrokeLineJoin", "['int']");
f("ImagickDraw::getStrokeMiterLimit", "['int']");
f("ImagickDraw::getStrokeOpacity", "['float']");
f("ImagickDraw::getStrokeWidth", "['float']");
f("ImagickDraw::getTextAlignment", "['int']");
f("ImagickDraw::getTextAntialias", "['bool']");
f("ImagickDraw::getTextDecoration", "['int']");
f("ImagickDraw::getTextEncoding", "['string']");
f("ImagickDraw::getTextInterlineSpacing", "['float']");
f("ImagickDraw::getTextInterwordSpacing", "['float']");
f("ImagickDraw::getTextKerning", "['float']");
f("ImagickDraw::getTextUnderColor", "['ImagickPixel']");
f("ImagickDraw::getVectorGraphics", "['string']");
f("Imagick::drawImage", "['bool','draw'=>'imagickdraw']");
f("ImagickDraw::line", "['bool','sx'=>'float','sy'=>'float','ex'=>'float','ey'=>'float']");
f("ImagickDraw::matte", "['bool','x'=>'float','y'=>'float','paintmethod'=>'int']");
f("ImagickDraw::pathClose", "['bool']");
f("ImagickDraw::pathCurveToAbsolute", "['bool','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToQuadraticBezierAbsolute", "['bool','x1'=>'float','y1'=>'float','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToQuadraticBezierRelative", "['bool','x1'=>'float','y1'=>'float','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToQuadraticBezierSmoothRelative", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToRelative", "['bool','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToSmoothAbsolute", "['bool','x2'=>'float','y2'=>'float','x'=>'float','y'=>'float']");
f("ImagickDraw::pathCurveToSmoothRelative", "['bool','x2'=>'float','y2'=>'float','x'=>'float','y'=>'float']");
f("ImagickDraw::pathEllipticArcAbsolute", "['bool','rx'=>'float','ry'=>'float','x_axis_rotation'=>'float','large_arc_flag'=>'bool','sweep_flag'=>'bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathEllipticArcRelative", "['bool','rx'=>'float','ry'=>'float','x_axis_rotation'=>'float','large_arc_flag'=>'bool','sweep_flag'=>'bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathFinish", "['bool']");
f("ImagickDraw::pathLineToAbsolute", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathLineToHorizontalAbsolute", "['bool','x'=>'float']");
f("ImagickDraw::pathLineToHorizontalRelative", "['bool','x'=>'float']");
f("ImagickDraw::pathLineToRelative", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathLineToVerticalAbsolute", "['bool','y'=>'float']");
f("ImagickDraw::pathLineToVerticalRelative", "['bool','y'=>'float']");
f("ImagickDraw::pathMoveToAbsolute", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathMoveToRelative", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::pathStart", "['bool']");
f("ImagickDraw::point", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::polygon", "['bool','coordinates'=>'array']");
f("ImagickDraw::polyline", "['bool','coordinates'=>'array']");
f("ImagickDraw::pop", "['bool']");
f("ImagickDraw::popClipPath", "['bool']");
f("ImagickDraw::popDefs", "['bool']");
f("ImagickDraw::popPattern", "['bool']");
f("ImagickDraw::push", "['bool']");
f("ImagickDraw::pushClipPath", "['bool','clip_mask_id'=>'string']");
f("ImagickDraw::pushDefs", "['bool']");
f("ImagickDraw::pushPattern", "['bool','pattern_id'=>'string','x'=>'float','y'=>'float','width'=>'float','height'=>'float']");
f("ImagickDraw::rectangle", "['bool','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float']");
f("ImagickDraw::render", "['bool']");
f("ImagickDraw::resetVectorGraphics", "['void']");
f("ImagickDraw::rotate", "['bool','degrees'=>'float']");
f("ImagickDraw::roundRectangle", "['bool','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','rx'=>'float','ry'=>'float']");
f("ImagickDraw::scale", "['bool','x'=>'float','y'=>'float']");
f("ImagickDraw::setClipPath", "['bool','clip_mask'=>'string']");
f("ImagickDraw::setClipRule", "['bool','fill_rule'=>'int']");
f("ImagickDraw::setClipUnits", "['bool','clip_units'=>'int']");
f("ImagickDraw::setFillAlpha", "['bool','opacity'=>'float']");
f("ImagickDraw::setFillColor", "['bool','fill_pixel'=>'imagickpixel']");
f("ImagickDraw::setFillOpacity", "['bool','fillopacity'=>'float']");
f("ImagickDraw::setFillPatternURL", "['bool','fill_url'=>'string']");
f("ImagickDraw::setFillRule", "['bool','fill_rule'=>'int']");
f("ImagickDraw::setFont", "['bool','font_name'=>'string']");
f("ImagickDraw::setFontFamily", "['bool','font_family'=>'string']");
f("ImagickDraw::setFontSize", "['bool','pointsize'=>'float']");
f("ImagickDraw::setFontStretch", "['bool','fontstretch'=>'int']");
f("ImagickDraw::setFontStyle", "['bool','style'=>'int']");
f("ImagickDraw::setFontWeight", "['bool','font_weight'=>'int']");
f("ImagickDraw::setGravity", "['bool','gravity'=>'int']");
f("ImagickDraw::setResolution", "['void','x_resolution'=>'string','y_resolution'=>'string']");
f("ImagickDraw::setStrokeAlpha", "['bool','opacity'=>'float']");
f("ImagickDraw::setStrokeAntialias", "['bool','stroke_antialias'=>'bool']");
f("ImagickDraw::setStrokeColor", "['bool','stroke_pixel'=>'imagickpixel']");
f("ImagickDraw::setStrokeDashArray", "['bool','dasharray'=>'array']");
f("ImagickDraw::setStrokeDashOffset", "['bool','dash_offset'=>'float']");
f("ImagickDraw::setStrokeLineCap", "['bool','linecap'=>'int']");
f("ImagickDraw::setStrokeLineJoin", "['bool','linejoin'=>'int']");
f("ImagickDraw::setStrokeMiterLimit", "['bool','miterlimit'=>'int']");
f("ImagickDraw::setStrokeOpacity", "['bool','stroke_opacity'=>'float']");
f("ImagickDraw::setStrokePatternURL", "['bool','stroke_url'=>'string']");
f("ImagickDraw::setStrokeWidth", "['bool','stroke_width'=>'float']");
f("ImagickDraw::setTextAlignment", "['bool','alignment'=>'int']");
f("ImagickDraw::setTextAntialias", "['bool','antialias'=>'bool']");
f("ImagickDraw::setTextDecoration", "['bool','decoration'=>'int']");
f("ImagickDraw::setTextEncoding", "['bool','encoding'=>'string']");
f("ImagickDraw::setTextInterlineSpacing", "['void','spacing'=>'float']");
f("ImagickDraw::setTextInterwordSpacing", "['void','spacing'=>'float']");
f("ImagickDraw::setTextKerning", "['void','kerning'=>'float']");
f("ImagickDraw::setTextUnderColor", "['bool','under_color'=>'imagickpixel']");
f("ImagickDraw::setVectorGraphics", "['bool','xml'=>'string']");
f("ImagickDraw::setViewbox", "['bool','x1'=>'int','y1'=>'int','x2'=>'int','y2'=>'int']");
f("ImagickDraw::skewX", "['bool','degrees'=>'float']");
f("ImagickDraw::skewY", "['bool','degrees'=>'float']");
f("ImagickDraw::translate", "['bool','x'=>'float','y'=>'float']");
f("Imagick::edgeImage", "['bool','radius'=>'float']");
f("Imagick::embossImage", "['bool','radius'=>'float','sigma'=>'float']");
f("Imagick::encipherImage", "['bool','passphrase'=>'string']");
f("Imagick::enhanceImage", "['bool']");
f("Imagick::equalizeImage", "['bool']");
f("Imagick::evaluateImage", "['bool','op'=>'int','constant'=>'float','channel='=>'int']");
f("Imagick::exportImagePixels", "['array','x'=>'int','y'=>'int','width'=>'int','height'=>'int','map'=>'string','storage'=>'int']");
f("Imagick::extentImage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::filter", "['void','ImagickKernel'=>'ImagickKernel','CHANNEL='=>'int']");
f("Imagick::flattenImages", "['Imagick']");
f("Imagick::flipImage", "['bool']");
f("Imagick::floodFillPaintImage", "['bool','fill'=>'','fuzz'=>'float','target'=>'','x'=>'int','y'=>'int','invert'=>'bool','channel='=>'int']");
f("Imagick::flopImage", "['bool']");
f("Imagick::forwardFourierTransformimage", "['void','magnitude'=>'bool']");
f("Imagick::frameImage", "['bool','matte_color'=>'','width'=>'int','height'=>'int','inner_bevel'=>'int','outer_bevel'=>'int']");
f("Imagick::functionImage", "['bool','function'=>'int','arguments'=>'array','channel='=>'int']");
f("Imagick::fxImage", "['Imagick','expression'=>'string','channel='=>'int']");
f("Imagick::gammaImage", "['bool','gamma'=>'float','channel='=>'int']");
f("Imagick::gaussianBlurImage", "['bool','radius'=>'float','sigma'=>'float','channel='=>'int']");
f("Imagick::getColorspace", "['int']");
f("Imagick::getCompression", "['int']");
f("Imagick::getCompressionQuality", "['int']");
f("Imagick::getCopyright", "['string']");
f("Imagick::getFilename", "['string']");
f("Imagick::getFont", "['string']");
f("Imagick::getFormat", "['string']");
f("Imagick::getGravity", "['int']");
f("Imagick::getHomeURL", "['string']");
f("Imagick::getImageAlphaChannel", "['int']");
f("Imagick::getImageArtifact", "['string','artifact'=>'string']");
f("Imagick::getImageAttribute", "['string','key'=>'string']");
f("Imagick::getImageBackgroundColor", "['ImagickPixel']");
f("Imagick::getImageBlob", "['string']");
f("Imagick::getImageBluePrimary", "['array']");
f("Imagick::getImageBorderColor", "['ImagickPixel']");
f("Imagick::getImageChannelDepth", "['int','channel'=>'int']");
f("Imagick::getImageChannelDistortion", "['float','reference'=>'imagick','channel'=>'int','metric'=>'int']");
f("Imagick::getImageChannelDistortions", "['float','reference'=>'imagick','metric'=>'int','channel='=>'int']");
f("Imagick::getImageChannelExtrema", "['array','channel'=>'int']");
f("Imagick::getImageChannelKurtosis", "['array','channel='=>'int']");
f("Imagick::getImageChannelMean", "['array','channel'=>'int']");
f("Imagick::getImageChannelRange", "['array','channel'=>'int']");
f("Imagick::getImageChannelStatistics", "['array']");
f("Imagick::getImageClipMask", "['Imagick']");
f("Imagick::getImageColormapColor", "['ImagickPixel','index'=>'int']");
f("Imagick::getImageColors", "['int']");
f("Imagick::getImageColorspace", "['int']");
f("Imagick::getImageCompose", "['int']");
f("Imagick::getImageCompression", "['int']");
f("Imagick::getImageCompressionQuality", "['int']");
f("Imagick::getImageDelay", "['int']");
f("Imagick::getImageDepth", "['int']");
f("Imagick::getImageDispose", "['int']");
f("Imagick::getImageDistortion", "['float','reference'=>'magickwand','metric'=>'int']");
f("Imagick::getImageExtrema", "['array']");
f("Imagick::getImageFilename", "['string']");
f("Imagick::getImageFormat", "['string']");
f("Imagick::getImageGamma", "['float']");
f("Imagick::getImageGeometry", "['array']");
f("Imagick::getImageGravity", "['int']");
f("Imagick::getImageGreenPrimary", "['array']");
f("Imagick::getImageHeight", "['int']");
f("Imagick::getImageHistogram", "['array']");
f("Imagick::getImage", "['Imagick']");
f("Imagick::getImageIndex", "['int']");
f("Imagick::getImageInterlaceScheme", "['int']");
f("Imagick::getImageInterpolateMethod", "['int']");
f("Imagick::getImageIterations", "['int']");
f("Imagick::getImageLength", "['int']");
f("Imagick::getImageMagickLicense", "['string']");
f("Imagick::getImageMatte", "['bool']");
f("Imagick::getImageMatteColor", "['ImagickPixel']");
f("Imagick::getImageMimeType", "['string']");
f("Imagick::getImageOrientation", "['int']");
f("Imagick::getImagePage", "['array']");
f("Imagick::getImagePixelColor", "['ImagickPixel','x'=>'int','y'=>'int']");
f("Imagick::getImageProfiles", "['array','pattern='=>'string','only_names='=>'bool']");
f("Imagick::getImageProfile", "['string','name'=>'string']");
f("Imagick::getImageProperties", "['array','pattern='=>'string','only_names='=>'bool']");
f("Imagick::getImageProperty", "['string','name'=>'string']");
f("Imagick::getImageRedPrimary", "['array']");
f("Imagick::getImageRegion", "['Imagick','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::getImageRenderingIntent", "['int']");
f("Imagick::getImageResolution", "['array']");
f("Imagick::getImagesBlob", "['string']");
f("Imagick::getImageScene", "['int']");
f("Imagick::getImageSignature", "['string']");
f("Imagick::getImageSize", "['int']");
f("Imagick::getImageTicksPerSecond", "['int']");
f("Imagick::getImageTotalInkDensity", "['float']");
f("Imagick::getImageType", "['int']");
f("Imagick::getImageUnits", "['int']");
f("Imagick::getImageVirtualPixelMethod", "['int']");
f("Imagick::getImageWhitePoint", "['array']");
f("Imagick::getImageWidth", "['int']");
f("Imagick::getInterlaceScheme", "['int']");
f("Imagick::getIteratorIndex", "['int']");
f("Imagick::getNumberImages", "['int']");
f("Imagick::getOption", "['string','key'=>'string']");
f("Imagick::getPackageName", "['string']");
f("Imagick::getPage", "['array']");
f("Imagick::getPixelIterator", "['ImagickPixelIterator']");
f("Imagick::getPixelRegionIterator", "['ImagickPixelIterator','x'=>'int','y'=>'int','columns'=>'int','rows'=>'int']");
f("Imagick::getPointSize", "['float']");
f("Imagick::getQuantumDepth", "['array']");
f("Imagick::getQuantum", "['int']");
f("Imagick::getQuantumRange", "['array']");
f("Imagick::getRegistry", "['string','key'=>'string']");
f("Imagick::getReleaseDate", "['string']");
f("Imagick::getResource", "['int','type'=>'int']");
f("Imagick::getResourceLimit", "['int','type'=>'int']");
f("Imagick::getSamplingFactors", "['array']");
f("Imagick::getSize", "['array']");
f("Imagick::getSizeOffset", "['int']");
f("Imagick::getVersion", "['array']");
f("Imagick::haldClutImage", "['bool','clut'=>'imagick','channel='=>'int']");
f("Imagick::hasNextImage", "['bool']");
f("Imagick::hasPreviousImage", "['bool']");
f("Imagick::identifyFormat", "['string|bool','embedText'=>'string']");
f("Imagick::identifyImage", "['array','appendrawoutput='=>'bool']");
f("Imagick::implodeImage", "['bool','radius'=>'float']");
f("Imagick::importImagePixels", "['bool','x'=>'int','y'=>'int','width'=>'int','height'=>'int','map'=>'string','storage'=>'int','pixels'=>'array']");
f("Imagick::inverseFourierTransformImage", "['void','complement'=>'string','magnitude'=>'string']");
f("ImagickKernel::addKernel", "['void','ImagickKernel'=>'ImagickKernel']");
f("ImagickKernel::addUnityKernel", "['void']");
f("ImagickKernel::fromBuiltin", "['ImagickKernel','kernelType'=>'string','kernelString'=>'string']");
f("ImagickKernel::fromMatrix", "['ImagickKernel','matrix'=>'array','origin='=>'array']");
f("ImagickKernel::getMatrix", "['array']");
f("ImagickKernel::scale", "['void']");
f("ImagickKernel::separate", "['array']");
f("Imagick::labelImage", "['bool','label'=>'string']");
f("Imagick::levelImage", "['bool','blackpoint'=>'float','gamma'=>'float','whitepoint'=>'float','channel='=>'int']");
f("Imagick::linearStretchImage", "['bool','blackpoint'=>'float','whitepoint'=>'float']");
f("Imagick::liquidRescaleImage", "['bool','width'=>'int','height'=>'int','delta_x'=>'float','rigidity'=>'float']");
f("Imagick::listRegistry", "['array']");
f("Imagick::magnifyImage", "['bool']");
f("Imagick::mapImage", "['bool','map'=>'imagick','dither'=>'bool']");
f("Imagick::matteFloodfillImage", "['bool','alpha'=>'float','fuzz'=>'float','bordercolor'=>'','x'=>'int','y'=>'int']");
f("Imagick::medianFilterImage", "['bool','radius'=>'float']");
f("Imagick::mergeImageLayers", "['bool','layer_method'=>'int']");
f("Imagick::minifyImage", "['bool']");
f("Imagick::modulateImage", "['bool','brightness'=>'float','saturation'=>'float','hue'=>'float']");
f("Imagick::montageImage", "['Imagick','draw'=>'imagickdraw','tile_geometry'=>'string','thumbnail_geometry'=>'string','mode'=>'int','frame'=>'string']");
f("Imagick::morphImages", "['Imagick','number_frames'=>'int']");
f("Imagick::morphology", "['void','morphologyMethod'=>'int','iterations'=>'int','ImagickKernel'=>'ImagickKernel','CHANNEL='=>'string']");
f("Imagick::mosaicImages", "['Imagick']");
f("Imagick::motionBlurImage", "['bool','radius'=>'float','sigma'=>'float','angle'=>'float','channel='=>'int']");
f("Imagick::negateImage", "['bool','gray'=>'bool','channel='=>'int']");
f("Imagick::newImage", "['bool','cols'=>'int','rows'=>'int','background'=>'','format='=>'string']");
f("Imagick::newPseudoImage", "['bool','columns'=>'int','rows'=>'int','pseudostring'=>'string']");
f("Imagick::nextImage", "['bool']");
f("Imagick::normalizeImage", "['bool','channel='=>'int']");
f("Imagick::oilPaintImage", "['bool','radius'=>'float']");
f("Imagick::opaquePaintImage", "['bool','target'=>'','fill'=>'','fuzz'=>'float','invert'=>'bool','channel='=>'int']");
f("Imagick::optimizeImageLayers", "['bool']");
f("Imagick::orderedPosterizeImage", "['bool','threshold_map'=>'string','channel='=>'int']");
f("Imagick::paintFloodfillImage", "['bool','fill'=>'','fuzz'=>'float','bordercolor'=>'','x'=>'int','y'=>'int','channel='=>'int']");
f("Imagick::paintOpaqueImage", "['bool','target'=>'','fill'=>'','fuzz'=>'float','channel='=>'int']");
f("Imagick::paintTransparentImage", "['bool','target'=>'','alpha'=>'float','fuzz'=>'float']");
f("Imagick::pingImageBlob", "['bool','image'=>'string']");
f("Imagick::pingImage", "['bool','filename'=>'string']");
f("Imagick::pingImageFile", "['bool','filehandle'=>'','filename='=>'string']");
f("ImagickPixel::clear", "['bool']");
f("ImagickPixel::__construct", "['ImagickPixel','color='=>'string']");
f("ImagickPixel::destroy", "['bool']");
f("ImagickPixel::getColor", "['array','normalized='=>'bool']");
f("ImagickPixel::getColorAsString", "['string']");
f("ImagickPixel::getColorCount", "['int']");
f("ImagickPixel::getColorQuantum", "['mixed']");
f("ImagickPixel::getColorValue", "['float','color'=>'int']");
f("ImagickPixel::getColorValueQuantum", "['mixed']");
f("ImagickPixel::getHSL", "['array']");
f("ImagickPixel::getIndex", "['int']");
f("ImagickPixel::isPixelSimilar", "['bool','color'=>'ImagickPixel','fuzz'=>'float']");
f("ImagickPixel::isPixelSimilarQuantum", "['bool','color'=>'string','fuzz='=>'string']");
f("ImagickPixel::isSimilar", "['bool','color'=>'imagickpixel','fuzz'=>'float']");
f("ImagickPixelIterator::clear", "['bool']");
f("ImagickPixelIterator::__construct", "['ImagickPixelIterator','wand'=>'imagick']");
f("ImagickPixelIterator::destroy", "['bool']");
f("ImagickPixelIterator::getCurrentIteratorRow", "['array']");
f("ImagickPixelIterator::getIteratorRow", "['int']");
f("ImagickPixelIterator::getNextIteratorRow", "['array']");
f("ImagickPixelIterator::getPreviousIteratorRow", "['array']");
f("ImagickPixelIterator::newPixelIterator", "['bool','wand'=>'imagick']");
f("ImagickPixelIterator::newPixelRegionIterator", "['bool','wand'=>'imagick','x'=>'int','y'=>'int','columns'=>'int','rows'=>'int']");
f("ImagickPixelIterator::resetIterator", "['bool']");
f("ImagickPixelIterator::setIteratorFirstRow", "['bool']");
f("ImagickPixelIterator::setIteratorLastRow", "['bool']");
f("ImagickPixelIterator::setIteratorRow", "['bool','row'=>'int']");
f("ImagickPixelIterator::syncIterator", "['bool']");
f("ImagickPixel::setColor", "['bool','color'=>'string']");
f("ImagickPixel::setcolorcount", "['void','colorCount'=>'string']");
f("ImagickPixel::setColorValue", "['bool','color'=>'int','value'=>'float']");
f("ImagickPixel::setColorValueQuantum", "['void','color'=>'int','value'=>'mixed']");
f("ImagickPixel::setHSL", "['bool','hue'=>'float','saturation'=>'float','luminosity'=>'float']");
f("ImagickPixel::setIndex", "['void','index'=>'int']");
f("Imagick::polaroidImage", "['bool','properties'=>'imagickdraw','angle'=>'float']");
f("Imagick::posterizeImage", "['bool','levels'=>'int','dither'=>'bool']");
f("Imagick::previewImages", "['bool','preview'=>'int']");
f("Imagick::previousImage", "['bool']");
f("Imagick::profileImage", "['bool','name'=>'string','profile'=>'string']");
f("Imagick::quantizeImage", "['bool','numbercolors'=>'int','colorspace'=>'int','treedepth'=>'int','dither'=>'bool','measureerror'=>'bool']");
f("Imagick::quantizeImages", "['bool','numbercolors'=>'int','colorspace'=>'int','treedepth'=>'int','dither'=>'bool','measureerror'=>'bool']");
f("Imagick::queryFontMetrics", "['array','properties'=>'imagickdraw','text'=>'string','multiline='=>'bool']");
f("Imagick::queryFonts", "['array','pattern='=>'string']");
f("Imagick::queryFormats", "['array','pattern='=>'string']");
f("Imagick::radialBlurImage", "['bool','angle'=>'float','channel='=>'int']");
f("Imagick::raiseImage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int','raise'=>'bool']");
f("Imagick::randomThresholdImage", "['bool','low'=>'float','high'=>'float','channel='=>'int']");
f("Imagick::readImageBlob", "['bool','image'=>'string','filename='=>'string']");
f("Imagick::readImage", "['bool','filename'=>'string']");
f("Imagick::readImageFile", "['bool','filehandle'=>'','filename='=>'string']");
f("Imagick::readImages", "['Imagick','filenames'=>'string']");
f("Imagick::recolorImage", "['bool','matrix'=>'array']");
f("Imagick::reduceNoiseImage", "['bool','radius'=>'float']");
f("Imagick::remapImage", "['bool','replacement'=>'imagick','dither'=>'int']");
f("Imagick::removeImage", "['bool']");
f("Imagick::removeImageProfile", "['string','name'=>'string']");
f("Imagick::render", "['bool']");
f("Imagick::resampleImage", "['bool','x_resolution'=>'float','y_resolution'=>'float','filter'=>'int','blur'=>'float']");
f("Imagick::resetImagePage", "['bool','page'=>'string']");
f("Imagick::resizeImage", "['bool','columns'=>'int','rows'=>'int','filter'=>'int','blur'=>'float','bestfit='=>'bool']");
f("Imagick::rollImage", "['bool','x'=>'int','y'=>'int']");
f("Imagick::rotateImage", "['bool','background'=>'','degrees'=>'float']");
f("Imagick::rotationalBlurImage", "['void','angle'=>'string','CHANNEL='=>'string']");
f("Imagick::roundCorners", "['bool','x_rounding'=>'float','y_rounding'=>'float','stroke_width='=>'float','displace='=>'float','size_correction='=>'float']");
f("Imagick::sampleImage", "['bool','columns'=>'int','rows'=>'int']");
f("Imagick::scaleImage", "['bool','cols'=>'int','rows'=>'int','bestfit='=>'bool']");
f("Imagick::segmentImage", "['bool','colorspace'=>'int','cluster_threshold'=>'float','smooth_threshold'=>'float','verbose='=>'bool']");
f("Imagick::selectiveBlurImage", "['void','radius'=>'float','sigma'=>'float','threshold'=>'float','CHANNEL'=>'int']");
f("Imagick::separateImageChannel", "['bool','channel'=>'int']");
f("Imagick::sepiaToneImage", "['bool','threshold'=>'float']");
f("Imagick::setBackgroundColor", "['bool','background'=>'']");
f("Imagick::setColorspace", "['bool','colorspace'=>'int']");
f("Imagick::setCompression", "['bool','compression'=>'int']");
f("Imagick::setCompressionQuality", "['bool','quality'=>'int']");
f("Imagick::setFilename", "['bool','filename'=>'string']");
f("Imagick::setFirstIterator", "['bool']");
f("Imagick::setFont", "['bool','font'=>'string']");
f("Imagick::setFormat", "['bool','format'=>'string']");
f("Imagick::setGravity", "['bool','gravity'=>'int']");
f("Imagick::setImageAlphaChannel", "['bool','mode'=>'int']");
f("Imagick::setImageArtifact", "['bool','artifact'=>'string','value'=>'string']");
f("Imagick::setImageAttribute", "['void','key'=>'string','value'=>'string']");
f("Imagick::setImageBackgroundColor", "['bool','background'=>'']");
f("Imagick::setImageBias", "['bool','bias'=>'float']");
f("Imagick::setImageBiasQuantum", "['void','bias'=>'string']");
f("Imagick::setImageBluePrimary", "['bool','x'=>'float','y'=>'float']");
f("Imagick::setImage", "['bool','replace'=>'imagick']");
f("Imagick::setImageBorderColor", "['bool','border'=>'']");
f("Imagick::setImageChannelDepth", "['bool','channel'=>'int','depth'=>'int']");
f("Imagick::setImageClipMask", "['bool','clip_mask'=>'imagick']");
f("Imagick::setImageColormapColor", "['bool','index'=>'int','color'=>'imagickpixel']");
f("Imagick::setImageColorspace", "['bool','colorspace'=>'int']");
f("Imagick::setImageCompose", "['bool','compose'=>'int']");
f("Imagick::setImageCompression", "['bool','compression'=>'int']");
f("Imagick::setImageCompressionQuality", "['bool','quality'=>'int']");
f("Imagick::setImageDelay", "['bool','delay'=>'int']");
f("Imagick::setImageDepth", "['bool','depth'=>'int']");
f("Imagick::setImageDispose", "['bool','dispose'=>'int']");
f("Imagick::setImageExtent", "['bool','columns'=>'int','rows'=>'int']");
f("Imagick::setImageFilename", "['bool','filename'=>'string']");
f("Imagick::setImageFormat", "['bool','format'=>'string']");
f("Imagick::setImageGamma", "['bool','gamma'=>'float']");
f("Imagick::setImageGravity", "['bool','gravity'=>'int']");
f("Imagick::setImageGreenPrimary", "['bool','x'=>'float','y'=>'float']");
f("Imagick::setImageIndex", "['bool','index'=>'int']");
f("Imagick::setImageInterlaceScheme", "['bool','interlace_scheme'=>'int']");
f("Imagick::setImageInterpolateMethod", "['bool','method'=>'int']");
f("Imagick::setImageIterations", "['bool','iterations'=>'int']");
f("Imagick::setImageMatte", "['bool','matte'=>'bool']");
f("Imagick::setImageMatteColor", "['bool','matte'=>'']");
f("Imagick::setImageOpacity", "['bool','opacity'=>'float']");
f("Imagick::setImageOrientation", "['bool','orientation'=>'int']");
f("Imagick::setImagePage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::setImageProfile", "['bool','name'=>'string','profile'=>'string']");
f("Imagick::setImageProperty", "['bool','name'=>'string','value'=>'string']");
f("Imagick::setImageRedPrimary", "['bool','x'=>'float','y'=>'float']");
f("Imagick::setImageRenderingIntent", "['bool','rendering_intent'=>'int']");
f("Imagick::setImageResolution", "['bool','x_resolution'=>'float','y_resolution'=>'float']");
f("Imagick::setImageScene", "['bool','scene'=>'int']");
f("Imagick::setImageTicksPerSecond", "['bool','ticks_per-second'=>'int']");
f("Imagick::setImageType", "['bool','image_type'=>'int']");
f("Imagick::setImageUnits", "['bool','units'=>'int']");
f("Imagick::setImageVirtualPixelMethod", "['bool','method'=>'int']");
f("Imagick::setImageWhitePoint", "['bool','x'=>'float','y'=>'float']");
f("Imagick::setInterlaceScheme", "['bool','interlace_scheme'=>'int']");
f("Imagick::setIteratorIndex", "['bool','index'=>'int']");
f("Imagick::setLastIterator", "['bool']");
f("Imagick::setOption", "['bool','key'=>'string','value'=>'string']");
f("Imagick::setPage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::setPointSize", "['bool','point_size'=>'float']");
f("Imagick::setProgressMonitor", "['void','callback'=>'callable']");
f("Imagick::setRegistry", "['void','key'=>'string','value'=>'string']");
f("Imagick::setResolution", "['bool','x_resolution'=>'float','y_resolution'=>'float']");
f("Imagick::setResourceLimit", "['bool','type'=>'int','limit'=>'int']");
f("Imagick::setSamplingFactors", "['bool','factors'=>'array']");
f("Imagick::setSize", "['bool','columns'=>'int','rows'=>'int']");
f("Imagick::setSizeOffset", "['bool','columns'=>'int','rows'=>'int','offset'=>'int']");
f("Imagick::setType", "['bool','image_type'=>'int']");
f("Imagick::shadeImage", "['bool','gray'=>'bool','azimuth'=>'float','elevation'=>'float']");
f("Imagick::shadowImage", "['bool','opacity'=>'float','sigma'=>'float','x'=>'int','y'=>'int']");
f("Imagick::sharpenImage", "['bool','radius'=>'float','sigma'=>'float','channel='=>'int']");
f("Imagick::shaveImage", "['bool','columns'=>'int','rows'=>'int']");
f("Imagick::shearImage", "['bool','background'=>'','x_shear'=>'float','y_shear'=>'float']");
f("Imagick::sigmoidalContrastImage", "['bool','sharpen'=>'bool','alpha'=>'float','beta'=>'float','channel='=>'int']");
f("Imagick::sketchImage", "['bool','radius'=>'float','sigma'=>'float','angle'=>'float']");
f("Imagick::smushImages", "['Imagick','stack'=>'string','offset'=>'string']");
f("Imagick::solarizeImage", "['bool','threshold'=>'int']");
f("Imagick::sparseColorImage", "['bool','sparse_method'=>'int','arguments'=>'array','channel='=>'int']");
f("Imagick::spliceImage", "['bool','width'=>'int','height'=>'int','x'=>'int','y'=>'int']");
f("Imagick::spreadImage", "['bool','radius'=>'float']");
f("Imagick::statisticImage", "['void','type'=>'int','width'=>'int','height'=>'int','CHANNEL='=>'string']");
f("Imagick::steganoImage", "['Imagick','watermark_wand'=>'imagick','offset'=>'int']");
f("Imagick::stereoImage", "['bool','offset_wand'=>'imagick']");
f("Imagick::stripImage", "['bool']");
f("Imagick::subImageMatch", "['Imagick','Imagick'=>'Imagick','&offset='=>'array','&similarity='=>'float']");
f("Imagick::swirlImage", "['bool','degrees'=>'float']");
f("Imagick::textureImage", "['bool','texture_wand'=>'imagick']");
f("Imagick::thresholdImage", "['bool','threshold'=>'float','channel='=>'int']");
f("Imagick::thumbnailImage", "['bool','columns'=>'int','rows'=>'int','bestfit='=>'bool','fill='=>'bool']");
f("Imagick::tintImage", "['bool','tint'=>'','opacity'=>'']");
f("Imagick::transformImage", "['Imagick','crop'=>'string','geometry'=>'string']");
f("Imagick::transparentPaintImage", "['bool','target'=>'','alpha'=>'float','fuzz'=>'float','invert'=>'bool']");
f("Imagick::transposeImage", "['bool']");
f("Imagick::transverseImage", "['bool']");
f("Imagick::trimImage", "['bool','fuzz'=>'float']");
f("Imagick::uniqueImageColors", "['bool']");
f("Imagick::unsharpMaskImage", "['bool','radius'=>'float','sigma'=>'float','amount'=>'float','threshold'=>'float','channel='=>'int']");
f("Imagick::valid", "['bool']");
f("Imagick::vignetteImage", "['bool','blackpoint'=>'float','whitepoint'=>'float','x'=>'int','y'=>'int']");
f("Imagick::waveImage", "['bool','amplitude'=>'float','length'=>'float']");
f("Imagick::whiteThresholdImage", "['bool','threshold'=>'']");
f("Imagick::writeImage", "['bool','filename='=>'string']");
f("Imagick::writeImageFile", "['bool','filehandle'=>'']");
f("Imagick::writeImages", "['bool','filename'=>'string','adjoin'=>'bool']");
f("Imagick::writeImagesFile", "['bool','filehandle'=>'']");
f("imap_8bit", "['string','text'=>'string']");
f("imap_alerts", "['array|false']");
f("imap_append", "['bool','stream_id'=>'','folder'=>'string','message'=>'string','options='=>'string','internal_date='=>'string']");
f("imap_base64", "['string','text'=>'string']");
f("imap_binary", "['string','text'=>'string']");
f("imap_body", "['string','stream_id'=>'','msg_no'=>'int','options='=>'int']");
f("imap_bodystruct", "['any','stream_id'=>'','msg_no'=>'int','section'=>'string']");
f("imap_check", "['any','stream_id'=>'']");
f("imap_clearflag_full", "['bool','stream_id'=>'','sequence'=>'string','flag'=>'string','options='=>'int']");
f("imap_close", "['bool','stream_id'=>'','options='=>'int']");
f("imap_createmailbox", "['bool','stream_id'=>'','mailbox'=>'string']");
f("imap_delete", "['bool','stream_id'=>'','msg_no'=>'int','options='=>'int']");
f("imap_deletemailbox", "['bool','stream_id'=>'','mailbox'=>'string']");
f("imap_errors", "['array|false']");
f("imap_expunge", "['bool','stream_id'=>'']");
f("imap_fetchbody", "['string','stream_id'=>'','msg_no'=>'int','section'=>'string','options='=>'int']");
f("imap_fetchheader", "['string','stream_id'=>'','msg_no'=>'int','options='=>'int']");
f("imap_fetchmime", "['string','stream_id'=>'','msg_no'=>'int','section'=>'string','options='=>'int']");
f("imap_fetch_overview", "['array','stream_id'=>'','sequence'=>'string','options='=>'int']");
f("imap_fetchstructure", "['any','stream_id'=>'','msg_no'=>'int','options='=>'int']");
f("imap_gc", "['bool','stream_id'=>'','flags'=>'int']");
f("imap_getacl", "['array','stream_id'=>'','mailbox'=>'string']");
f("imap_getmailboxes", "['array','stream_id'=>'','ref'=>'string','pattern'=>'string']");
f("imap_get_quota", "['array','stream_id'=>'','qroot'=>'string']");
f("imap_get_quotaroot", "['array','stream_id'=>'','mbox'=>'string']");
f("imap_getsubscribed", "['array','stream_id'=>'','ref'=>'string','pattern'=>'string']");
f("imap_headerinfo", "['any','stream_id'=>'','msg_no'=>'int','from_length='=>'int','subject_length='=>'int','default_host='=>'string']");
f("imap_headers", "['array','stream_id'=>'']");
f("imap_last_error", "['string|false']");
f("imap_list", "['array','stream_id'=>'','ref'=>'string','pattern'=>'string']");
f("imap_listscan", "['array','stream_id'=>'','ref'=>'string','pattern'=>'string','content'=>'string']");
f("imap_lsub", "['array','stream_id'=>'','ref'=>'string','pattern'=>'string']");
f("imap_mail", "['bool','to'=>'string','subject'=>'string','message'=>'string','additional_headers='=>'string','cc='=>'string','bcc='=>'string','rpath='=>'string']");
f("imap_mailboxmsginfo", "['any','stream_id'=>'']");
f("imap_mail_compose", "['string','envelope'=>'array','body'=>'array']");
f("imap_mail_copy", "['bool','stream_id'=>'','msglist'=>'string','mailbox'=>'string','options='=>'int']");
f("imap_mail_move", "['bool','stream_id'=>'','sequence'=>'string','mailbox'=>'string','options='=>'int']");
f("imap_mime_header_decode", "['array','str'=>'string']");
f("imap_msgno", "['int','stream_id'=>'','unique_msg_id'=>'int']");
f("imap_mutf7_to_utf8", "['string','in'=>'string']");
f("imap_num_msg", "['int','stream_id'=>'']");
f("imap_num_recent", "['int','stream_id'=>'']");
f("imap_open", "['resource','mailbox'=>'string','user'=>'string','password'=>'string','options='=>'int','n_retries='=>'int']");
f("imap_ping", "['bool','stream_id'=>'']");
f("imap_qprint", "['string','text'=>'string']");
f("imap_renamemailbox", "['bool','stream_id'=>'','old_name'=>'string','new_name'=>'string']");
f("imap_reopen", "['bool','stream_id'=>'','mailbox'=>'string','options='=>'int','n_retries='=>'int']");
f("imap_rfc822_parse_adrlist", "['array','address_string'=>'string','default_host'=>'string']");
f("imap_rfc822_parse_headers", "['any','headers'=>'string','default_host='=>'string']");
f("imap_rfc822_write_address", "['string','mailbox'=>'string|null','host'=>'string|null','personal'=>'string|null']");
f("imap_savebody", "['bool','stream_id'=>'','file'=>'string|resource','msg_no'=>'int','section='=>'string','options='=>'int']");
f("imap_search", "['array','stream_id'=>'','criteria'=>'string','options='=>'int','charset='=>'string']");
f("imap_setacl", "['bool','stream_id'=>'','mailbox'=>'string','id'=>'string','rights'=>'string']");
f("imap_setflag_full", "['bool','stream_id'=>'','sequence'=>'string','flag'=>'string','options='=>'int']");
f("imap_set_quota", "['bool','stream_id'=>'','qroot'=>'string','mailbox_size'=>'int']");
f("imap_sort", "['array','stream_id'=>'','criteria'=>'int','reverse'=>'int','options='=>'int','search_criteria='=>'string','charset='=>'string']");
f("imap_status", "['any','stream_id'=>'','mailbox'=>'string','options'=>'int']");
f("imap_subscribe", "['bool','stream_id'=>'','mailbox'=>'string']");
f("imap_thread", "['array','stream_id'=>'','options='=>'int']");
f("imap_timeout", "['','timeout_type'=>'int','timeout='=>'int']");
f("imap_uid", "['int','stream_id'=>'','msg_no'=>'int']");
f("imap_undelete", "['bool','stream_id'=>'','msg_no'=>'int','flags='=>'int']");
f("imap_unsubscribe", "['bool','stream_id'=>'','mailbox'=>'string']");
f("imap_utf7_decode", "['string','buf'=>'string']");
f("imap_utf7_encode", "['string','buf'=>'string']");
f("imap_utf8", "['string','mime_encoded_text'=>'string']");
f("imap_utf8_to_mutf7", "['string','in'=>'string']");
f("implode\\'2", "['string','pieces'=>'array']");
f("implode\\'1", "['string','pieces'=>'array','glue'=>'string']");
f("implode", "['string','glue'=>'string','pieces'=>'array']");
f("import_request_variables", "['bool','types'=>'string','prefix='=>'string']");
f("in_array", "['bool','needle'=>'','haystack'=>'array','strict='=>'bool']");
f("inclued_get_data", "['array']");
f("inet_ntop", "['string','in_addr'=>'string']");
f("inet_pton", "['string','ip_address'=>'string']");
f("InfiniteIterator::__construct", "['InfiniteIterator','it'=>'iterator']");
f("InfiniteIterator::next", "['']");
f("inflate_add", "['string','context'=>'','encoded_data'=>'string','flush_mode'=>'int']");
f("inflate_init", "['resource','encoding'=>'int']");
f("ingres_autocommit", "['bool','link'=>'']");
f("ingres_autocommit_state", "['bool','link'=>'']");
f("ingres_charset", "['string','link'=>'']");
f("ingres_close", "['bool','link'=>'']");
f("ingres_commit", "['bool','link'=>'']");
f("ingres_connect", "['resource','database='=>'string','username='=>'string','password='=>'string','options='=>'array']");
f("ingres_cursor", "['string','result'=>'']");
f("ingres_errno", "['int','link='=>'']");
f("ingres_error", "['string','link='=>'']");
f("ingres_errsqlstate", "['string','link='=>'']");
f("ingres_escape_string", "['string','link'=>'','source_string'=>'string']");
f("ingres_execute", "['bool','result'=>'','params='=>'array','types='=>'string']");
f("ingres_fetch_array", "['array','result'=>'','result_type='=>'int']");
f("ingres_fetch_assoc", "['array','result'=>'']");
f("ingres_fetch_object", "['any','result'=>'','result_type='=>'int']");
f("ingres_fetch_proc_return", "['int','result'=>'']");
f("ingres_fetch_row", "['array','result'=>'']");
f("ingres_field_length", "['int','result'=>'','index'=>'int']");
f("ingres_field_name", "['string','result'=>'','index'=>'int']");
f("ingres_field_nullable", "['bool','result'=>'','index'=>'int']");
f("ingres_field_precision", "['int','result'=>'','index'=>'int']");
f("ingres_field_scale", "['int','result'=>'','index'=>'int']");
f("ingres_field_type", "['string','result'=>'','index'=>'int']");
f("ingres_free_result", "['bool','result'=>'']");
f("ingres_next_error", "['bool','link='=>'']");
f("ingres_num_fields", "['int','result'=>'']");
f("ingres_num_rows", "['int','result'=>'']");
f("ingres_pconnect", "['resource','database='=>'string','username='=>'string','password='=>'string','options='=>'array']");
f("ingres_prepare", "['','link'=>'','query'=>'string']");
f("ingres_query", "['','link'=>'','query'=>'string','params='=>'array','types='=>'string']");
f("ingres_result_seek", "['bool','result'=>'','position'=>'int']");
f("ingres_rollback", "['bool','link'=>'']");
f("ingres_set_environment", "['bool','link'=>'','options'=>'array']");
f("ingres_unbuffered_query", "['','link'=>'','query'=>'string','params='=>'array','types='=>'string']");
f("ini_get_all", "['array','extension='=>'string','details='=>'bool']");
f("ini_get", "['string|false','varname'=>'string']");
f("ini_restore", "['','varname'=>'string']");
f("ini_set", "['string|false','varname'=>'string','newvalue'=>'string|int|float|bool']");
f("inotify_add_watch", "['int','inotify_instance'=>'','pathname'=>'string','mask'=>'int']");
f("inotify_init", "['resource']");
f("inotify_queue_len", "['int','inotify_instance'=>'']");
f("inotify_read", "['array','inotify_instance'=>'']");
f("inotify_rm_watch", "['bool','inotify_instance'=>'','watch_descriptor'=>'int']");
f("intdiv", "['int','numerator'=>'int','divisor'=>'int']");
f("interface_exists", "['bool','classname'=>'string','autoload='=>'bool']");
f("IntlBreakIterator::__construct", "['']");
f("IntlBreakIterator::createCharacterInstance", "['IntlRuleBasedBreakIterator','locale='=>'string']");
f("IntlBreakIterator::createCodePointInstance", "['IntlCodePointBreakIterator']");
f("IntlBreakIterator::createLineInstance", "['IntlRuleBasedBreakIterator','locale='=>'string']");
f("IntlBreakIterator::createSentenceInstance", "['IntlRuleBasedBreakIterator','locale='=>'string']");
f("IntlBreakIterator::createTitleInstance", "['IntlRuleBasedBreakIterator','locale='=>'string']");
f("IntlBreakIterator::createWordInstance", "['IntlRuleBasedBreakIterator','locale='=>'string']");
f("IntlBreakIterator::current", "['int']");
f("IntlBreakIterator::first", "['int']");
f("IntlBreakIterator::following", "['int','offset'=>'string']");
f("IntlBreakIterator::getErrorCode", "['int']");
f("IntlBreakIterator::getErrorMessage", "['string']");
f("IntlBreakIterator::getLocale", "['string','locale_type'=>'string']");
f("IntlBreakIterator::getPartsIterator", "['','key_type='=>'string']");
f("IntlBreakIterator::getText", "['string']");
f("IntlBreakIterator::isBoundary", "['bool','offset'=>'string']");
f("IntlBreakIterator::last", "['int']");
f("IntlBreakIterator::next", "['int','offset='=>'string']");
f("IntlBreakIterator::preceding", "['int','offset'=>'string']");
f("IntlBreakIterator::previous", "['int']");
f("IntlBreakIterator::setText", "['bool','text'=>'string']");
f("intlcal_add", "['bool','cal'=>'IntlCalendar','field'=>'int','amount'=>'int']");
f("intlcal_after", "['bool','cal'=>'IntlCalendar','other'=>'IntlCalendar']");
f("intlcal_before", "['bool','cal'=>'IntlCalendar','other'=>'IntlCalendar']");
f("intlcal_clear", "['bool','cal'=>'IntlCalendar','field='=>'int']");
f("intlcal_create_instance", "['IntlCalendar','timeZone='=>'mixed','locale='=>'string']");
f("IntlCalendar::add", "['bool','field'=>'int','amount'=>'int']");
f("IntlCalendar::after", "['bool','other'=>'IntlCalendar']");
f("IntlCalendar::before", "['bool','other'=>'IntlCalendar']");
f("IntlCalendar::clear", "['bool','field='=>'int']");
f("IntlCalendar::__construct", "['']");
f("IntlCalendar::createInstance", "['IntlCalendar','timeZone='=>'mixed','locale='=>'string']");
f("IntlCalendar::equals", "['bool','other'=>'IntlCalendar']");
f("IntlCalendar::fieldDifference", "['int','when'=>'float','field'=>'int']");
f("IntlCalendar::fromDateTime", "['IntlCalendar','dateTime'=>'mixed']");
f("IntlCalendar::getActualMaximum", "['int','field'=>'int']");
f("IntlCalendar::getActualMinimum", "['int','field'=>'int']");
f("IntlCalendar::getAvailableLocales", "['array']");
f("IntlCalendar::getDayOfWeekType", "['int','dayOfWeek'=>'int']");
f("IntlCalendar::getErrorCode", "['int']");
f("IntlCalendar::getErrorMessage", "['string']");
f("IntlCalendar::getFirstDayOfWeek", "['int']");
f("IntlCalendar::getGreatestMinimum", "['int','field'=>'int']");
f("IntlCalendar::get", "['int','field'=>'int']");
f("IntlCalendar::getKeywordValuesForLocale", "['Iterator','key'=>'string','locale'=>'string','commonlyUsed'=>'bool']");
f("IntlCalendar::getLeastMaximum", "['int','field'=>'int']");
f("IntlCalendar::getLocale", "['string','localeType'=>'int']");
f("IntlCalendar::getMaximum", "['int','field'=>'int']");
f("IntlCalendar::getMinimalDaysInFirstWeek", "['int']");
f("IntlCalendar::getMinimum", "['int','field'=>'int']");
f("IntlCalendar::getNow", "['float']");
f("IntlCalendar::getRepeatedWallTimeOption", "['int']");
f("IntlCalendar::getSkippedWallTimeOption", "['int']");
f("IntlCalendar::getTime", "['float']");
f("IntlCalendar::getTimeZone", "['IntlTimeZone']");
f("IntlCalendar::getType", "['string']");
f("IntlCalendar::getWeekendTransition", "['int','dayOfWeek'=>'string']");
f("IntlCalendar::inDaylightTime", "['bool']");
f("IntlCalendar::isEquivalentTo", "['bool','other'=>'IntlCalendar']");
f("IntlCalendar::isLenient", "['bool']");
f("IntlCalendar::isSet", "['bool','field'=>'int']");
f("IntlCalendar::isWeekend", "['bool','date='=>'float']");
f("IntlCalendar::roll", "['bool','field'=>'int','amountOrUpOrDown'=>'mixed']");
f("IntlCalendar::set", "['bool','field'=>'int','value'=>'int']");
f("IntlCalendar::set", "['bool','year'=>'int','month'=>'int','dayOfMonth='=>'int','hour='=>'int','minute='=>'int','second='=>'int']");
f("IntlCalendar::setFirstDayOfWeek", "['bool','dayOfWeek'=>'int']");
f("IntlCalendar::setLenient", "['bool','isLenient'=>'string']");
f("IntlCalendar::setMinimalDaysInFirstWeek", "['bool','minimalDays'=>'int']");
f("IntlCalendar::setRepeatedWallTimeOption", "['bool','wallTimeOption'=>'int']");
f("IntlCalendar::setSkippedWallTimeOption", "['bool','wallTimeOption'=>'int']");
f("IntlCalendar::setTime", "['bool','date'=>'float']");
f("IntlCalendar::setTimeZone", "['bool','timeZone'=>'mixed']");
f("IntlCalendar::toDateTime", "['DateTime']");
f("intlcal_equals", "['bool','cal'=>'IntlCalendar','other'=>'IntlCalendar']");
f("intlcal_field_difference", "['int','cal'=>'IntlCalendar','when'=>'float','field'=>'int']");
f("intlcal_from_date_time", "['IntlCalendar','dateTime'=>'mixed']");
f("intlcal_get_actual_maximum", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get_actual_minimum", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get_available_locales", "['array']");
f("intlcal_get_day_of_week_type", "['int','cal'=>'IntlCalendar','dayOfWeek'=>'int']");
f("intlcal_get_first_day_of_week", "['int','cal'=>'IntlCalendar']");
f("intlcal_get_greatest_minimum", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get_keyword_values_for_locale", "['Iterator','key'=>'string','locale'=>'string','commonlyUsed'=>'bool']");
f("intlcal_get_least_maximum", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get_locale", "['string','cal'=>'IntlCalendar','localeType'=>'int']");
f("intlcal_get_maximum", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get_minimal_days_in_first_week", "['bool','cal'=>'IntlCalendar','minimalDays'=>'int']");
f("intlcal_get_minimal_days_in_first_week", "['int','cal'=>'IntlCalendar']");
f("intlcal_get_minimum", "['int','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_get_now", "['float']");
f("intlcal_get_repeated_wall_time_option", "['int','cal'=>'IntlCalendar']");
f("intlcal_get_skipped_wall_time_option", "['int','cal'=>'IntlCalendar']");
f("intlcal_get_time", "['float','cal'=>'IntlCalendar']");
f("intlcal_get_time_zone", "['IntlTimeZone','cal'=>'IntlCalendar']");
f("intlcal_get_type", "['string','cal'=>'IntlCalendar']");
f("intlcal_get_weekend_transition", "['int','cal'=>'IntlCalendar','dayOfWeek'=>'string']");
f("intlcal_in_daylight_time", "['bool','cal'=>'IntlCalendar']");
f("intlcal_is_equivalent_to", "['bool','cal'=>'IntlCalendar','other'=>'IntlCalendar']");
f("intlcal_is_lenient", "['bool','cal'=>'IntlCalendar']");
f("intlcal_is_set", "['bool','cal'=>'IntlCalendar','field'=>'int']");
f("intlcal_is_weekend", "['bool','cal'=>'IntlCalendar','date='=>'float']");
f("intlcal_roll", "['bool','cal'=>'IntlCalendar','field'=>'int','amountOrUpOrDown'=>'mixed']");
f("intlcal_set", "['bool','cal'=>'IntlCalendar','field'=>'int','value'=>'int']");
f("intlcal_set", "['bool','cal'=>'IntlCalendar','year'=>'int','month'=>'int','dayOfMonth='=>'int','hour='=>'int','minute='=>'int','second='=>'int']");
f("intlcal_set_first_day_of_week", "['bool','cal'=>'IntlCalendar','dayOfWeek'=>'int']");
f("intlcal_set_lenient", "['bool','cal'=>'IntlCalendar','isLenient'=>'string']");
f("intlcal_set_repeated_wall_time_option", "['bool','cal'=>'IntlCalendar','wallTimeOption'=>'int']");
f("intlcal_set_skipped_wall_time_option", "['bool','cal'=>'IntlCalendar','wallTimeOption'=>'int']");
f("intlcal_set_time", "['bool','cal'=>'IntlCalendar','date'=>'float']");
f("intlcal_set_time_zone", "['bool','cal'=>'IntlCalendar','timeZone'=>'mixed']");
f("intlcal_to_date_time", "['DateTime','cal'=>'IntlCalendar']");
f("IntlChar::charAge", "['array','char'=>'int|string']");
f("IntlChar::charFromName", "['int','name'=>'string','namechoice'=>'int']");
f("IntlChar::charName", "['string','char'=>'int|string','namechoice'=>'int']");
f("IntlChar::digit", "['int','char'=>'int|string','radix'=>'int']");
f("IntlChar::enumCharTypes", "['','cb'=>'callable']");
f("IntlChar::foldCase", "['int|string','char'=>'int|string','options'=>'int']");
f("IntlChar::forDigit", "['int','digit'=>'int','radix'=>'int']");
f("IntlChar::getBlockCode", "['int','char'=>'int|string']");
f("IntlChar::getFC_NFKC_Closure", "['string','char'=>'int|string']");
f("IntlChar::getIntPropertyMinValue", "['int','property'=>'int']");
f("IntlChar::getIntPropertyMxValue", "['int','property'=>'int']");
f("IntlChar::getIntPropertyValue", "['int','char'=>'int|string','property'=>'int']");
f("IntlChar::getNumericValue", "['float','char'=>'int|string']");
f("IntlChar::getPropertyEnum", "['int','alias'=>'string']");
f("IntlChar::getPropertyName", "['string','property'=>'int','namechoice'=>'int']");
f("IntlChar::getPropertyValueEnum", "['int','property'=>'int','name'=>'string']");
f("IntlChar::getPropertyValueName", "['string','prop'=>'int','val'=>'int','namechoice'=>'int']");
f("IntlChar::getUnicodeVersion", "['array']");
f("IntlChar::hasBinaryProperty", "['bool','char'=>'int|string','property'=>'int']");
f("IntlCodePointBreakIterator::getLastCodePoint", "['']");
f("IntlDateFormatter::__construct", "['IntlDateFormatter','locale'=>'string','datetype'=>'int','timetype'=>'int','timezone='=>'int','calendar='=>'int|IntlCalendar','pattern='=>'string']");
f("IntlDateFormatter::create", "['IntlDateFormatter','locale'=>'string','datetype'=>'int','timetype'=>'int','timezone='=>'int','calendar='=>'int|IntlCalendar','pattern='=>'string']");
f("IntlDateFormatter::formatObject", "['string','any'=>'any','format='=>'mixed','locale='=>'string']");
f("IntlDateFormatter::format", "['string','args'=>'']");
f("IntlDateFormatter::getCalendar", "['int']");
f("IntlDateFormatter::getCalendarObject", "['IntlCalendar']");
f("IntlDateFormatter::getDateType", "['int']");
f("IntlDateFormatter::getErrorCode", "['int']");
f("IntlDateFormatter::getErrorMessage", "['string']");
f("IntlDateFormatter::getLocale", "['string']");
f("IntlDateFormatter::getPattern", "['string']");
f("IntlDateFormatter::getTimeType", "['int']");
f("IntlDateFormatter::getTimeZoneId", "['string']");
f("IntlDateFormatter::getTimeZone", "['IntlTimeZone']");
f("IntlDateFormatter::isLenient", "['bool']");
f("IntlDateFormatter::localtime", "['array','text_to_parse'=>'string','parse_pos='=>'int']");
f("IntlDateFormatter::parse", "['int','text_to_parse'=>'string','parse_pos='=>'int']");
f("IntlDateFormatter::setCalendar", "['bool','calendar'=>'']");
f("IntlDateFormatter::setLenient", "['bool','lenient'=>'bool']");
f("IntlDateFormatter::setPattern", "['bool','pattern'=>'string']");
f("IntlDateFormatter::setTimeZone", "['bool','timezone'=>'']");
f("IntlDateFormatter::setTimeZoneId", "['bool','zone'=>'string','fmt='=>'intldateformatter']");
f("intl_error_name", "['string','error_code'=>'int']");
f("intl_get_error_code", "['int']");
f("intl_get_error_message", "['string']");
f("intl_is_failure", "['bool','error_code'=>'int']");
f("IntlIterator::current", "['']");
f("IntlIterator::key", "['']");
f("IntlIterator::next", "['']");
f("IntlIterator::rewind", "['']");
f("IntlIterator::valid", "['']");
f("IntlPartsIterator::getBreakIterator", "['']");
f("IntlRuleBasedBreakIterator::__construct", "['','rules'=>'string','areCompiled='=>'string']");
f("IntlRuleBasedBreakIterator::getBinaryRules", "['']");
f("IntlRuleBasedBreakIterator::getRules", "['']");
f("IntlRuleBasedBreakIterator::getRuleStatus", "['']");
f("IntlRuleBasedBreakIterator::getRuleStatusVec", "['']");
f("IntlTimeZone::countEquivalentIDs", "['int','zoneId'=>'string']");
f("IntlTimeZone::createDefault", "['IntlTimeZone']");
f("IntlTimeZone::createEnumeration", "['IntlIterator','countryOrRawOffset='=>'mixed']");
f("IntlTimeZone::createTimeZone", "['IntlTimeZone','zoneId'=>'string']");
f("IntlTimeZone::fromDateTimeZone", "['IntlTimeZone','zoneId'=>'DateTimeZone']");
f("IntlTimeZone::getCanonicalID", "['string','zoneId'=>'string','&isSystemID='=>'bool']");
f("IntlTimeZone::getDisplayName", "['string','isDaylight='=>'bool','style='=>'int','locale='=>'string']");
f("IntlTimeZone::getDSTSavings", "['int']");
f("IntlTimeZone::getEquivalentID", "['string','zoneId'=>'string','index'=>'int']");
f("IntlTimeZone::getErrorCode", "['int']");
f("IntlTimeZone::getErrorMessage", "['string']");
f("IntlTimeZone::getGMT", "['IntlTimeZone']");
f("IntlTimeZone::getID", "['string']");
f("IntlTimeZone::getOffset", "['int','date'=>'float','local'=>'bool','&rawOffset'=>'int','&dstOffset'=>'int']");
f("IntlTimeZone::getRawOffset", "['int']");
f("IntlTimeZone::getTZDataVersion", "['string']");
f("IntlTimeZone::hasSameRules", "['bool','otherTimeZone'=>'IntlTimeZone']");
f("IntlTimeZone::toDateTimeZone", "['DateTimeZone']");
f("IntlTimeZone::useDaylightTime", "['bool']");
f("intval", "['int','var'=>'','base='=>'int']");
f("InvalidArgumentException::__clone", "['Throwable|InvalidArgumentException']");
f("InvalidArgumentException::__construct", "['InvalidArgumentException','message='=>'string','code='=>'int','previous='=>'Throwable|InvalidArgumentException|null']");
f("InvalidArgumentException::getCode", "['int']");
f("InvalidArgumentException::getFile", "['string']");
f("InvalidArgumentException::getLine", "['int']");
f("InvalidArgumentException::getMessage", "['string']");
f("InvalidArgumentException::getPrevious", "['Throwable|InvalidArgumentException']");
f("InvalidArgumentException::getTrace", "['array']");
f("InvalidArgumentException::getTraceAsString", "['string']");
f("InvalidArgumentException::__toString", "['string']");
f("ip2long", "['int|false','ip_address'=>'string']");
f("iptcembed", "['array','iptcdata'=>'string','jpeg_file_name'=>'string','spool='=>'int']");
f("iptcparse", "['array|false','iptcdata'=>'string']");
f("is_a", "['bool','object_or_string'=>'','class_name'=>'string','allow_string='=>'bool']");
f("is_array", "['bool','var'=>'']");
f("is_bool", "['bool','var'=>'']");
f("is_callable", "['bool','var'=>'','syntax_only='=>'bool','&callable_name='=>'string']");
f("is_dir", "['bool','filename'=>'string']");
f("is_double", "['bool','var'=>'']");
f("is_executable", "['bool','filename'=>'string']");
f("is_file", "['bool','filename'=>'string']");
f("is_finite", "['bool','val'=>'float']");
f("is_float", "['bool','var'=>'']");
f("is_infinite", "['bool','val'=>'float']");
f("is_int", "['bool','var'=>'']");
f("is_integer", "['bool','var'=>'']");
f("is_link", "['bool','filename'=>'string']");
f("is_long", "['bool','var'=>'']");
f("is_nan", "['bool','val'=>'float']");
f("is_null", "['bool','var'=>'']");
f("is_numeric", "['bool','value'=>'']");
f("is_object", "['bool','var'=>'']");
f("is_readable", "['bool','filename'=>'string']");
f("is_real", "['bool','var'=>'']");
f("is_resource", "['bool','var'=>'']");
f("is_scalar", "['bool','value'=>'']");
//f("'isset", "['bool','var='=>'','=='=>'...vars=']");
f("is_soap_fault", "['bool','any'=>'']");
f("is_string", "['bool','var'=>'']");
f("is_subclass_of", "['bool','object_or_string'=>'','class_name'=>'string','allow_string='=>'bool']");
f("is_tainted", "['bool','string'=>'string']");
f("is_uploaded_file", "['bool','path'=>'string']");
f("is_writable", "['bool','filename'=>'string']");
f("IteratorAggregate::getIterator", "['Traversable']");
f("iterator_apply", "['int','it'=>'traversable','function'=>'callable','params='=>'array']");
f("iterator_count", "['int','it'=>'traversable']");
f("Iterator::current", "['mixed']");
f("IteratorIterator::__construct", "['IteratorIterator','it'=>'traversable']");
f("IteratorIterator::current", "['']");
f("IteratorIterator::getInnerIterator", "['Traversable']");
f("IteratorIterator::key", "['']");
f("IteratorIterator::next", "['']");
f("IteratorIterator::rewind", "['']");
f("IteratorIterator::valid", "['bool']");
f("Iterator::key", "['scalar']");
f("Iterator::next", "['void']");
f("Iterator::rewind", "['void']");
f("iterator_to_array", "['array','it'=>'traversable','use_keys='=>'bool']");
f("Iterator::valid", "['bool']");
f("java_last_exception_clear", "['']");
f("java_last_exception_get", "['any']");
f("jddayofweek", "['','juliandaycount'=>'int','mode'=>'int']");
f("JDDayOfWeek", "['','julianday'=>'int','mode='=>'int']");
f("jdmonthname", "['string','juliandaycount'=>'int','mode'=>'int']");
f("JDMonthName", "['string','julianday'=>'int','mode'=>'int']");
f("jdtofrench", "['string','juliandaycount'=>'int']");
f("JDToFrench", "['string','juliandaycount'=>'int']");
f("jdtogregorian", "['string','juliandaycount'=>'int']");
f("JDToGregorian", "['string','julianday'=>'int']");
f("jdtojewish", "['string','juliandaycount'=>'int','hebrew='=>'bool','fl='=>'int']");
f("jdtojulian", "['string','juliandaycount'=>'int']");
f("JDToJulian", "['string','julianday'=>'int']");
f("jdtounix", "['int|bool','jday'=>'int']");
f("jewishtojd", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("JewishToJD", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("join\\'1", "['string','pieces'=>'array']");
f("join", "['string','glue'=>'string','pieces'=>'array']");
f("jpeg2wbmp", "['bool','jpegname'=>'string','wbmpname'=>'string','dest_height'=>'int','dest_width'=>'int','threshold'=>'int']");
f("json_decode", "['mixed','json'=>'string','assoc='=>'bool','depth='=>'int','options='=>'int']");
f("json_encode", "['string','data'=>'','options='=>'int','depth='=>'int']");
f("json_last_error", "['int']");
f("json_last_error_msg", "['string']");
f("JsonSerializable::jsonSerialize", "['mixed']");
f("Judy::byCount", "['int','nth_index'=>'int']");
f("Judy::__construct", "['Judy','judy_type'=>'int']");
f("Judy::count", "['int','index_start='=>'int','index_end='=>'int']");
f("Judy::__destruct", "['']");
f("Judy::firstEmpty", "['int','index='=>'']");
f("Judy::first", "['','index='=>'']");
f("Judy::free", "['int']");
f("Judy::getType", "['int']");
f("Judy::lastEmpty", "['int','index='=>'int']");
f("Judy::last", "['','index='=>'string']");
f("Judy::memoryUsage", "['int']");
f("Judy::nextEmpty", "['int','index'=>'int']");
f("Judy::next", "['','index'=>'']");
f("Judy::offsetExists", "['bool','offset'=>'']");
f("Judy::offsetGet", "['','offset'=>'']");
f("Judy::offsetSet", "['bool','offset'=>'','value'=>'']");
f("Judy::offsetUnset", "['bool','offset'=>'']");
f("Judy::prevEmpty", "['int','index'=>'']");
f("Judy::prev", "['','index'=>'']");
f("Judy::size", "['']");
f("judy_type", "['int','array'=>'judy']");
f("judy_version", "['string']");
f("juliantojd", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("JulianToJD", "['int','month'=>'int','day'=>'int','year'=>'int']");
f("kadm5_chpass_principal", "['bool','handle'=>'','principal'=>'string','password'=>'string']");
f("kadm5_create_principal", "['bool','handle'=>'','principal'=>'string','password='=>'string','options='=>'array']");
f("kadm5_delete_principal", "['bool','handle'=>'','principal'=>'string']");
f("kadm5_destroy", "['bool','handle'=>'']");
f("kadm5_flush", "['bool','handle'=>'']");
f("kadm5_get_policies", "['array','handle'=>'']");
f("kadm5_get_principal", "['array','handle'=>'','principal'=>'string']");
f("kadm5_get_principals", "['array','handle'=>'']");
f("kadm5_init_with_password", "['resource','admin_server'=>'string','realm'=>'string','principal'=>'string','password'=>'string']");
f("kadm5_modify_principal", "['bool','handle'=>'','principal'=>'string','options'=>'array']");
f("key", "['','array_arg'=>'array']");
f("krsort", "['bool','array_arg'=>'array','sort_flags='=>'int']");
f("ksort", "['bool','array_arg'=>'array','sort_flags='=>'int']");
f("KTaglib_ID3v2_AttachedPictureFrame::getDescription", "['string']");
f("KTaglib_ID3v2_AttachedPictureFrame::getMimeType", "['string']");
f("KTaglib_ID3v2_AttachedPictureFrame::getType", "['int']");
f("KTaglib_ID3v2_AttachedPictureFrame::savePicture", "['bool','filename'=>'string']");
f("KTaglib_ID3v2_AttachedPictureFrame::setMimeType", "['string','type'=>'string']");
f("KTaglib_ID3v2_AttachedPictureFrame::setPicture", "['','filename'=>'string']");
f("KTaglib_ID3v2_AttachedPictureFrame::setType", "['','type'=>'int']");
f("KTaglib_ID3v2_Frame::getSize", "['int']");
f("KTaglib_ID3v2_Frame::__toString", "['string']");
f("KTaglib_ID3v2_Tag::addFrame", "['bool','frame'=>'ktaglib_id3v2_frame']");
f("KTaglib_ID3v2_Tag::getFrameList", "['array']");
f("KTaglib_MPEG_AudioProperties::getBitrate", "['int']");
f("KTaglib_MPEG_AudioProperties::getChannels", "['int']");
f("KTaglib_MPEG_AudioProperties::getLayer", "['int']");
f("KTaglib_MPEG_AudioProperties::getLength", "['int']");
f("KTaglib_MPEG_AudioProperties::getSampleBitrate", "['int']");
f("KTaglib_MPEG_AudioProperties::getVersion", "['int']");
f("KTaglib_MPEG_AudioProperties::isCopyrighted", "['bool']");
f("KTaglib_MPEG_AudioProperties::isOriginal", "['bool']");
f("KTaglib_MPEG_AudioProperties::isProtectionEnabled", "['bool']");
f("KTaglib_MPEG_File::getAudioProperties", "['KTaglib_MPEG_File']");
f("KTaglib_MPEG_File::getID3v1Tag", "['KTaglib_ID3v1_Tag','create='=>'bool']");
f("KTaglib_MPEG_File::getID3v2Tag", "['KTaglib_ID3v2_Tag','create='=>'bool']");
f("KTaglib_Tag::getAlbum", "['string']");
f("KTaglib_Tag::getArtist", "['string']");
f("KTaglib_Tag::getComment", "['string']");
f("KTaglib_Tag::getGenre", "['string']");
f("KTaglib_Tag::getTitle", "['string']");
f("KTaglib_Tag::getTrack", "['int']");
f("KTaglib_Tag::getYear", "['int']");
f("KTaglib_Tag::isEmpty", "['bool']");
f("Lapack::eigenValues", "['array','a'=>'array','left='=>'array','right='=>'array']");
f("Lapack::identity", "['array','n'=>'int']");
f("Lapack::leastSquaresByFactorisation", "['array','a'=>'array','b'=>'array']");
f("Lapack::leastSquaresBySVD", "['array','a'=>'array','b'=>'array']");
f("Lapack::pseudoInverse", "['array','a'=>'array']");
f("Lapack::singularValues", "['array','a'=>'array']");
f("Lapack::solveLinearEquation", "['array','a'=>'array','b'=>'array']");
f("lcfirst", "['string','str'=>'string']");
f("lcg_value", "['float']");
f("lchgrp", "['bool','filename'=>'string','group'=>'string|int']");
f("lchown", "['bool','filename'=>'string','user'=>'string|int']");
f("ldap_8859_to_t61", "['string','value'=>'string']");
f("ldap_add", "['bool','link'=>'','dn'=>'string','entry'=>'array']");
f("ldap_bind", "['bool','link'=>'','dn='=>'string','password='=>'string']");
f("ldap_compare", "['bool','link'=>'','dn'=>'string','attr'=>'string','value'=>'string']");
f("ldap_connect", "['resource','host='=>'string','port='=>'int','wallet='=>'string','wallet_passwd='=>'string','authmode='=>'int']");
f("ldap_control_paged_result", "['','link'=>'','pagesize'=>'int','iscritical'=>'bool','cookie'=>'string']");
f("ldap_control_paged_result_response", "['bool','link'=>'','result'=>'','&cookie'=>'string','&estimated'=>'int']");
f("ldap_count_entries", "['int','link'=>'','result'=>'']");
f("ldap_delete", "['bool','link'=>'','dn'=>'string']");
f("ldap_dn2ufn", "['string','dn'=>'string']");
f("ldap_err2str", "['string','errno'=>'int']");
f("ldap_errno", "['int','link'=>'']");
f("ldap_error", "['string','link'=>'']");
f("ldap_escape", "['string','value'=>'string','ignore='=>'string','flags='=>'int']");
f("ldap_explode_dn", "['array','dn'=>'string','with_attrib'=>'int']");
f("ldap_first_attribute", "['string','link'=>'','result_entry'=>'']");
f("ldap_first_entry", "['resource','link'=>'','result'=>'']");
f("ldap_first_reference", "['resource','link'=>'','result'=>'']");
f("ldap_free_result", "['bool','result'=>'']");
f("ldap_get_attributes", "['array','link'=>'','result_entry'=>'']");
f("ldap_get_dn", "['string','link'=>'','result_entry'=>'']");
f("ldap_get_entries", "['array','link'=>'','result'=>'']");
f("ldap_get_option", "['bool','link'=>'','option'=>'int','retval'=>'']");
f("ldap_get_values", "['array','link_identifier'=>'','result_entry_identifier'=>'','attribute'=>'string']");
f("ldap_get_values_len", "['array','link'=>'','result_entry'=>'','attribute'=>'string']");
f("ldap_list", "['resource','link'=>'resource|array','base_dn'=>'string','filter'=>'string','attrs='=>'array','attrsonly='=>'int','sizelimit='=>'int','timelimit='=>'int','deref='=>'int']");
f("ldap_mod_add", "['bool','link'=>'','dn'=>'string','entry'=>'array']");
f("ldap_mod_del", "['bool','link'=>'','dn'=>'string','entry'=>'array']");
f("ldap_modify_batch", "['bool','link'=>'','dn'=>'string','modifs'=>'array']");
f("ldap_modify", "['bool','link_identifier'=>'','dn'=>'string','entry'=>'array']");
f("ldap_mod_replace", "['bool','link'=>'','dn'=>'string','entry'=>'array']");
f("ldap_next_attribute", "['string','link'=>'','result_entry'=>'']");
f("ldap_next_entry", "['resource','link'=>'','result_entry'=>'']");
f("ldap_next_reference", "['resource','link'=>'','reference_entry'=>'']");
f("ldap_parse_reference", "['bool','link'=>'','reference_entry'=>'','referrals'=>'array']");
f("ldap_parse_result", "['bool','link'=>'','result'=>'','errcode'=>'int','matcheddn='=>'string','errmsg='=>'string','referrals='=>'array']");
f("ldap_read", "['resource','link'=>'resource|array','base_dn'=>'string','filter'=>'string','attrs='=>'array','attrsonly='=>'int','sizelimit='=>'int','timelimit='=>'int','deref='=>'int']");
f("ldap_rename", "['bool','link'=>'','dn'=>'string','newrdn'=>'string','newparent'=>'string','deleteoldrdn'=>'bool']");
f("ldap_sasl_bind", "['bool','link'=>'','binddn='=>'string','password='=>'string','sasl_mech='=>'string','sasl_realm='=>'string','sasl_authc_id='=>'string','sasl_authz_id='=>'string','props='=>'string']");
f("ldap_search", "['resource','link'=>'resource|array','base_dn'=>'string','filter'=>'string','attrs='=>'array','attrsonly='=>'int','sizelimit='=>'int','timelimit='=>'int','deref='=>'int']");
f("ldap_set_option", "['bool','link'=>'','option'=>'int','newval'=>'']");
f("ldap_set_rebind_proc", "['bool','link'=>'','callback'=>'string']");
f("ldap_sort", "['bool','link'=>'','result'=>'','sortfilter'=>'string']");
f("ldap_start_tls", "['bool','link'=>'']");
f("ldap_t61_to_8859", "['string','value'=>'string']");
f("ldap_unbind", "['bool','link'=>'']");
f("leak", "['','num_bytes'=>'int']");
f("leak_variable", "['','variable'=>'','leak_data'=>'bool']");
f("LengthException::__clone", "['Throwable|LengthException']");
f("LengthException::__construct", "['LengthException','message='=>'string','code='=>'int','previous='=>'Throwable|LengthException|null']");
f("LengthException::getCode", "['int']");
f("LengthException::getFile", "['string']");
f("LengthException::getLine", "['int']");
f("LengthException::getMessage", "['string']");
f("LengthException::getPrevious", "['Throwable|LengthException']");
f("LengthException::getTrace", "['array']");
f("LengthException::getTraceAsString", "['string']");
f("LengthException::__toString", "['string']");
f("levenshtein\\'1", "['int','str1'=>'string','str2'=>'string','cost_ins'=>'int','cost_rep'=>'int','cost_del'=>'int']");
f("levenshtein", "['int','str1'=>'string','str2'=>'string']");
f("libxml_clear_errors", "['']");
f("libxml_disable_entity_loader", "['bool','disable='=>'bool']");
f("libxml_get_errors", "['libXMLError[]']");
f("libxml_get_last_error", "['any']");
f("libxml_set_external_entity_loader", "['','resolver_function'=>'callable']");
f("libxml_set_streams_context", "['','streams_context'=>'']");
f("libxml_use_internal_errors", "['bool','use_errors='=>'bool']");
f("LimitIterator::__construct", "['Iterator','offset='=>'int','count='=>'int']");
f("LimitIterator::current", "['']");
f("LimitIterator::getInnerIterator", "['Iterator']");
f("LimitIterator::getPosition", "['int']");
f("LimitIterator::key", "['']");
f("LimitIterator::next", "['']");
f("LimitIterator::rewind", "['']");
f("LimitIterator::seek", "['','position'=>'int']");
f("LimitIterator::valid", "['bool']");
f("linkinfo", "['int','filename'=>'string']");
f("link", "['int','target'=>'string','link'=>'string']");
f("list", "['array','...varname'=>'']");
f("litespeed_request_headers", "['array']");
f("litespeed_response_headers", "['array']");
f("locale_accept_from_http", "['string|bool','header'=>'string']");
f("Locale::acceptFromHttp", "['string|bool','header'=>'string']");
f("Locale::canonicalize", "['string','locale'=>'string']");
f("Locale::composeLocale", "['string','subtags'=>'array']");
f("locale_compose", "['string|bool','subtags'=>'array']");
f("localeconv", "['array']");
f("locale_filter_matches", "['bool','langtag'=>'string','locale'=>'string','canonicalize='=>'bool']");
f("Locale::filterMatches", "['bool','langtag'=>'string','locale'=>'string','canonicalize='=>'bool']");
f("locale_get_all_variants", "['array','locale'=>'string']");
f("Locale::getAllVariants", "['array','locale'=>'string']");
f("locale_get_default", "['string']");
f("Locale::getDefault", "['string']");
f("locale_get_display_language", "['string','locale'=>'string','in_locale='=>'string']");
f("Locale::getDisplayLanguage", "['string','locale'=>'string','in_locale='=>'string']");
f("locale_get_display_name", "['string','locale'=>'string','in_locale='=>'string']");
f("Locale::getDisplayName", "['string','locale'=>'string','in_locale='=>'string']");
f("locale_get_display_region", "['string','locale'=>'string','in_locale='=>'string']");
f("Locale::getDisplayRegion", "['string','locale'=>'string','in_locale='=>'string']");
f("locale_get_display_script", "['string','locale'=>'string','in_locale='=>'string']");
f("Locale::getDisplayScript", "['string','locale'=>'string','in_locale='=>'string']");
f("locale_get_display_variant", "['string','locale'=>'string','in_locale='=>'string']");
f("Locale::getDisplayVariant", "['string','locale'=>'string','in_locale='=>'string']");
f("locale_get_keywords", "['array|bool','locale'=>'string']");
f("Locale::getKeywords", "['array|bool','locale'=>'string']");
f("locale_get_primary_language", "['string','locale'=>'string']");
f("Locale::getPrimaryLanguage", "['string','locale'=>'string']");
f("locale_get_region", "['string','locale'=>'string']");
f("Locale::getRegion", "['string','locale'=>'string']");
f("locale_get_script", "['string','locale'=>'string']");
f("Locale::getScript", "['string','locale'=>'string']");
f("locale_lookup", "['string','langtag'=>'array','locale'=>'string','canonicalize='=>'bool','default='=>'string']");
f("Locale::lookup", "['string','langtag'=>'array','locale'=>'string','canonicalize='=>'bool','default='=>'string']");
f("locale_parse", "['array','locale'=>'string']");
f("Locale::parseLocale", "['array','locale'=>'string']");
f("locale_set_default", "['string|bool','locale'=>'string']");
f("Locale::setDefault", "['string|bool','locale'=>'string']");
f("localtime", "['array','timestamp='=>'int','associative_array='=>'bool']");
f("log10", "['float','number'=>'float']");
f("log1p", "['float','number'=>'float']");
f("log", "['float','number'=>'float','base='=>'float']");
f("LogicException::__clone", "['Throwable|LogicException']");
f("LogicException::__construct", "['LogicException','message='=>'string','code='=>'int','previous='=>'Throwable|LogicException|null']");
f("LogicException::getCode", "['int']");
f("LogicException::getFile", "['string']");
f("LogicException::getLine", "['int']");
f("LogicException::getMessage", "['string']");
f("LogicException::getPrevious", "['Throwable|LogicException']");
f("LogicException::getTrace", "['array']");
f("LogicException::getTraceAsString", "['string']");
f("LogicException::__toString", "['string']");
f("long2ip", "['string','proper_address'=>'int']");
f("lstat", "['array','filename'=>'string']");
f("ltrim", "['string','str'=>'string','character_mask='=>'string']");
f("Lua::assign", "['mixed','name'=>'string','value'=>'string']");
f("Lua::__call", "['mixed','lua_func'=>'callable','args='=>'array','use_self='=>'int']");
f("Lua::call", "['mixed','lua_func'=>'callable','args='=>'array','use_self='=>'int']");
f("LuaClosure::__invoke", "['void','arg'=>'mixed','...='=>'mixed']");
f("Lua::__construct", "['','lua_script_file'=>'string']");
f("Lua::eval", "['mixed','statements'=>'string']");
f("Lua::getVersion", "['string']");
f("Lua::include", "['mixed','file'=>'string']");
f("Lua::registerCallback", "['mixed','name'=>'string','function'=>'callable']");
f("lzf_compress", "['string','data'=>'string']");
f("lzf_decompress", "['string','data'=>'string']");
f("lzf_optimized_for", "['int']");
f("mail", "['int|bool','to'=>'string','subject'=>'string','message'=>'string','additional_headers='=>'string','additional_parameters='=>'string']");
f("mailparse_determine_best_xfer_encoding", "['string','fp'=>'']");
f("mailparse_msg_create", "['resource']");
f("mailparse_msg_extract_part_file", "['string','mimemail'=>'','filename'=>'','callbackfunc='=>'callable']");
f("mailparse_msg_extract_part", "['','mimemail'=>'','msgbody'=>'string','callbackfunc='=>'callable']");
f("mailparse_msg_extract_whole_part_file", "['string','mimemail'=>'','filename'=>'string','callbackfunc='=>'callable']");
f("mailparse_msg_free", "['bool','mimemail'=>'']");
f("mailparse_msg_get_part_data", "['array','mimemail'=>'']");
f("mailparse_msg_get_part", "['resource','mimemail'=>'','mimesection'=>'string']");
f("mailparse_msg_get_structure", "['array','mimemail'=>'']");
f("mailparse_msg_parse", "['bool','mimemail'=>'','data'=>'string']");
f("mailparse_msg_parse_file", "['resource','filename'=>'string']");
f("mailparse_rfc822_parse_addresses", "['array','addresses'=>'string']");
f("mailparse_stream_encode", "['bool','sourcefp'=>'','destfp'=>'','encoding'=>'string']");
f("mailparse_uudecode_all", "['array','fp'=>'']");
f("max\\'1", "['','arg1'=>'','arg2'=>'','...='=>'']");
f("max", "['','arg1'=>'array']");
f("maxdb_affected_rows", "['int','link'=>'']");
f("maxdb::affected_rows", "['int','link'=>'']");
f("maxdb_autocommit", "['bool','link'=>'','mode'=>'bool']");
f("maxdb::auto_commit", "['bool','link'=>'','mode'=>'bool']");
f("maxdb_change_user", "['bool','link'=>'','user'=>'string','password'=>'string','database'=>'string']");
f("maxdb::change_user", "['bool','link'=>'','user'=>'string','password'=>'string','database'=>'string']");
f("maxdb_character_set_name", "['string','link'=>'']");
f("maxdb::character_set_name", "['string','link'=>'']");
f("maxdb_close", "['bool','link'=>'']");
f("maxdb::close", "['bool','link'=>'']");
f("maxdb_commit", "['bool','link'=>'']");
f("maxdb::commit", "['bool','link'=>'']");
f("maxdb_connect_errno", "['int']");
f("maxdb_connect_error", "['string']");
f("maxdb_connect", "['resource','host='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string']");
f("maxdb::__construct", "['maxdb','host='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string']");
f("maxdb_data_seek", "['bool','result'=>'','offset'=>'int']");
f("maxdb_debug", "['','debug'=>'string']");
f("maxdb_disable_reads_from_master", "['','link'=>'']");
f("maxdb::disable_reads_from_master", "['','link'=>'']");
f("maxdb_disable_rpl_parse", "['bool','link'=>'']");
f("maxdb_dump_debug_info", "['bool','link'=>'']");
f("maxdb_embedded_connect", "['resource','dbname='=>'string']");
f("maxdb_enable_reads_from_master", "['bool','link'=>'']");
f("maxdb_enable_rpl_parse", "['bool','link'=>'']");
f("maxdb_errno", "['int','link'=>'']");
f("maxdb::errno", "['int','link'=>'']");
f("maxdb_error", "['string','link'=>'']");
f("maxdb::error", "['string','link'=>'']");
f("maxdb_fetch_array", "['','result'=>'','resulttype='=>'int']");
f("maxdb_fetch_assoc", "['array','result'=>'']");
f("maxdb_fetch_field_direct", "['','result'=>'','fieldnr'=>'int']");
f("maxdb_fetch_field", "['','result'=>'']");
f("maxdb_fetch_fields", "['','result'=>'']");
f("maxdb_fetch_lengths", "['array','result'=>'']");
f("maxdb_fetch_object", "['any','result'=>'any']");
f("maxdb_fetch_row", "['','result'=>'']");
f("maxdb_field_count", "['int','link'=>'']");
f("maxdb::field_count", "['int','link'=>'']");
f("maxdb_field_seek", "['bool','result'=>'','fieldnr'=>'int']");
f("maxdb_field_tell", "['int','result'=>'']");
f("maxdb_free_result", "['','result'=>'']");
f("maxdb_get_client_info", "['string']");
f("maxdb_get_client_version", "['int']");
f("maxdb_get_host_info", "['string','link'=>'']");
f("maxdb::get_host_info", "['string','link'=>'']");
f("maxdb_get_proto_info", "['string','link'=>'']");
f("maxdb_get_server_info", "['string','link'=>'']");
f("maxdb_get_server_version", "['int','link'=>'']");
f("maxdb_info", "['string','link'=>'']");
f("maxdb::info", "['string','link'=>'']");
f("maxdb_init", "['resource']");
f("maxdb_insert_id", "['','link'=>'']");
f("maxdb::insert_id", "['','link'=>'']");
f("maxdb_kill", "['bool','link'=>'','processid'=>'int']");
f("maxdb::kill", "['bool','link'=>'','processid'=>'int']");
f("maxdb_master_query", "['bool','link'=>'','query'=>'string']");
f("maxdb_more_results", "['bool','link'=>'']");
f("maxdb::more_results", "['bool','link'=>'']");
f("maxdb_multi_query", "['bool','link'=>'','query'=>'string']");
f("maxdb::multi_query", "['bool','link'=>'','query'=>'string']");
f("maxdb_next_result", "['bool','link'=>'']");
f("maxdb::next_result", "['bool','link'=>'']");
f("maxdb_num_fields", "['int','result'=>'']");
f("maxdb_num_rows", "['int','result'=>'']");
f("maxdb::num_rows", "['int','result'=>'']");
f("maxdb_options", "['bool','link'=>'','option'=>'int','value'=>'']");
f("maxdb::options", "['bool','link'=>'','option'=>'int','value'=>'']");
f("maxdb_ping", "['bool','link'=>'']");
f("maxdb::ping", "['bool','link'=>'']");
f("maxdb_prepare", "['maxdb_stmt','link'=>'','query'=>'string']");
f("maxdb::prepare", "['maxdb_stmt','link'=>'','query'=>'string']");
f("maxdb::protocol_version", "['string','link'=>'']");
f("maxdb_query", "['','link'=>'','query'=>'string','resultmode='=>'int']");
f("maxdb::query", "['','link'=>'','query'=>'string','resultmode='=>'int']");
f("maxdb_real_connect", "['bool','link'=>'','hostname='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string']");
f("maxdb::real_connect", "['bool','link'=>'','hostname='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string']");
f("maxdb_real_escape_string", "['string','link'=>'','escapestr'=>'string']");
f("maxdb::real_escape_string", "['string','link'=>'','escapestr'=>'string']");
f("maxdb_real_query", "['bool','link'=>'','query'=>'string']");
f("maxdb::real_query", "['bool','link'=>'','query'=>'string']");
f("maxdb_report", "['bool','flags'=>'int']");
f("maxdb_result::current_field", "['int','result'=>'']");
f("maxdb_result::data_seek", "['bool','result'=>'','offset'=>'int']");
f("maxdb_result::fetch_array", "['','result'=>'','resulttype='=>'int']");
f("maxdb_result::fetch_assoc", "['array','result'=>'']");
f("maxdb_result::fetch_field_direct", "['','result'=>'','fieldnr'=>'int']");
f("maxdb_result::fetch_field", "['','result'=>'']");
f("maxdb_result::fetch_fields", "['','result'=>'']");
f("maxdb_result::fetch_object", "['any','result'=>'any']");
f("maxdb_result::fetch_row", "['','result'=>'']");
f("maxdb_result::field_count", "['int','result'=>'']");
f("maxdb_result::field_seek", "['bool','result'=>'','fieldnr'=>'int']");
f("maxdb_result::free", "['','result'=>'']");
f("maxdb_result::lengths", "['array','result'=>'']");
f("maxdb_rollback", "['bool','link'=>'']");
f("maxdb::rollback", "['bool','link'=>'']");
f("maxdb_rpl_parse_enabled", "['int','link'=>'']");
f("maxdb_rpl_probe", "['bool','link'=>'']");
f("maxdb_rpl_query_type", "['int','link'=>'']");
f("maxdb::rpl_query_type", "['int','link'=>'']");
f("maxdb_select_db", "['bool','link'=>'','dbname'=>'string']");
f("maxdb::select_db", "['bool','link'=>'','dbname'=>'string']");
f("maxdb_send_query", "['bool','link'=>'','query'=>'string']");
f("maxdb::send_query", "['bool','link'=>'','query'=>'string']");
f("maxdb_server_end", "['']");
f("maxdb::server_info", "['string','link'=>'']");
f("maxdb_server_init", "['bool','server='=>'array','groups='=>'array']");
f("maxdb::server_version", "['int','link'=>'']");
f("maxdb_sqlstate", "['string','link'=>'']");
f("maxdb::sqlstate", "['string','link'=>'']");
f("maxdb_ssl_set", "['bool','link'=>'','key'=>'string','cert'=>'string','ca'=>'string','capath'=>'string','cipher'=>'string']");
f("maxdb::ssl_set", "['bool','link'=>'','key'=>'string','cert'=>'string','ca'=>'string','capath'=>'string','cipher'=>'string']");
f("maxdb_stat", "['string','link'=>'']");
f("maxdb::stat", "['string','link'=>'']");
f("maxdb_stmt_affected_rows", "['int','stmt'=>'']");
f("maxdb_stmt::affected_rows", "['int','stmt'=>'']");
f("maxdb_stmt::bind_param\\'1", "['bool','stmt'=>'','types'=>'string','&var'=>'array']");
f("maxdb_stmt::bind_param", "['bool','stmt'=>'','types'=>'string','&...var'=>'']");
f("maxdb_stmt_bind_param", "['bool','stmt'=>'','types'=>'string','var1'=>'','...='=>'','var='=>'array']");
f("maxdb_stmt_bind_result", "['bool','stmt'=>'','var1'=>'','...='=>'']");
f("maxdb_stmt::bind_result", "['bool','stmt'=>'','&var1'=>'','&...vars='=>'']");
f("maxdb_stmt_close", "['bool','stmt'=>'']");
f("maxdb_stmt::close", "['bool','stmt'=>'']");
f("maxdb_stmt_close_long_data", "['bool','stmt'=>'','param_nr'=>'int']");
f("maxdb_stmt::close_long_data", "['bool','stmt'=>'','param_nr'=>'int']");
f("maxdb_stmt_data_seek", "['bool','statement'=>'','offset'=>'int']");
f("maxdb_stmt::data_seek", "['bool','statement'=>'','offset'=>'int']");
f("maxdb_stmt_errno", "['int','stmt'=>'']");
f("maxdb_stmt::errno", "['int','stmt'=>'']");
f("maxdb_stmt_error", "['string','stmt'=>'']");
f("maxdb_stmt::error", "['string','stmt'=>'']");
f("maxdb_stmt_execute", "['bool','stmt'=>'']");
f("maxdb_stmt::execute", "['bool','stmt'=>'']");
f("maxdb_stmt_fetch", "['bool','stmt'=>'']");
f("maxdb_stmt::fetch", "['bool','stmt'=>'']");
f("maxdb_stmt_free_result", "['','stmt'=>'']");
f("maxdb_stmt::free_result", "['','stmt'=>'']");
f("maxdb_stmt_init", "['any','link'=>'']");
f("maxdb::stmt_init", "['any','link'=>'']");
f("maxdb_stmt_num_rows", "['int','stmt'=>'']");
f("maxdb_stmt::num_rows", "['int','stmt'=>'']");
f("maxdb_stmt_param_count", "['int','stmt'=>'']");
f("maxdb_stmt::param_count", "['int','stmt'=>'']");
f("maxdb_stmt_prepare", "['','stmt'=>'','query'=>'string']");
f("maxdb_stmt::prepare", "['','stmt'=>'','query'=>'string']");
f("maxdb_stmt_reset", "['bool','stmt'=>'']");
f("maxdb_stmt::reset", "['bool','stmt'=>'']");
f("maxdb_stmt_result_metadata", "['resource','stmt'=>'']");
f("maxdb_stmt::result_metadata", "['resource','stmt'=>'']");
f("maxdb_stmt_send_long_data", "['bool','stmt'=>'','param_nr'=>'int','data'=>'string']");
f("maxdb_stmt::send_long_data", "['bool','stmt'=>'','param_nr'=>'int','data'=>'string']");
f("maxdb_stmt_sqlstate", "['string','stmt'=>'']");
f("maxdb_stmt::stmt_send_long_data", "['bool','param_nr'=>'int','data'=>'string']");
f("maxdb_stmt::store_result", "['bool']");
f("maxdb_stmt_store_result", "['bool','stmt'=>'']");
f("maxdb_store_result", "['bool','link'=>'']");
f("maxdb::store_result", "['bool','link'=>'']");
f("maxdb_thread_id", "['int','link'=>'']");
f("maxdb::thread_id", "['int','link'=>'']");
f("maxdb_thread_safe", "['bool']");
f("maxdb_use_result", "['resource','link'=>'']");
f("maxdb::use_result", "['resource','link'=>'']");
f("maxdb_warning_count", "['int','link'=>'']");
f("maxdb::warning_count", "['int','link'=>'']");
f("mb_check_encoding", "['bool','var='=>'string','encoding='=>'string']");
f("mb_convert_case", "['string','sourcestring'=>'string','mode'=>'int','encoding='=>'string']");
f("mb_convert_encoding", "['string','str'=>'string','to-encoding'=>'string','from-encoding='=>'']");
f("mb_convert_kana", "['string','str'=>'string','option='=>'string','encoding='=>'string']");
f("mb_convert_variables", "['string','to-encoding'=>'string','from-encoding'=>'array|string','vars'=>'string|array|object','...='=>'string|array|object']");
f("mb_decode_mimeheader", "['string','string'=>'string']");
f("mb_decode_numericentity", "['string','string'=>'string','convmap'=>'array','encoding'=>'string']");
f("mb_detect_encoding", "['string','str'=>'string','encoding_list='=>'','strict='=>'bool']");
f("mb_detect_order", "['bool|array','encoding-list='=>'']");
f("mb_encode_mimeheader", "['string','str'=>'string','charset='=>'string','transfer-encoding='=>'string','linefeed='=>'string','indent='=>'int']");
f("mb_encode_numericentity", "['string','string'=>'string','convmap'=>'array','encoding'=>'string','is_hex='=>'bool']");
f("mb_encoding_aliases", "['array','encoding'=>'string']");
f("mb_eregi", "['int','pattern'=>'string','string'=>'string','registers='=>'array']");
f("mb_ereg", "['int','pattern'=>'string','string'=>'string','registers='=>'array']");
f("mb_eregi_replace", "['string','pattern'=>'string','replacement'=>'string','string'=>'string','option='=>'string']");
f("mb_ereg_match", "['bool','pattern'=>'string','string'=>'string','option='=>'string']");
f("mb_ereg_replace_callback", "['string','pattern'=>'string','callback'=>'string','string'=>'string','option'=>'string']");
f("mb_ereg_replace", "['string','pattern'=>'string','replacement'=>'string','string'=>'string','option='=>'string']");
f("mb_ereg_search", "['bool','pattern='=>'string','option='=>'string']");
f("mb_ereg_search_getpos", "['int']");
f("mb_ereg_search_getregs", "['array|false']");
f("mb_ereg_search_init", "['bool','string'=>'string','pattern='=>'string','option='=>'string']");
f("mb_ereg_search_pos", "['array','pattern='=>'string','option='=>'string']");
f("mb_ereg_search_regs", "['array|false','pattern='=>'string','option='=>'string']");
f("mb_ereg_search_setpos", "['bool','position'=>'int']");
f("mb_get_info", "['','type='=>'string']");
f("mb_http_input", "['','type='=>'string']");
f("mb_http_output", "['string','encoding='=>'string']");
f("mb_internal_encoding", "['string','encoding='=>'string']");
f("mb_language", "['string','language='=>'string']");
f("mb_list_encodings", "['']");
f("mb_output_handler", "['string','contents'=>'string','status'=>'int']");
f("mb_parse_str", "['bool','encoded_string'=>'string','result='=>'array']");
f("mb_preferred_mime_name", "['string','encoding'=>'string']");
f("mb_regex_encoding", "['string','encoding='=>'string']");
f("mb_regex_set_options", "['string','options='=>'string']");
f("mb_send_mail", "['bool','to'=>'string','subject'=>'string','message'=>'string','additional_headers='=>'string','additional_parameter='=>'string']");
f("mb_split", "['array','pattern'=>'string','string'=>'string','limit='=>'int']");
f("mb_strcut", "['string','str'=>'string','start'=>'int','length='=>'int','encoding='=>'string']");
f("mb_strimwidth", "['string','str'=>'string','start'=>'int','width'=>'int','trimmarker='=>'string','encoding='=>'string']");
f("mb_stripos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int','encoding='=>'string']");
f("mb_stristr", "['string|false','haystack'=>'string','needle'=>'string','part='=>'bool','encoding='=>'string']");
f("mb_strlen", "['int|false','str'=>'string','encoding='=>'string']");
f("mb_strpos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int','encoding='=>'string']");
f("mb_strrchr", "['string|false','haystack'=>'string','needle'=>'string','part='=>'bool','encoding='=>'string']");
f("mb_strrichr", "['string|false','haystack'=>'string','needle'=>'string','part='=>'bool','encoding='=>'string']");
f("mb_strripos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int','encoding='=>'string']");
f("mb_strrpos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int','encoding='=>'string']");
f("mb_strstr", "['string|false','haystack'=>'string','needle'=>'string','part='=>'bool','encoding='=>'string']");
f("mb_strtolower", "['string','str'=>'string','encoding='=>'string']");
f("mb_strtoupper", "['string','str'=>'string','encoding='=>'string']");
f("mb_strwidth", "['int','str'=>'string','encoding='=>'string']");
f("mb_substitute_character", "['','substchar='=>'']");
f("mb_substr_count", "['int','haystack'=>'string','needle'=>'string','encoding='=>'string']");
f("mb_substr", "['string','str'=>'string','start'=>'int','length='=>'int|null','encoding='=>'string']");
f("m_checkstatus", "['int','conn'=>'','identifier'=>'int']");
f("m_completeauthorizations", "['int','conn'=>'','array'=>'int']");
f("m_connect", "['int','conn'=>'']");
f("m_connectionerror", "['string','conn'=>'']");
f("mcrypt_cbc", "['string','cipher'=>'string','key'=>'string','data'=>'string','mode'=>'int','iv='=>'string']");
f("mcrypt_cfb", "['string','cipher'=>'string','key'=>'string','data'=>'string','mode'=>'int','iv='=>'string']");
f("mcrypt_create_iv", "['string','size'=>'int','source='=>'int']");
f("mcrypt_decrypt", "['string','cipher'=>'string','key'=>'string','data'=>'string','mode'=>'string','iv='=>'string']");
f("mcrypt_ecb", "['string','cipher'=>'string','key'=>'string','data'=>'string','mode'=>'int','iv='=>'string']");
f("mcrypt_enc_get_algorithms_name", "['string','td'=>'']");
f("mcrypt_enc_get_block_size", "['int','td'=>'']");
f("mcrypt_enc_get_iv_size", "['int','td'=>'']");
f("mcrypt_enc_get_key_size", "['int','td'=>'']");
f("mcrypt_enc_get_modes_name", "['string','td'=>'']");
f("mcrypt_enc_get_supported_key_sizes", "['array','td'=>'']");
f("mcrypt_enc_is_block_algorithm", "['bool','td'=>'']");
f("mcrypt_enc_is_block_algorithm_mode", "['bool','td'=>'']");
f("mcrypt_enc_is_block_mode", "['bool','td'=>'']");
f("mcrypt_encrypt", "['string','cipher'=>'string','key'=>'string','data'=>'string','mode'=>'string','iv='=>'string']");
f("mcrypt_enc_self_test", "['int','td'=>'']");
f("mcrypt_generic_deinit", "['bool','td'=>'']");
f("mcrypt_generic_end", "['bool','td'=>'']");
f("mcrypt_generic_init", "['int','td'=>'','key'=>'string','iv'=>'string']");
f("mcrypt_generic", "['string','td'=>'','data'=>'string']");
f("mcrypt_get_block_size", "['int','cipher'=>'string','module'=>'string']");
f("mcrypt_get_cipher_name", "['string','cipher'=>'string']");
f("mcrypt_get_iv_size", "['int','cipher'=>'string','module'=>'string']");
f("mcrypt_get_key_size", "['int','cipher'=>'string','module'=>'string']");
f("mcrypt_list_algorithms", "['array','lib_dir='=>'string']");
f("mcrypt_list_modes", "['array','lib_dir='=>'string']");
f("mcrypt_module_close", "['bool','td'=>'']");
f("mcrypt_module_get_algo_block_size", "['int','algorithm'=>'string','lib_dir='=>'string']");
f("mcrypt_module_get_algo_key_size", "['int','algorithm'=>'string','lib_dir='=>'string']");
f("mcrypt_module_get_supported_key_sizes", "['array','algorithm'=>'string','lib_dir='=>'string']");
f("mcrypt_module_is_block_algorithm", "['bool','algorithm'=>'string','lib_dir='=>'string']");
f("mcrypt_module_is_block_algorithm_mode", "['bool','mode'=>'string','lib_dir='=>'string']");
f("mcrypt_module_is_block_mode", "['bool','mode'=>'string','lib_dir='=>'string']");
f("mcrypt_module_open", "['resource','cipher'=>'string','cipher_directory'=>'string','mode'=>'string','mode_directory'=>'string']");
f("mcrypt_module_self_test", "['bool','algorithm'=>'string','lib_dir='=>'string']");
f("mcrypt_ofb", "['string','cipher'=>'string','key'=>'string','data'=>'string','mode'=>'int','iv='=>'string']");
f("md5_file", "['string','filename'=>'string','raw_output='=>'bool']");
f("md5", "['string','str'=>'string','raw_output='=>'bool']");
f("mdecrypt_generic", "['string','td'=>'','data'=>'string']");
f("m_deletetrans", "['bool','conn'=>'','identifier'=>'int']");
f("m_destroyconn", "['bool','conn'=>'']");
f("m_destroyengine", "['']");
f("Memcache::add", "['bool','key'=>'string','var'=>'','flag='=>'int','expire='=>'int']");
f("Memcache::addServer", "['bool','host'=>'string','port='=>'int','persistent='=>'bool','weight='=>'int','timeout='=>'int','retry_interval='=>'int','status='=>'bool','failure_callback='=>'callable','timeoutms='=>'int']");
f("Memcache::close", "['bool']");
f("Memcache::connect", "['bool','host'=>'string','port='=>'int','timeout='=>'int']");
f("Memcached::add", "['bool','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::addByKey", "['bool','server_key'=>'string','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::addServer", "['bool','host'=>'string','port'=>'int','weight='=>'int']");
f("Memcached::addServers", "['bool','servers'=>'array']");
f("Memcached::append", "['bool','key'=>'string','value'=>'string']");
f("Memcached::appendByKey", "['bool','server_key'=>'string','key'=>'string','value'=>'string']");
f("Memcached::cas", "['bool','cas_token'=>'float','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::casByKey", "['bool','cas_token'=>'float','server_key'=>'string','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::decrementByKey", "['int','server_key'=>'string','key'=>'string','offset='=>'int','initial_value='=>'int','expiry='=>'int']");
f("Memcached::decrement", "['int','key'=>'string','offset='=>'int']");
f("Memcached::delete", "['bool','key'=>'string','time='=>'int']");
f("Memcached::deleteByKey", "['bool','server_key'=>'string','key'=>'string','time='=>'int']");
f("Memcached::deleteMulti", "['bool','keys'=>'array','time='=>'int']");
f("Memcached::deleteMultiByKey", "['bool','server_key'=>'string','keys'=>'array','time='=>'int']");
f("memcache_debug", "['bool','on_off'=>'bool']");
f("Memcache::decrement", "['int','key'=>'string','value='=>'int']");
f("Memcache::delete", "['bool','key'=>'string','timeout='=>'int']");
f("Memcached::fetchAll", "['array']");
f("Memcached::fetch", "['array']");
f("Memcached::flush", "['bool','delay='=>'int']");
f("Memcached::getAllKeys", "['array']");
f("Memcached::getByKey", "['','server_key'=>'string','key'=>'string','cache_cb='=>'callable','&cas_token='=>'float']");
f("Memcached::getDelayed", "['bool','keys'=>'array','with_cas='=>'bool','value_cb='=>'callable']");
f("Memcached::getDelayedByKey", "['bool','server_key'=>'string','keys'=>'array','with_cas='=>'bool','value_cb='=>'callable']");
f("Memcached::get", "['','key'=>'string','cache_cb='=>'callable','&cas_token='=>'float']");
f("Memcached::getMultiByKey", "['array','server_key'=>'string','keys'=>'array','cas_tokens='=>'string','flags='=>'int']");
f("Memcached::getMulti", "['','keys'=>'array','cas_tokens='=>'array','flags='=>'int']");
f("Memcached::getOption", "['','option'=>'int']");
f("Memcached::getResultCode", "['int']");
f("Memcached::getResultMessage", "['string']");
f("Memcached::getServerByKey", "['array','server_key'=>'string']");
f("Memcached::getServerList", "['array']");
f("Memcached::getStats", "['array']");
f("Memcached::getVersion", "['array']");
f("Memcached::incrementByKey", "['int','server_key'=>'string','key'=>'string','offset='=>'int','initial_value='=>'int','expiry='=>'int']");
f("Memcached::increment", "['int','key'=>'string','offset='=>'int']");
f("Memcached::isDatabase", "['bool']");
f("Memcached::isPristine", "['bool']");
f("Memcached::prepend", "['bool','key'=>'string','value'=>'string']");
f("Memcached::prependByKey", "['bool','server_key'=>'string','key'=>'string','value'=>'string']");
f("Memcached::quit", "['bool']");
f("Memcached::replace", "['bool','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::replaceByKey", "['bool','server_key'=>'string','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::resetServerList", "['bool']");
f("Memcached::set", "['bool','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::setByKey", "['bool','server_key'=>'string','key'=>'string','value'=>'','expiration='=>'int']");
f("Memcached::setMulti", "['bool','items'=>'array','expiration='=>'int']");
f("Memcached::setMultiByKey", "['bool','server_key'=>'string','items'=>'array','expiration='=>'int']");
f("Memcached::setOption", "['bool','option'=>'int','value'=>'']");
f("Memcached::setOptions", "['bool','options'=>'array']");
f("Memcached::setSaslAuthData", "['void','username'=>'string','password'=>'string']");
f("Memcached::touch", "['bool','key'=>'string','expiration'=>'int']");
f("Memcached::touchByKey", "['bool','server_key'=>'string','key'=>'string','expiration'=>'int']");
f("Memcache::flush", "['bool']");
f("Memcache::get", "['array','key'=>'string','flags='=>'array','keys='=>'array']");
f("Memcache::getExtendedStats", "['array','type='=>'string','slabid='=>'int','limit='=>'int']");
f("Memcache::getServerStatus", "['int','host'=>'string','port='=>'int']");
f("Memcache::getStats", "['array','type='=>'string','slabid='=>'int','limit='=>'int']");
f("Memcache::getVersion", "['string']");
f("Memcache::increment", "['int','key'=>'string','value='=>'int']");
f("Memcache::pconnect", "['bool','host'=>'string','port='=>'int','timeout='=>'int']");
f("Memcache::replace", "['bool','key'=>'string','var'=>'','flag='=>'int','expire='=>'int']");
f("Memcache::set", "['bool','key'=>'string','var'=>'','flag='=>'int','expire='=>'int']");
f("Memcache::setCompressThreshold", "['bool','threshold'=>'int','min_savings='=>'float']");
f("Memcache::setServerParams", "['bool','host'=>'string','port='=>'int','timeout='=>'int','retry_interval='=>'int','status='=>'bool','failure_callback='=>'callable']");
f("memory_get_peak_usage", "['int','real_usage='=>'bool']");
f("memory_get_usage", "['int','real_usage='=>'bool']");
f("MessageFormatter::__construct", "['MessageFormatter','locale'=>'string','pattern'=>'string']");
f("MessageFormatter::create", "['MessageFormatter','locale'=>'string','pattern'=>'string']");
f("MessageFormatter::format", "['','args'=>'array']");
f("MessageFormatter::formatMessage", "['array','locale'=>'string','pattern'=>'string','args'=>'array']");
f("MessageFormatter::getErrorCode", "['int']");
f("MessageFormatter::getErrorMessage", "['string']");
f("MessageFormatter::getLocale", "['string']");
f("MessageFormatter::getPattern", "['string']");
f("MessageFormatter::parse", "['array','source'=>'string']");
f("MessageFormatter::parseMessage", "['array','locale'=>'string','pattern'=>'string','source'=>'string','value'=>'string']");
f("MessageFormatter::setPattern", "['bool','pattern'=>'string']");
f("MesssageFormatter::create", "['MessageFormatter','locale'=>'string','pattern'=>'string']");
f("metaphone", "['string','text'=>'string','phones='=>'int']");
f("method_exists", "['bool','any'=>'object|string','method'=>'string']");
f("m_getcellbynum", "['string','conn'=>'','identifier'=>'int','column'=>'int','row'=>'int']");
f("m_getcell", "['string','conn'=>'','identifier'=>'int','column'=>'string','row'=>'int']");
f("m_getcommadelimited", "['string','conn'=>'','identifier'=>'int']");
f("m_getheader", "['string','conn'=>'','identifier'=>'int','column_num'=>'int']");
f("mhash_count", "['int']");
f("mhash_get_block_size", "['int','hash'=>'int']");
f("mhash_get_hash_name", "['string','hash'=>'int']");
f("mhash_keygen_s2k", "['string','hash'=>'int','input_password'=>'string','salt'=>'string','bytes'=>'int']");
f("mhash", "['string','hash'=>'int','data'=>'string','key='=>'string']");
f("microtime", "['','get_as_float='=>'bool']");
f("mime_content_type", "['string','filename_or_stream'=>'']");
f("min\\'1", "['','arg1'=>'','arg2'=>'','...='=>'']");
f("min", "['','arg1'=>'array']");
f("ming_keypress", "['int','char'=>'string']");
f("ming_setcubicthreshold", "['','threshold'=>'int']");
f("ming_setscale", "['','scale'=>'float']");
f("ming_setswfcompression", "['','level'=>'int']");
f("ming_useconstants", "['','use'=>'int']");
f("ming_useswfversion", "['','version'=>'int']");
f("m_initconn", "['resource']");
f("m_initengine", "['int','location'=>'string']");
f("m_iscommadelimited", "['int','conn'=>'','identifier'=>'int']");
f("mkdir", "['bool','pathname'=>'string','mode='=>'int','recursive='=>'bool','context='=>'']");
f("mktime", "['int','hour='=>'int','min='=>'int','sec='=>'int','mon='=>'int','day='=>'int','year='=>'int']");
f("m_maxconntimeout", "['bool','conn'=>'','secs'=>'int']");
f("m_monitor", "['int','conn'=>'']");
f("m_numcolumns", "['int','conn'=>'','identifier'=>'int']");
f("m_numrows", "['int','conn'=>'','identifier'=>'int']");
f("money_format", "['string','format'=>'string','value'=>'float']");
f("MongoBinData::__construct", "['','data'=>'string','type='=>'int']");
f("MongoBinData::__toString", "['string']");
f("MongoClient::close", "['bool','connection='=>'bool|string']");
f("MongoClient::connect", "['bool']");
f("MongoClient::dropDB", "['array','db'=>'mixed']");
f("MongoClient::getConnections", "['array']");
f("MongoClient::getHosts", "['array']");
f("MongoClient::__get", "['MongoDB','dbname'=>'string']");
f("MongoClient::getReadPreference", "['array']");
f("MongoClient::getWriteConcern", "['array']");
f("MongoClient::killCursor", "['bool','server_hash'=>'string','id'=>'int|MongoInt64']");
f("MongoClient::listDBs", "['array']");
f("MongoClient::selectCollection", "['MongoCollection','db'=>'string','collection'=>'string']");
f("MongoClient::selectDB", "['MongoDB','name'=>'string']");
f("MongoClient::setReadPreference", "['bool','read_preference'=>'string','tags='=>'array']");
f("MongoClient::setWriteConcern", "['bool','w'=>'mixed','wtimeout='=>'int']");
f("MongoClient::__toString", "['string']");
f("Mongo::close", "['bool']");
f("MongoCode::__construct", "['','code'=>'string','scope='=>'array']");
f("MongoCode::__toString", "['string']");
f("MongoCollection::aggregate", "['array','op'=>'array','op='=>'array','...='=>'array']");
f("MongoCollection::aggregate", "['array','pipeline'=>'array','options='=>'array']");
f("MongoCollection::aggregateCursor", "['MongoCommandCursor','command'=>'array','options='=>'array']");
f("MongoCollection::batchInsert", "['','a'=>'array','options='=>'array']");
f("MongoCollection::__construct", "['','db'=>'MongoDB','name'=>'string']");
f("MongoCollection::count", "['int','query='=>'array','limit='=>'int','skip='=>'int']");
f("MongoCollection::createDBRef", "['array','a'=>'array']");
f("MongoCollection::createIndex", "['bool','keys'=>'array','options='=>'array']");
f("MongoCollection::deleteIndex", "['array','keys'=>'string|array']");
f("MongoCollection::deleteIndexes", "['array']");
f("MongoCollection::distinct", "['array','key'=>'string','query='=>'array']");
f("MongoCollection::drop", "['array']");
f("MongoCollection::ensureIndex", "['bool','keys'=>'array','options='=>'array']");
f("MongoCollection::findAndModify", "['array','query'=>'array','update='=>'array','fields='=>'array','options='=>'array']");
f("MongoCollection::find", "['MongoCursor','query='=>'array','fields='=>'array']");
f("MongoCollection::findOne", "['array','query='=>'array','fields='=>'array']");
f("MongoCollection::getDBRef", "['array','ref'=>'array']");
f("MongoCollection::getIndexInfo", "['array']");
f("MongoCollection::__get", "['MongoCollection','name'=>'string']");
f("MongoCollection::getName", "['string']");
f("MongoCollection::getReadPreference", "['array']");
f("MongoCollection::getSlaveOkay", "['bool']");
f("MongoCollection::getWriteConcern", "['array']");
f("MongoCollection::group", "['array','keys'=>'','initial'=>'array','reduce'=>'mongocode','options='=>'array']");
f("MongoCollection::insert", "['','a'=>'array','options='=>'array']");
f("MongoCollection::parallelCollectionScan", "['array','num_cursors'=>'int']");
f("MongoCollection::remove", "['','criteria='=>'array','options='=>'array']");
f("MongoCollection::save", "['','a'=>'array','options='=>'array']");
f("MongoCollection::setReadPreference", "['bool','read_preference'=>'string','tags='=>'array']");
f("MongoCollection::setSlaveOkay", "['bool','ok='=>'bool']");
f("MongoCollection::setWriteConcern", "['bool','w'=>'mixed','wtimeout='=>'int']");
f("MongoCollection::toIndexString", "['string','keys'=>'mixed']");
f("MongoCollection::__toString", "['string']");
f("MongoCollection::update", "['bool','criteria'=>'array','newobj'=>'array','options='=>'array']");
f("MongoCollection::validate", "['array','scan_data='=>'bool']");
f("MongoCommandCursor::batchSize", "['MongoCommandCursor','batchSize'=>'int']");
f("MongoCommandCursor::__construct", "['','connection'=>'MongoClient','ns'=>'string','command'=>'array']");
f("MongoCommandCursor::createFromDocument", "['MongoCommandCursor','connection'=>'MongoClient','hash'=>'string','document'=>'array']");
f("MongoCommandCursor::current", "['array']");
f("MongoCommandCursor::dead", "['bool']");
f("MongoCommandCursor::getReadPreference", "['array']");
f("MongoCommandCursor::info", "['array']");
f("MongoCommandCursor::key", "['int']");
f("MongoCommandCursor::next", "['void']");
f("MongoCommandCursor::rewind", "['array']");
f("MongoCommandCursor::setReadPreference", "['MongoCommandCursor','read_preference'=>'string','tags='=>'array']");
f("MongoCommandCursor::timeout", "['MongoCommandCursor','ms'=>'int']");
f("MongoCommandCursor::valid", "['bool']");
f("Mongo::connect", "['bool']");
f("Mongo::connectUtil", "['bool']");
f("MongoCursor::addOption", "['MongoCursor','key'=>'string','value'=>'']");
f("MongoCursor::awaitData", "['MongoCursor','wait='=>'bool']");
f("MongoCursor::batchSize", "['MongoCursor','num'=>'int']");
f("MongoCursor::__construct", "['','connection'=>'MongoClient','ns'=>'string','query='=>'array','fields='=>'array']");
f("MongoCursor::count", "['int','foundonly='=>'bool']");
f("MongoCursor::current", "['array']");
f("MongoCursor::dead", "['bool']");
f("MongoCursor::doQuery", "['']");
f("MongoCursorException::getHost", "['string']");
f("MongoCursor::explain", "['array']");
f("MongoCursor::fields", "['MongoCursor','f'=>'array']");
f("MongoCursor::getNext", "['array']");
f("MongoCursor::getReadPreference", "['array']");
f("MongoCursor::hasNext", "['bool']");
f("MongoCursor::hint", "['MongoCursor','key_pattern'=>'array']");
f("MongoCursor::immortal", "['MongoCursor','liveforever='=>'bool']");
f("MongoCursor::info", "['array']");
f("MongoCursorInterface::batchSize", "['MongoCursorInterface','batchSize'=>'int']");
f("MongoCursorInterface::dead", "['bool']");
f("MongoCursorInterface::getReadPreference", "['array']");
f("MongoCursorInterface::info", "['array']");
f("MongoCursorInterface::setReadPreference", "['MongoCursorInterface','read_preference'=>'string','tags='=>'array']");
f("MongoCursorInterface::timeout", "['MongoCursorInterface','ms'=>'int']");
f("MongoCursor::key", "['string']");
f("MongoCursor::limit", "['MongoCursor','num'=>'int']");
f("MongoCursor::maxTimeMS", "['MongoCursor','ms'=>'int']");
f("MongoCursor::next", "['']");
f("MongoCursor::partial", "['MongoCursor','okay='=>'bool']");
f("MongoCursor::reset", "['']");
f("MongoCursor::rewind", "['']");
f("MongoCursor::setFlag", "['MongoCursor','flag'=>'int','set='=>'bool']");
f("MongoCursor::setReadPreference", "['MongoCursor','read_preference'=>'string','tags='=>'array']");
f("MongoCursor::skip", "['MongoCursor','num'=>'int']");
f("MongoCursor::slaveOkay", "['MongoCursor','okay='=>'bool']");
f("MongoCursor::snapshot", "['MongoCursor']");
f("MongoCursor::sort", "['MongoCursor','fields'=>'array']");
f("MongoCursor::tailable", "['MongoCursor','tail='=>'bool']");
f("MongoCursor::timeout", "['MongoCursor','ms'=>'int']");
f("MongoCursor::valid", "['bool']");
f("MongoDate::__construct", "['','sec='=>'int','usec='=>'int']");
f("MongoDate::toDateTime", "['DateTime']");
f("MongoDate::__toString", "['string']");
f("MongoDB::authenticate", "['array','username'=>'string','password'=>'string']");
f("MongoDB::command", "['array','command'=>'array']");
f("MongoDB::__construct", "['','conn'=>'MongoClient','name'=>'string']");
f("MongoDB::createCollection", "['MongoCollection','name'=>'string','capped='=>'bool','size='=>'int','max='=>'int']");
f("MongoDB::createDBRef", "['array','collection'=>'string','a'=>'']");
f("MongoDB\\Driver\\BulkWrite::__construct", "['','ordered='=>'bool']");
f("MongoDB\\Driver\\BulkWrite::count", "['int']");
f("MongoDB\\Driver\\BulkWrite::delete", "['void','filter'=>'array|object','deleteOptions='=>'array']");
f("MongoDB\\Driver\\BulkWrite::insert", "['MongoDB\\Driver\\ObjectID','document'=>'array|object']");
f("MongoDB\\Driver\\BulkWrite::update", "['void','filter'=>'array|object','newObj'=>'array|object','updateOptions='=>'array']");
f("MongoDB\\Driver\\Command::__construct", "['','document'=>'array|object']");
f("MongoDB\\Driver\\Cursor::__construct", "['','server'=>'Server','responseDocument'=>'string']");
f("MongoDB\\Driver\\Cursor::getId", "['MongoDB\\Driver\\CursorId']");
f("MongoDB\\Driver\\Cursor::getServer", "['MongoDB\\Driver\\Server']");
f("MongoDB\\Driver\\CursorId::__construct", "['MongoDB\\Driver\\CursorId','id'=>'string']");
f("MongoDB\\Driver\\CursorId::__toString", "['string']");
f("MongoDB\\Driver\\Cursor::isDead", "['bool']");
f("MongoDB\\Driver\\Cursor::setTypeMap", "['void','typemap'=>'array']");
f("MongoDB\\Driver\\Cursor::toArray", "['array']");
f("MongoDB\\Driver\\Manager::__construct", "['','uri'=>'string','options='=>'array','driverOptions='=>'array']");
f("MongoDB\\Driver\\Manager::executeBulkWrite", "['MongoDB\\Driver\\WriteResult','namespace'=>'string','bulk'=>'MongoDB\\Driver\\BulkWrite','writeConcern='=>'MongoDB\\Driver\\WriteConcern']");
f("MongoDB\\Driver\\Manager::executeCommand", "['MongoDB\\Driver\\Cursor','db'=>'string','command'=>'MongoDB\\Driver\\Command','readPreference='=>'MongoDB\\Driver\\ReadPreference']");
f("MongoDB\\Driver\\Manager::executeDelete", "['MongoDB\\Driver\\WriteResult','namespace'=>'string','filter'=>'array|object','deleteOptions='=>'array','writeConcern='=>'MongoDB\\Driver\\WriteConcern']");
f("MongoDB\\Driver\\Manager::executeInsert", "['MongoDB\\Driver\\WriteResult','namespace'=>'string','document'=>'array|object','writeConcern='=>'MongoDB\\Driver\\WriteConcern']");
f("MongoDB\\Driver\\Manager::executeQuery", "['MongoDB\\Driver\\Cursor','namespace'=>'string','query'=>'MongoDB\\Driver\\Query','readPreference='=>'MongoDB\\Driver\\ReadPreference']");
f("MongoDB\\Driver\\Manager::executeUpdate", "['MongoDB\\Driver\\WriteResult','namespace'=>'string','filter'=>'array|object','newObj'=>'array|object','updateOptions='=>'array','writeConcern='=>'MongoDB\\Driver\\WriteConcern']");
f("MongoDB\\Driver\\Manager::getServers", "['array']");
f("MongoDB\\Driver\\Manager::selectServer", "['MongoDB\\Driver\\Server','readPreference'=>'MongoDB\\Driver\\ReadPreference']");
f("MongoDB\\Driver\\Query::__construct", "['','filter'=>'array|object','queryOptions='=>'array']");
f("MongoDB\\Driver\\ReadPreference::__construct", "['','readPreference'=>'string','tagSets='=>'array']");
f("MongoDB\\Driver\\Server::__construct", "['','host'=>'string','port'=>'string','options='=>'array','driverOptions='=>'array']");
f("MongoDB\\Driver\\Server::executeBulkWrite", "['','namespace'=>'string','zwrite'=>'BulkWrite']");
f("MongoDB\\Driver\\Server::executeCommand", "['','db'=>'string','command'=>'Command']");
f("MongoDB\\Driver\\Server::executeQuery", "['','namespace'=>'string','zquery'=>'Query']");
f("MongoDB\\Driver\\Server::getHost", "['']");
f("MongoDB\\Driver\\Server::getInfo", "['']");
f("MongoDB\\Driver\\Server::getLatency", "['']");
f("MongoDB\\Driver\\Server::getPort", "['']");
f("MongoDB\\Driver\\Server::getState", "['']");
f("MongoDB\\Driver\\Server::getType", "['']");
f("MongoDB\\Driver\\Server::isDelayed", "['']");
f("MongoDB\\Driver\\Server::isPassive", "['']");
f("MongoDB\\Driver\\WriteConcern::__construct", "['','wstring'=>'string','wtimeout='=>'int','journal='=>'bool','fsync='=>'bool']");
f("MongoDB\\Driver\\WriteConcernError::getCode", "['']");
f("MongoDB\\Driver\\WriteConcernError::getInfo", "['']");
f("MongoDB\\Driver\\WriteConcernError::getMessage", "['']");
f("MongoDB\\Driver\\WriteError::getCode", "['']");
f("MongoDB\\Driver\\WriteError::getIndex", "['']");
f("MongoDB\\Driver\\WriteError::getMessage", "['']");
f("MongoDB\\Driver\\WriteException::getWriteResult", "['']");
f("MongoDB\\Driver\\WriteResult::getDeletedCount", "['int']");
f("MongoDB\\Driver\\WriteResult::getInfo", "['']");
f("MongoDB\\Driver\\WriteResult::getInsertedCount", "['int']");
f("MongoDB\\Driver\\WriteResult::getMatchedCount", "['int']");
f("MongoDB\\Driver\\WriteResult::getModifiedCount", "['int']");
f("MongoDB\\Driver\\WriteResult::getServer", "['']");
f("MongoDB\\Driver\\WriteResult::getUpsertedCount", "['int']");
f("MongoDB\\Driver\\WriteResult::getUpsertedIds", "['']");
f("MongoDB\\Driver\\WriteResult::getWriteConcernError", "['']");
f("MongoDB\\Driver\\WriteResult::getWriteErrors", "['']");
f("MongoDB::drop", "['array']");
f("MongoDB::dropCollection", "['array','coll'=>'']");
f("MongoDB::execute", "['array','code'=>'','args='=>'array']");
f("MongoDB::forceError", "['bool']");
f("MongoDB::getCollectionInfo", "['array','options='=>'array']");
f("MongoDB::getCollectionNames", "['array','options='=>'array']");
f("MongoDB::getDBRef", "['array','ref'=>'array']");
f("MongoDB::getGridFS", "['MongoGridFS','prefix='=>'string']");
f("MongoDB::__get", "['MongoCollection','name'=>'string']");
f("MongoDB::getProfilingLevel", "['int']");
f("MongoDB::getReadPreference", "['array']");
f("MongoDB::getSlaveOkay", "['bool']");
f("MongoDB::getWriteConcern", "['array']");
f("MongoDB::lastError", "['array']");
f("MongoDB::listCollections", "['array']");
f("MongoDB::prevError", "['array']");
f("MongoDBRef::create", "['array','collection'=>'string','id'=>'','database='=>'string']");
f("MongoDBRef::get", "['array','db'=>'mongodb','ref'=>'array']");
f("MongoDBRef::isRef", "['bool','ref'=>'']");
f("MongoDB::repair", "['array','preserve_cloned_files='=>'bool','backup_original_files='=>'bool']");
f("MongoDB::resetError", "['array']");
f("MongoDB::selectCollection", "['MongoCollection','name'=>'string']");
f("MongoDB::setProfilingLevel", "['int','level'=>'int']");
f("MongoDB::setReadPreference", "['bool','read_preference'=>'string','tags='=>'array']");
f("MongoDB::setSlaveOkay", "['bool','ok='=>'bool']");
f("MongoDB::setWriteConcern", "['bool','w'=>'mixed','wtimeout='=>'int']");
f("MongoDB::__toString", "['string']");
f("MongoDeleteBatch::__construct", "['','collection'=>'MongoCollection','write_options='=>'array']");
f("Mongo::dropDB", "['array','db'=>'']");
f("Mongo::getHosts", "['array']");
f("Mongo::__get", "['MongoDB','dbname'=>'string']");
f("Mongo::getPoolSize", "['int']");
f("Mongo::getSlaveOkay", "['bool']");
f("Mongo::getSlave", "['string']");
f("MongoGridFS::__construct", "['','db'=>'MongoDB','prefix='=>'string','chunks='=>'mixed']");
f("MongoGridFSCursor::__construct", "['','gridfs'=>'MongoGridFS','connection'=>'resource','ns'=>'string','query'=>'array','fields'=>'array']");
f("MongoGridFSCursor::current", "['MongoGridFSFile']");
f("MongoGridFSCursor::getNext", "['MongoGridFSFile']");
f("MongoGridFSCursor::key", "['string']");
f("MongoGridFS::delete", "['bool','id'=>'']");
f("MongoGridFS::drop", "['array']");
f("MongoGridfsFile::__construct", "['','gridfs'=>'MongoGridFS','file'=>'array']");
f("MongoGridFSFile::getBytes", "['string']");
f("MongoGridFSFile::getFilename", "['string']");
f("MongoGridFSFile::getResource", "['resource']");
f("MongoGridFSFile::getSize", "['int']");
f("MongoGridFSFile::write", "['int','filename='=>'string']");
f("MongoGridFS::find", "['MongoGridFSCursor','query='=>'array','fields='=>'array']");
f("MongoGridFS::findOne", "['MongoGridFSFile','query='=>'','fields='=>'']");
f("MongoGridFS::get", "['MongoGridFSFile','id'=>'']");
f("MongoGridFS::put", "['','filename'=>'string','extra='=>'array']");
f("MongoGridFS::remove", "['bool','criteria='=>'array','options='=>'array']");
f("MongoGridFS::storeBytes", "['','bytes'=>'string','extra='=>'array','options='=>'array']");
f("MongoGridFS::storeFile", "['','filename'=>'string','extra='=>'array','options='=>'array']");
f("MongoGridFS::storeUpload", "['','name'=>'string','filename='=>'string']");
f("MongoId::__construct", "['','id='=>'string|MongoId']");
f("MongoId::getHostname", "['string']");
f("MongoId::getInc", "['int']");
f("MongoId::getPID", "['int']");
f("MongoId::getTimestamp", "['int']");
f("MongoId::isValid", "['bool','value'=>'mixed']");
f("MongoId::__set_state", "['MongoId','props'=>'array']");
f("MongoId::__toString", "['string']");
f("MongoInsertBatch::__construct", "['','collection'=>'MongoCollection','write_options='=>'array']");
f("MongoInt32::__construct", "['','value'=>'string']");
f("MongoInt32::__toString", "['string']");
f("MongoInt64::__construct", "['','value'=>'string']");
f("MongoInt64::__toString", "['string']");
f("MongoLog::getCallback", "['callable']");
f("MongoLog::getLevel", "['int']");
f("MongoLog::getModule", "['int']");
f("MongoLog::setCallback", "['void','log_function'=>'callable']");
f("MongoLog::setLevel", "['void','level'=>'int']");
f("MongoLog::setModule", "['void','module'=>'int']");
f("Mongo::poolDebug", "['array']");
f("MongoPool::getSize", "['int']");
f("MongoPool::info", "['array']");
f("MongoPool::setSize", "['bool','size'=>'int']");
f("MongoRegex::__construct", "['','regex'=>'string']");
f("MongoRegex::__toString", "['string']");
f("MongoResultException::getDocument", "['array']");
f("Mongo::selectDB", "['MongoDB','name'=>'string']");
f("Mongo::setPoolSize", "['bool','size'=>'int']");
f("Mongo::setSlaveOkay", "['bool','ok='=>'bool']");
f("Mongo::switchSlave", "['string']");
f("MongoTimestamp::__construct", "['','sec='=>'int','inc='=>'int']");
f("MongoTimestamp::__toString", "['string']");
f("Mongo::__toString", "['string']");
f("MongoUpdateBatch::__construct", "['','collection'=>'MongoCollection','write_options='=>'array']");
f("MongoWriteBatch::add", "['bool','item'=>'array']");
f("MongoWriteBatch::execute", "['array','write_options'=>'array']");
f("MongoWriteConcernException::getDocument", "['array']");
f("move_uploaded_file", "['bool','path'=>'string','new_path'=>'string']");
f("m_parsecommadelimited", "['int','conn'=>'','identifier'=>'int']");
f("mqseries_back", "['','hconn'=>'','compcode'=>'','reason'=>'']");
f("mqseries_begin", "['','hconn'=>'','beginoptions'=>'array','compcode'=>'','reason'=>'']");
f("mqseries_close", "['','hconn'=>'','hobj'=>'','options'=>'int','compcode'=>'','reason'=>'']");
f("mqseries_cmit", "['','hconn'=>'','compcode'=>'','reason'=>'']");
f("mqseries_conn", "['','qmanagername'=>'string','hconn'=>'','compcode'=>'','reason'=>'']");
f("mqseries_connx", "['','qmanagername'=>'string','connoptions'=>'array','hconn'=>'','compcode'=>'','reason'=>'']");
f("mqseries_disc", "['','hconn'=>'','compcode'=>'','reason'=>'']");
f("mqseries_get", "['','hconn'=>'','hobj'=>'','md'=>'array','gmo'=>'array','bufferlength'=>'int','msg'=>'string','data_length'=>'int','compcode'=>'','reason'=>'']");
f("mqseries_inq", "['','hconn'=>'','hobj'=>'','selectorcount'=>'int','selectors'=>'array','intattrcount'=>'int','intattr'=>'','charattrlength'=>'int','charattr'=>'','compcode'=>'','reason'=>'']");
f("mqseries_open", "['','hconn'=>'','objdesc'=>'array','option'=>'int','hobj'=>'','compcode'=>'','reason'=>'']");
f("mqseries_put1", "['','hconn'=>'','objdesc'=>'','msgdesc'=>'','pmo'=>'','buffer'=>'string','compcode'=>'','reason'=>'']");
f("mqseries_put", "['','hconn'=>'','hobj'=>'','md'=>'array','pmo'=>'array','message'=>'string','compcode'=>'','reason'=>'']");
f("mqseries_set", "['','hconn'=>'','hobj'=>'','selectorcount'=>'int','selectors'=>'array','intattrcount'=>'int','intattrs'=>'array','charattrlength'=>'int','charattrs'=>'array','compcode'=>'','reason'=>'']");
f("mqseries_strerror", "['string','reason'=>'int']");
f("m_responsekeys", "['array','conn'=>'','identifier'=>'int']");
f("m_responseparam", "['string','conn'=>'','identifier'=>'int','key'=>'string']");
f("m_returnstatus", "['int','conn'=>'','identifier'=>'int']");
f("msession_connect", "['bool','host'=>'string','port'=>'string']");
f("msession_count", "['int']");
f("msession_create", "['bool','session'=>'string','classname='=>'string','data='=>'string']");
f("msession_destroy", "['bool','name'=>'string']");
f("msession_disconnect", "['']");
f("msession_find", "['array','name'=>'string','value'=>'string']");
f("msession_get_array", "['array','session'=>'string']");
f("msession_get_data", "['string','session'=>'string']");
f("msession_get", "['string','session'=>'string','name'=>'string','value'=>'string']");
f("msession_inc", "['string','session'=>'string','name'=>'string']");
f("msession_list", "['array']");
f("msession_listvar", "['array','name'=>'string']");
f("msession_lock", "['int','name'=>'string']");
f("msession_plugin", "['string','session'=>'string','val'=>'string','param='=>'string']");
f("msession_randstr", "['string','param'=>'int']");
f("msession_set_array", "['','session'=>'string','tuples'=>'array']");
f("msession_set", "['bool','session'=>'string','name'=>'string','value'=>'string']");
f("msession_set_data", "['bool','session'=>'string','value'=>'string']");
f("msession_timeout", "['int','session'=>'string','param='=>'int']");
f("msession_uniq", "['string','param'=>'int','classname='=>'string','data='=>'string']");
f("msession_unlock", "['int','session'=>'string','key'=>'int']");
f("m_setblocking", "['int','conn'=>'','tf'=>'int']");
f("m_setdropfile", "['int','conn'=>'','directory'=>'string']");
f("m_setip", "['int','conn'=>'','host'=>'string','port'=>'int']");
f("m_setssl_cafile", "['int','conn'=>'','cafile'=>'string']");
f("m_setssl_files", "['int','conn'=>'','sslkeyfile'=>'string','sslcertfile'=>'string']");
f("m_setssl", "['int','conn'=>'','host'=>'string','port'=>'int']");
f("m_settimeout", "['int','conn'=>'','seconds'=>'int']");
f("msgfmt_create", "['MessageFormatter','locale'=>'string','pattern'=>'string']");
f("msgfmt_format_message", "['string','locale'=>'string','pattern'=>'string','args'=>'array']");
f("msgfmt_format", "['string','fmt'=>'messageformatter','args'=>'array']");
f("msgfmt_get_error_code", "['int','fmt'=>'messageformatter']");
f("msgfmt_get_error_message", "['string','fmt'=>'messageformatter']");
f("msgfmt_get_locale", "['string','formatter'=>'messageformatter']");
f("msgfmt_get_pattern", "['string','fmt'=>'messageformatter']");
f("msgfmt_parse", "['array','fmt'=>'messageformatter','value'=>'string']");
f("msgfmt_parse_message", "['array','locale'=>'string','pattern'=>'string','source'=>'string']");
f("msgfmt_set_pattern", "['bool','fmt'=>'messageformatter','pattern'=>'string']");
f("msg_get_queue", "['resource','key'=>'int','perms='=>'int']");
f("msg_queue_exists", "['bool','key'=>'int']");
f("msg_receive", "['','queue'=>'','desiredmsgtype'=>'int','&msgtype'=>'int','maxsize'=>'int','message'=>'','unserialize='=>'bool','flags='=>'int','errorcode='=>'int']");
f("msg_remove_queue", "['bool','queue'=>'']");
f("msg_send", "['bool','queue'=>'','msgtype'=>'int','message'=>'','serialize='=>'bool','blocking='=>'bool','errorcode='=>'int']");
f("msg_set_queue", "['bool','queue'=>'','data'=>'array']");
f("msg_stat_queue", "['array','queue'=>'']");
f("msql_affected_rows", "['int','result'=>'']");
f("msql_close", "['bool','link_identifier='=>'']");
f("msql_connect", "['resource','hostname='=>'string']");
f("msql_create_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("msql_data_seek", "['bool','result'=>'','row_number'=>'int']");
f("msql_db_query", "['resource','database'=>'string','query'=>'string','link_identifier='=>'']");
f("msql_drop_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("msql_error", "['string']");
f("msql_fetch_array", "['array','result'=>'','result_type='=>'int']");
f("msql_fetch_field", "['any','result'=>'','field_offset='=>'int']");
f("msql_fetch_object", "['any','result'=>'']");
f("msql_fetch_row", "['array','result'=>'']");
f("msql_field_flags", "['string','result'=>'','field_offset'=>'int']");
f("msql_field_len", "['int','result'=>'','field_offset'=>'int']");
f("msql_field_name", "['string','result'=>'','field_offset'=>'int']");
f("msql_field_seek", "['bool','result'=>'','field_offset'=>'int']");
f("msql_field_table", "['int','result'=>'','field_offset'=>'int']");
f("msql_field_type", "['string','result'=>'','field_offset'=>'int']");
f("msql_free_result", "['bool','result'=>'']");
f("msql_list_dbs", "['resource','link_identifier='=>'']");
f("msql_list_fields", "['resource','database'=>'string','tablename'=>'string','link_identifier='=>'']");
f("msql_list_tables", "['resource','database'=>'string','link_identifier='=>'']");
f("msql_num_fields", "['int','result'=>'']");
f("msql_num_rows", "['int','query_identifier'=>'']");
f("msql_pconnect", "['resource','hostname='=>'string']");
f("msql_query", "['resource','query'=>'string','link_identifier='=>'']");
f("msql_result", "['string','result'=>'','row'=>'int','field='=>'']");
f("msql_select_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("m_sslcert_gen_hash", "['string','filename'=>'string']");
f("mssql_bind", "['bool','stmt'=>'','param_name'=>'string','var'=>'','type'=>'int','is_output='=>'bool','is_null='=>'bool','maxlen='=>'int']");
f("mssql_close", "['bool','link_identifier='=>'']");
f("mssql_connect", "['resource','servername='=>'string','username='=>'string','password='=>'string','new_link='=>'bool']");
f("mssql_data_seek", "['bool','result_identifier'=>'','row_number'=>'int']");
f("mssql_execute", "['','stmt'=>'','skip_results='=>'bool']");
f("mssql_fetch_array", "['array','result'=>'','result_type='=>'int']");
f("mssql_fetch_assoc", "['array','result_id'=>'']");
f("mssql_fetch_batch", "['int','result'=>'']");
f("mssql_fetch_field", "['any','result'=>'','field_offset='=>'int']");
f("mssql_fetch_object", "['any','result'=>'']");
f("mssql_fetch_row", "['array','result'=>'']");
f("mssql_field_length", "['int','result'=>'','offset='=>'int']");
f("mssql_field_name", "['string','result'=>'','offset='=>'int']");
f("mssql_field_seek", "['bool','result'=>'','field_offset'=>'int']");
f("mssql_field_type", "['string','result'=>'','offset='=>'int']");
f("mssql_free_result", "['bool','result'=>'']");
f("mssql_free_statement", "['bool','stmt'=>'']");
f("mssql_get_last_message", "['string']");
f("mssql_guid_string", "['string','binary'=>'string','short_format='=>'bool']");
f("mssql_init", "['resource','sp_name'=>'string','link_identifier='=>'']");
f("mssql_min_error_severity", "['','severity'=>'int']");
f("mssql_min_message_severity", "['','severity'=>'int']");
f("mssql_next_result", "['bool','result_id'=>'']");
f("mssql_num_fields", "['int','result'=>'']");
f("mssql_num_rows", "['int','result'=>'']");
f("mssql_pconnect", "['resource','servername='=>'string','username='=>'string','password='=>'string','new_link='=>'bool']");
f("mssql_query", "['','query'=>'string','link_identifier='=>'','batch_size='=>'int']");
f("mssql_result", "['string','result'=>'','row'=>'int','field'=>'']");
f("mssql_rows_affected", "['int','link_identifier'=>'']");
f("mssql_select_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("mt_getrandmax", "['int']");
f("mt_rand\\'1", "['int']");
f("mt_rand", "['int','min'=>'int','max'=>'int']");
f("m_transactionssent", "['int','conn'=>'']");
f("m_transinqueue", "['int','conn'=>'']");
f("m_transkeyval", "['int','conn'=>'','identifier'=>'int','key'=>'string','value'=>'string']");
f("m_transnew", "['int','conn'=>'']");
f("m_transsend", "['int','conn'=>'','identifier'=>'int']");
f("mt_srand", "['','seed='=>'int']");
f("MultipleIterator::attachIterator", "['','iterator'=>'iterator','infos='=>'string']");
f("MultipleIterator::__construct", "['MultipleIterator','flags'=>'int']");
f("MultipleIterator::containsIterator", "['','iterator'=>'iterator']");
f("MultipleIterator::countIterators", "['']");
f("MultipleIterator::current", "['']");
f("MultipleIterator::detachIterator", "['','iterator'=>'iterator']");
f("MultipleIterator::getFlags", "['int']");
f("MultipleIterator::key", "['array']");
f("MultipleIterator::next", "['']");
f("MultipleIterator::rewind", "['']");
f("MultipleIterator::setFlags", "['int','flags'=>'int']");
f("MultipleIterator::valid", "['bool']");
f("Mutex::create", "['long','lock='=>'bool']");
f("Mutex::destroy", "['bool','mutex'=>'long']");
f("Mutex::lock", "['bool','mutex'=>'long']");
f("Mutex::trylock", "['bool','mutex'=>'long']");
f("Mutex::unlock", "['bool','mutex'=>'long','destroy='=>'bool']");
f("m_uwait", "['int','microsecs'=>'int']");
f("m_validateidentifier", "['int','conn'=>'','tf'=>'int']");
f("m_verifyconnection", "['bool','conn'=>'','tf'=>'int']");
f("m_verifysslcert", "['bool','conn'=>'','tf'=>'int']");
f("mysql_affected_rows", "['int','link_identifier='=>'']");
f("mysql_client_encoding", "['string','link_identifier='=>'']");
f("mysql_close", "['bool','link_identifier='=>'']");
f("mysql_connect", "['resource','server='=>'string','username='=>'string','password='=>'string','new_link='=>'bool','client_flags='=>'int']");
f("mysql_create_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("mysql_data_seek", "['bool','result'=>'','row_number'=>'int']");
f("mysql_db_name", "['string','result'=>'','row'=>'int','field='=>'']");
f("mysql_db_query", "['resource','database'=>'string','query'=>'string','link_identifier='=>'']");
f("mysql_drop_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("mysql_errno", "['int','link_identifier='=>'']");
f("mysql_error", "['string','link_identifier='=>'']");
f("mysql_escape_string", "['string','unescaped_string'=>'string']");
f("mysql_fetch_array", "['array','result'=>'','result_type='=>'int']");
f("mysql_fetch_assoc", "['array','result'=>'']");
f("mysql_fetch_field", "['any','result'=>'','field_offset='=>'int']");
f("mysql_fetch_lengths", "['array','result'=>'']");
f("mysql_fetch_object", "['any','result'=>'','class_name='=>'string','params='=>'array']");
f("mysql_fetch_row", "['array','result'=>'']");
f("mysql_field_flags", "['string','result'=>'','field_offset'=>'int']");
f("mysql_field_len", "['int','result'=>'','field_offset'=>'int']");
f("mysql_field_name", "['string','result'=>'','field_offset'=>'int']");
f("mysql_field_seek", "['bool','result'=>'','field_offset'=>'int']");
f("mysql_field_table", "['string','result'=>'','field_offset'=>'int']");
f("mysql_field_type", "['string','result'=>'','field_offset'=>'int']");
f("mysql_free_result", "['bool','result'=>'']");
f("mysql_get_client_info", "['string']");
f("mysql_get_host_info", "['string','link_identifier='=>'']");
f("mysql_get_proto_info", "['int','link_identifier='=>'']");
f("mysql_get_server_info", "['string','link_identifier='=>'']");
f("mysqli::affected_rows", "['int','link='=>'mysqli']");
f("mysqli_affected_rows", "['int','link'=>'mysqli']");
f("mysqli_autocommit", "['bool','link'=>'mysqli','mode'=>'bool']");
f("mysqli::autocommit", "['bool','mode'=>'bool','link='=>'mysqli']");
f("mysqli::begin_transaction", "['bool','flags='=>'int','name='=>'string']");
f("mysqli_begin_transaction", "['bool','link'=>'mysqli','flags'=>'int','name'=>'string']");
f("mysqli_change_user", "['bool','link'=>'mysqli','user'=>'string','password'=>'string','database'=>'string']");
f("mysqli::change_user", "['bool','user'=>'string','password'=>'string','database'=>'string','link='=>'mysqli']");
f("mysqli_character_set_name", "['string','link'=>'mysqli']");
f("mysqli::character_set_name", "['string','link='=>'mysqli']");
f("mysqli::client_info", "['string','link='=>'mysqli']");
f("mysqli::client_version", "['int','link='=>'mysqli']");
f("mysqli_close", "['bool','link'=>'mysqli']");
f("mysqli::close", "['bool','link='=>'mysqli']");
f("mysqli::commit", "['bool','link='=>'mysqli']");
f("mysqli_commit", "['bool','link'=>'mysqli','flags='=>'int','name='=>'string']");
f("mysqli_connect_errno", "['int']");
f("mysqli::connect_errno", "['int']");
f("mysqli_connect_error", "['string']");
f("mysqli::connect_error", "['string']");
f("mysqli_connect", "['mysqli|bool','hostname='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string']");
f("mysqli::__construct", "['mysqli','host='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string']");
f("mysqli_data_seek", "['bool','result'=>'mysqli_result','offset'=>'int']");
f("mysqli::debug", "['bool','message'=>'string']");
f("mysqli_debug", "['','debug'=>'string']");
f("mysqli::disable_reads_from_master", "['bool']");
f("mysqli_disable_reads_from_master", "['bool','link'=>'mysqli']");
f("mysqli_disable_rpl_parse", "['bool','link'=>'mysqli']");
f("mysqli_driver::embedded_server_end", "['']");
f("mysqli_driver::embedded_server_start", "['bool','start'=>'bool','arguments'=>'array','groups'=>'array']");
f("mysqli::dump_debug_info", "['bool']");
f("mysqli_dump_debug_info", "['bool','link'=>'mysqli']");
f("mysqli_embedded_server_end", "['']");
f("mysqli_embedded_server_start", "['bool','start'=>'bool','arguments'=>'array','groups'=>'array']");
f("mysqli_enable_reads_from_master", "['bool','link'=>'mysqli']");
f("mysqli_enable_rpl_parse", "['bool','link'=>'mysqli']");
f("mysqli::errno", "['int']");
f("mysqli_errno", "['int','link'=>'mysqli']");
f("mysqli_error_list", "['array','connection'=>'mysqli']");
f("mysqli::error", "['string']");
f("mysqli_error", "['string','link'=>'mysqli']");
f("mysqli_fetch_all", "['','result='=>'mysqli_result','resulttype='=>'int']");
f("mysqli_fetch_array", "['','result='=>'mysqli_result','resulttype='=>'int']");
f("mysqli_fetch_assoc", "['array','result'=>'mysqli_result']");
f("mysqli_fetch_field_direct", "['','result'=>'mysqli_result','offset'=>'int']");
f("mysqli_fetch_field", "['any','result'=>'mysqli_result']");
f("mysqli_fetch_fields", "['array','result'=>'mysqli_result']");
f("mysqli_fetch_lengths", "['array','result'=>'mysqli_result']");
f("mysqli_fetch_object", "['','result='=>'mysqli_result','class_name='=>'string','ctor_params='=>'array|null']");
f("mysqli_fetch_row", "['array','result'=>'mysqli_result']");
f("mysqli::field_count", "['int']");
f("mysqli_field_count", "['int','link'=>'mysqli']");
f("mysqli_field_seek", "['bool','result'=>'mysqli_result','fieldnr'=>'int']");
f("mysqli_field_tell", "['int','result'=>'mysqli_result']");
f("mysqli_free_result", "['','link'=>'mysqli_result']");
f("mysqli_get_cache_stats", "['array']");
f("mysqli::get_charset", "['any']");
f("mysqli_get_charset", "['any','link'=>'mysqli']");
f("mysqli_get_client_info", "['string','link'=>'mysqli']");
f("mysqli::get_client_info", "['string','link='=>'mysqli']");
f("mysqli_get_client_stats", "['array']");
f("mysqli_get_client_version", "['int','link'=>'mysqli']");
f("mysqli::get_connection_stats", "['array']");
f("mysqli_get_connection_stats", "['array','link'=>'mysqli']");
f("mysqli_get_host_info", "['string','link'=>'mysqli']");
f("mysqli_get_links_stats", "['array']");
f("mysqli_get_proto_info", "['int','link'=>'mysqli']");
f("mysqli_get_server_info", "['string','link'=>'mysqli']");
f("mysqli_get_server_version", "['int','link'=>'mysqli']");
f("mysqli::get_warnings", "['mysqli_warning']");
f("mysqli_get_warnings", "['any','link'=>'mysqli']");
f("mysqli::host_info", "['string']");
f("mysqli::info", "['string|null']");
f("mysqli_info", "['string|null','link'=>'mysqli']");
f("mysqli_init", "['mysqli']");
f("mysqli::init", "['mysqli']");
f("mysqli::insert_id", "['int|string']");
f("mysqli_insert_id", "['int|string','link'=>'mysqli']");
f("mysqli_kill", "['bool','link'=>'mysqli','processid'=>'int']");
f("mysqli::kill", "['bool','processid'=>'int','link='=>'mysqli']");
f("mysqli_link_construct", "['any']");
f("mysqli_master_query", "['bool','link'=>'mysqli','query'=>'string']");
f("mysqli::more_results", "['bool']");
f("mysqli_more_results", "['bool','link'=>'mysqli']");
f("mysqli_multi_query", "['bool','link'=>'mysqli','query'=>'string']");
f("mysqli::multi_query", "['bool','query'=>'string']");
f("mysqli::next_result", "['bool']");
f("mysqli_next_result", "['bool','link'=>'mysqli']");
f("mysql_info", "['string','link_identifier='=>'']");
f("mysql_insert_id", "['int','link_identifier='=>'']");
f("mysqli_num_fields", "['int','link'=>'mysqli_result']");
f("mysqli_num_rows", "['int','link'=>'mysqli_result']");
f("mysqli_options", "['bool','link'=>'mysqli','option'=>'int','value'=>'']");
f("mysqli::options", "['bool','option'=>'int','value'=>'']");
f("mysqli::ping", "['bool']");
f("mysqli_ping", "['bool','link'=>'mysqli']");
f("mysqli::poll", "['int','read'=>'array','error'=>'array','reject'=>'array','sec'=>'int','usec='=>'int']");
f("mysqli_poll", "['int','read'=>'array','write'=>'array','error'=>'array','sec'=>'int','usec='=>'int']");
f("mysqli_prepare", "['mysqli_stmt','link'=>'mysqli','query'=>'string']");
f("mysqli::prepare", "['mysqli_stmt','query'=>'string','link='=>'mysqli']");
f("mysqli::protocol_version", "['int','link='=>'mysqli']");
f("mysqli_query", "['','link'=>'mysqli','query='=>'string','resultmode='=>'int']");
f("mysqli::query", "['','query'=>'string','resultmode='=>'int','link='=>'mysqli']");
f("mysqli::real_connect", "['bool','host='=>'string','username='=>'string','passwd='=>'string','dbname='=>'string','port='=>'int','socket='=>'string','flags='=>'int','link='=>'mysqli']");
f("mysqli_real_connect", "['bool','link='=>'mysqli','hostname=='=>'string','username=='=>'string','passwd=='=>'string','dbname=='=>'string','port=='=>'int','socket=='=>'string','flags=='=>'int']");
f("mysqli::real_escape_string", "['string','escapestr'=>'string','link='=>'mysqli']");
f("mysqli_real_escape_string", "['string','link'=>'mysqli','escapestr'=>'string']");
f("mysqli_real_query", "['bool','link'=>'mysqli','query'=>'string']");
f("mysqli::real_query", "['bool','query'=>'string','link='=>'mysqli']");
f("mysqli_reap_async_query", "['mysqli_result','link'=>'mysqli']");
f("mysqli::reap_async_query", "['mysqli_result']");
f("mysqli_refresh", "['bool','link'=>'mysqli','options'=>'int']");
f("mysqli_release_savepoint", "['bool','link'=>'mysqli','name'=>'string']");
f("mysqli::release_savepoint", "['bool','name'=>'string']");
f("mysqli_report", "['bool','flags'=>'int']");
f("mysqli_result::close", "['void']");
f("mysqli_result::__construct", "['mysqli_result','link'=>'mysqli','resultmode='=>'int']");
f("mysqli_result::current_field", "['int']");
f("mysqli_result::data_seek", "['bool','offset'=>'int']");
f("mysqli_result::fetch_all", "['','resulttype='=>'int']");
f("mysqli_result::fetch_array", "['','resulttype='=>'int']");
f("mysqli_result::fetch_assoc", "['array']");
f("mysqli_result::fetch_field_direct", "['any','fieldnr'=>'int']");
f("mysqli_result::fetch_field", "['any']");
f("mysqli_result::fetch_fields", "['array']");
f("mysqli_result::fetch_object", "['any','class_name='=>'string','params='=>'array']");
f("mysqli_result::fetch_row", "['']");
f("mysqli_result::field_count", "['int']");
f("mysqli_result::field_seek", "['bool','fieldnr'=>'int']");
f("mysqli_result::free", "['']");
f("mysqli_result::free_result", "['void']");
f("mysqli_result::lengths", "['array']");
f("mysqli_result::num_rows", "['int']");
f("mysqli_rollback", "['bool','link'=>'mysqli']");
f("mysqli::rollback", "['bool','link='=>'mysqli']");
f("mysqli_rpl_parse_enabled", "['int','link'=>'mysqli']");
f("mysqli_rpl_probe", "['bool','link'=>'mysqli']");
f("mysqli_rpl_query_type", "['int','query'=>'string','link'=>'mysqli']");
f("mysqli::rpl_query_type", "['int','query'=>'string','link='=>'mysqli']");
f("mysqli_savepoint", "['bool','link'=>'mysqli','name'=>'string']");
f("mysqli::savepoint", "['bool','name'=>'string']");
f("mysqli_savepoint_libmysql", "['bool']");
f("mysqli::select_db", "['bool','dbname'=>'string','link='=>'mysqli']");
f("mysqli_select_db", "['bool','link'=>'mysqli','dbname'=>'string']");
f("mysqli_send_query", "['bool','query'=>'string','link'=>'mysqli']");
f("mysqli::send_query", "['bool','query'=>'string','link='=>'mysqli']");
f("mysqli::server_info", "['string','link='=>'mysqli']");
f("mysqli::server_version", "['int','link='=>'mysqli']");
f("mysqli::set_charset", "['bool','charset'=>'string','link='=>'mysqli']");
f("mysqli_set_charset", "['bool','link'=>'mysqli','csname'=>'string']");
f("mysqli_set_local_infile_default", "['','link'=>'mysqli']");
f("mysqli::set_local_infile_default", "['','link='=>'mysqli']");
f("mysqli_set_local_infile_handler", "['bool','link'=>'mysqli','read_func'=>'callable']");
f("mysqli::set_local_infile_handler", "['bool','link'=>'mysqli','read_func='=>'callable']");
f("mysqli_slave_query", "['bool','link'=>'mysqli','query'=>'string']");
f("mysqli_sqlstate", "['string','link'=>'mysqli']");
f("mysqli::sqlstate", "['string','link='=>'mysqli']");
f("mysqli::ssl_set", "['bool','key'=>'string','cert'=>'string','ca'=>'string','capath'=>'string','cipher'=>'string','link='=>'mysqli']");
f("mysqli_ssl_set", "['bool','link'=>'mysqli','key'=>'string','cert'=>'string','ca'=>'string','capath'=>'string','cipher'=>'string']");
f("mysqli_stat", "['','link'=>'mysqli']");
f("mysqli::stat", "['string','link='=>'mysqli']");
f("mysqli_stmt::affected_rows", "['int']");
f("mysqli_stmt_affected_rows", "['int','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::attr_get", "['bool|int','attr'=>'int']");
f("mysqli_stmt_attr_get", "['bool|int','stmt'=>'mysqli_stmt','attr'=>'int']");
f("mysqli_stmt::attr_set", "['bool','attr'=>'int','mode'=>'int']");
f("mysqli_stmt_attr_set", "['bool','stmt'=>'mysqli_stmt','attr'=>'int','mode'=>'int']");
f("mysqli_stmt_bind_param", "['bool','stmt'=>'mysqli_stmt','types'=>'string','variable'=>'','...='=>'']");
f("mysqli_stmt::bind_param", "['bool','types'=>'string','var1'=>'','...='=>'']");
f("mysqli_stmt_bind_result", "['bool','stmt'=>'mysqli_stmt','var1='=>'','...='=>'']");
f("mysqli_stmt::bind_result", "['bool','var1'=>'','...='=>'']");
f("mysqli_stmt::close", "['bool']");
f("mysqli_stmt_close", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::__construct", "['mysqli_stmt','link='=>'mysqli','query='=>'string']");
f("mysqli_stmt::data_seek", "['','offset'=>'int']");
f("mysqli_stmt_data_seek", "['','stmt'=>'mysqli_stmt','offset'=>'int']");
f("mysqli_stmt_errno", "['int','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::errno", "['int']");
f("mysqli_stmt::error_list", "['array']");
f("mysqli_stmt_error_list", "['array','stmt'=>'mysqli_stmt']");
f("mysqli_stmt_error", "['string','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::error", "['string']");
f("mysqli_stmt::execute", "['bool']");
f("mysqli_stmt_execute", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::fetch", "['bool']");
f("mysqli_stmt_fetch", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt_field_count", "['int','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::field_count", "['int']");
f("mysqli_stmt_free_result", "['']");
f("mysqli_stmt::free_result", "['','stmt='=>'mysqli_stmt']");
f("mysqli_stmt::get_result", "['mysqli_result|bool']");
f("mysqli_stmt_get_result", "['mysqli_result|bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt_get_warnings", "['any','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::get_warnings", "['any','stmt='=>'mysqli_stmt']");
f("mysqli_stmt_init", "['mysqli_stmt','link'=>'mysqli']");
f("mysqli::stmt_init", "['mysqli_stmt','link='=>'mysqli']");
f("mysqli_stmt_insert_id", "['','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::insert_id", "['']");
f("mysqli_stmt::more_results", "['bool']");
f("mysqli_stmt_more_results", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::next_result", "['bool']");
f("mysqli_stmt_next_result", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::num_rows", "['int']");
f("mysqli_stmt_num_rows", "['int','stmt'=>'mysqli_stmt']");
f("mysqli_stmt_param_count", "['int','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::param_count", "['int']");
f("mysqli_stmt::prepare", "['bool','query'=>'string']");
f("mysqli_stmt_prepare", "['bool','stmt'=>'mysqli_stmt','query'=>'string']");
f("mysqli_stmt::reset", "['bool']");
f("mysqli_stmt_reset", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::result_metadata", "['mysqli_result']");
f("mysqli_stmt_result_metadata", "['mysqli_result','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::send_long_data", "['bool','param_nr'=>'int','data'=>'string']");
f("mysqli_stmt_send_long_data", "['bool','stmt'=>'mysqli_stmt','param_nr'=>'int','data'=>'string']");
f("mysqli_stmt_sqlstate", "['string','stmt'=>'mysqli_stmt']");
f("mysqli_stmt::sqlstate", "['string']");
f("mysqli_stmt::store_result", "['bool']");
f("mysqli_stmt_store_result", "['bool','stmt'=>'mysqli_stmt']");
f("mysqli_store_result", "['mysqli_result|bool','link'=>'mysqli','flags='=>'int']");
f("mysqli::store_result", "['mysqli_result','link='=>'mysqli']");
f("mysqli_thread_id", "['int','link'=>'mysqli']");
f("mysqli::thread_id", "['int','link='=>'mysqli']");
f("mysqli_thread_safe", "['bool']");
f("mysqli::thread_safe", "['bool']");
f("mysqli_use_result", "['mysqli_result|bool','link'=>'mysqli']");
f("mysqli::use_result", "['mysqli_result','link='=>'mysqli']");
f("mysqli_warning_count", "['int','link'=>'mysqli']");
f("mysqli::warning_count", "['int','link='=>'mysqli']");
f("mysqli_warning::next", "['']");
f("mysql_list_dbs", "['resource','link_identifier='=>'']");
f("mysql_list_fields", "['resource','database_name'=>'string','table_name'=>'string','link_identifier='=>'']");
f("mysql_list_processes", "['resource','link_identifier='=>'']");
f("mysql_list_tables", "['resource','database'=>'string','link_identifier='=>'']");
f("mysqlnd_memcache_get_config", "['array','connection'=>'mixed']");
f("mysqlnd_memcache_set", "['bool','mysql_connection'=>'mixed','memcache_connection='=>'Memcached','pattern='=>'string','callback='=>'callable']");
f("mysqlnd_ms_dump_servers", "['array','connection'=>'mixed']");
f("mysqlnd_ms_fabric_select_global", "['array','connection'=>'mixed','table_name'=>'mixed']");
f("mysqlnd_ms_fabric_select_shard", "['array','connection'=>'mixed','table_name'=>'mixed','shard_key'=>'mixed']");
f("mysqlnd_ms_get_last_gtid", "['string','connection'=>'mixed']");
f("mysqlnd_ms_get_last_used_connection", "['array','connection'=>'mixed']");
f("mysqlnd_ms_get_stats", "['array']");
f("mysqlnd_ms_match_wild", "['bool','table_name'=>'string','wildcard'=>'string']");
f("mysqlnd_ms_query_is_select", "['int','query'=>'string']");
f("mysqlnd_ms_set_qos", "['bool','connection'=>'mixed','service_level'=>'int','service_level_option='=>'int','option_value='=>'mixed']");
f("mysqlnd_ms_set_user_pick_server", "['bool','function'=>'string']");
f("mysqlnd_ms_xa_begin", "['int','connection'=>'mixed','gtrid'=>'string','timeout='=>'int']");
f("mysqlnd_ms_xa_commit", "['int','connection'=>'mixed','gtrid'=>'string']");
f("mysqlnd_ms_xa_gc", "['int','connection'=>'mixed','gtrid='=>'string','ignore_max_retries='=>'bool']");
f("mysqlnd_ms_xa_rollback", "['int','connection'=>'mixed','gtrid'=>'string']");
f("mysqlnd_qc_change_handler", "['bool','handler'=>'']");
f("mysqlnd_qc_clear_cache", "['bool']");
f("mysqlnd_qc_get_available_handlers", "['array']");
f("mysqlnd_qc_get_cache_info", "['array']");
f("mysqlnd_qc_get_core_stats", "['array']");
f("mysqlnd_qc_get_handler", "['array']");
f("mysqlnd_qc_get_normalized_query_trace_log", "['array']");
f("mysqlnd_qc_get_query_trace_log", "['array']");
f("mysqlnd_qc_set_cache_condition", "['bool','condition_type'=>'int','condition'=>'mixed','condition_option'=>'mixed']");
f("mysqlnd_qc_set_is_select", "['mixed','callback'=>'string']");
f("mysqlnd_qc_set_storage_handler", "['bool','handler'=>'string']");
f("mysqlnd_qc_set_user_handlers", "['bool','get_hash'=>'string','find_query_in_cache'=>'string','return_to_cache'=>'string','add_query_to_cache_if_not_exists'=>'string','query_is_select'=>'string','update_query_run_time_stats'=>'string','get_stats'=>'string','clear_cache'=>'string']");
f("MysqlndUhConnection::changeUser", "['bool','connection'=>'mysqlnd_connection','user'=>'string','password'=>'string','database'=>'string','silent'=>'bool','passwd_len'=>'int']");
f("MysqlndUhConnection::charsetName", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::close", "['bool','connection'=>'mysqlnd_connection','close_type'=>'int']");
f("MysqlndUhConnection::connect", "['bool','connection'=>'mysqlnd_connection','host'=>'string','use\"'=>'string','password'=>'string','database'=>'string','port'=>'int','socket'=>'string','mysql_flags'=>'int']");
f("MysqlndUhConnection::__construct", "['']");
f("MysqlndUhConnection::endPSession", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::escapeString", "['string','connection'=>'mysqlnd_connection','escape_string'=>'string']");
f("MysqlndUhConnection::getAffectedRows", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getErrorNumber", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getErrorString", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getFieldCount", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getHostInformation", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getLastInsertId", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getLastMessage", "['void','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getProtocolInformation", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getServerInformation", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getServerStatistics", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getServerVersion", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getSqlstate", "['string','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getStatistics", "['array','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getThreadId", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::getWarningCount", "['int','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::init", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::killConnection", "['bool','connection'=>'mysqlnd_connection','pid'=>'int']");
f("MysqlndUhConnection::listFields", "['array','connection'=>'mysqlnd_connection','table'=>'string','achtung_wild'=>'string']");
f("MysqlndUhConnection::listMethod", "['void','connection'=>'mysqlnd_connection','query'=>'string','achtung_wild'=>'string','par1'=>'string']");
f("MysqlndUhConnection::moreResults", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::nextResult", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::ping", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::query", "['bool','connection'=>'mysqlnd_connection','query'=>'string']");
f("MysqlndUhConnection::queryReadResultsetHeader", "['bool','connection'=>'mysqlnd_connection','mysqlnd_stmt'=>'mysqlnd_statement']");
f("MysqlndUhConnection::reapQuery", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::refreshServer", "['bool','connection'=>'mysqlnd_connection','options'=>'int']");
f("MysqlndUhConnection::restartPSession", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::selectDb", "['bool','connection'=>'mysqlnd_connection','database'=>'string']");
f("MysqlndUhConnection::sendClose", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::sendQuery", "['bool','connection'=>'mysqlnd_connection','query'=>'string']");
f("MysqlndUhConnection::serverDumpDebugInformation", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::setAutocommit", "['bool','connection'=>'mysqlnd_connection','mode'=>'int']");
f("MysqlndUhConnection::setCharset", "['bool','connection'=>'mysqlnd_connection','charset'=>'string']");
f("MysqlndUhConnection::setClientOption", "['bool','connection'=>'mysqlnd_connection','option'=>'int','value'=>'int']");
f("MysqlndUhConnection::setServerOption", "['void','connection'=>'mysqlnd_connection','option'=>'int']");
f("MysqlndUhConnection::shutdownServer", "['void','MYSQLND_UH_RES_MYSQLND_NAME'=>'string','level'=>'string']");
f("MysqlndUhConnection::simpleCommand", "['bool','connection'=>'mysqlnd_connection','command'=>'int','arg'=>'string','ok_packet'=>'int','silent'=>'bool','ignore_upsert_status'=>'bool']");
f("MysqlndUhConnection::simpleCommandHandleResponse", "['bool','connection'=>'mysqlnd_connection','ok_packet'=>'int','silent'=>'bool','command'=>'int','ignore_upsert_status'=>'bool']");
f("MysqlndUhConnection::sslSet", "['bool','connection'=>'mysqlnd_connection','key'=>'string','cert'=>'string','ca'=>'string','capath'=>'string','cipher'=>'string']");
f("MysqlndUhConnection::stmtInit", "['resource','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::storeResult", "['resource','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::txCommit", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::txRollback", "['bool','connection'=>'mysqlnd_connection']");
f("MysqlndUhConnection::useResult", "['resource','connection'=>'mysqlnd_connection']");
f("mysqlnd_uh_convert_to_mysqlnd", "['resource','&mysql_connection'=>'mysqli']");
f("MysqlndUhPreparedStatement::__construct", "['']");
f("MysqlndUhPreparedStatement::execute", "['bool','statement'=>'mysqlnd_prepared_statement']");
f("MysqlndUhPreparedStatement::prepare", "['bool','statement'=>'mysqlnd_prepared_statement','query'=>'string']");
f("mysqlnd_uh_set_connection_proxy", "['bool','&connection_proxy'=>'MysqlndUhConnection','&mysqli_connection='=>'mysqli']");
f("mysqlnd_uh_set_statement_proxy", "['bool','&statement_proxy'=>'MysqlndUhStatement']");
f("mysql_num_fields", "['int','result'=>'']");
f("mysql_num_rows", "['int','result'=>'']");
f("mysql_pconnect", "['resource','server='=>'string','username='=>'string','password='=>'string','client_flags='=>'int']");
f("mysql_ping", "['bool','link_identifier='=>'']");
f("mysql_query", "['resource','query'=>'string','link_identifier='=>'']");
f("mysql_real_escape_string", "['string','unescaped_string'=>'string','link_identifier='=>'']");
f("mysql_result", "['string','result'=>'','row'=>'int','field='=>'']");
f("mysql_select_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("mysql_set_charset", "['bool','charset'=>'string','link_identifier='=>'']");
f("mysql_stat", "['string','link_identifier='=>'']");
f("mysql_tablename", "['string','result'=>'','i'=>'int']");
f("mysql_thread_id", "['int','link_identifier='=>'']");
f("mysql_unbuffered_query", "['resource','query'=>'string','link_identifier='=>'']");
f("natcasesort", "['bool','array_arg'=>'array']");
f("natsort", "['bool','array_arg'=>'array']");
f("ncurses_addch", "['int','ch'=>'int']");
f("ncurses_addchnstr", "['int','s'=>'string','n'=>'int']");
f("ncurses_addchstr", "['int','s'=>'string']");
f("ncurses_addnstr", "['int','s'=>'string','n'=>'int']");
f("ncurses_addstr", "['int','text'=>'string']");
f("ncurses_assume_default_colors", "['int','fg'=>'int','bg'=>'int']");
f("ncurses_attroff", "['int','attributes'=>'int']");
f("ncurses_attron", "['int','attributes'=>'int']");
f("ncurses_attrset", "['int','attributes'=>'int']");
f("ncurses_baudrate", "['int']");
f("ncurses_beep", "['int']");
f("ncurses_bkgd", "['int','attrchar'=>'int']");
f("ncurses_bkgdset", "['','attrchar'=>'int']");
f("ncurses_border", "['int','left'=>'int','right'=>'int','top'=>'int','bottom'=>'int','tl_corner'=>'int','tr_corner'=>'int','bl_corner'=>'int','br_corner'=>'int']");
f("ncurses_bottom_panel", "['int','panel'=>'']");
f("ncurses_can_change_color", "['bool']");
f("ncurses_cbreak", "['bool']");
f("ncurses_clear", "['bool']");
f("ncurses_clrtobot", "['bool']");
f("ncurses_clrtoeol", "['bool']");
f("ncurses_color_content", "['int','color'=>'int','r'=>'int','g'=>'int','b'=>'int']");
f("ncurses_color_set", "['int','pair'=>'int']");
f("ncurses_curs_set", "['int','visibility'=>'int']");
f("ncurses_define_key", "['int','definition'=>'string','keycode'=>'int']");
f("ncurses_def_prog_mode", "['bool']");
f("ncurses_def_shell_mode", "['bool']");
f("ncurses_delay_output", "['int','milliseconds'=>'int']");
f("ncurses_delch", "['bool']");
f("ncurses_deleteln", "['bool']");
f("ncurses_del_panel", "['bool','panel'=>'']");
f("ncurses_delwin", "['bool','window'=>'']");
f("ncurses_doupdate", "['bool']");
f("ncurses_echo", "['bool']");
f("ncurses_echochar", "['int','character'=>'int']");
f("ncurses_end", "['int']");
f("ncurses_erase", "['bool']");
f("ncurses_erasechar", "['string']");
f("ncurses_filter", "['']");
f("ncurses_flash", "['bool']");
f("ncurses_flushinp", "['bool']");
f("ncurses_getch", "['int']");
f("ncurses_getmaxyx", "['','window'=>'','y'=>'int','x'=>'int']");
f("ncurses_getmouse", "['bool','mevent'=>'array']");
f("ncurses_getyx", "['','window'=>'','y'=>'int','x'=>'int']");
f("ncurses_halfdelay", "['int','tenth'=>'int']");
f("ncurses_has_colors", "['bool']");
f("ncurses_has_ic", "['bool']");
f("ncurses_has_il", "['bool']");
f("ncurses_has_key", "['int','keycode'=>'int']");
f("ncurses_hide_panel", "['int','panel'=>'']");
f("ncurses_hline", "['int','charattr'=>'int','n'=>'int']");
f("ncurses_inch", "['string']");
f("ncurses_init", "['']");
f("ncurses_init_color", "['int','color'=>'int','r'=>'int','g'=>'int','b'=>'int']");
f("ncurses_init_pair", "['int','pair'=>'int','fg'=>'int','bg'=>'int']");
f("ncurses_insch", "['int','character'=>'int']");
f("ncurses_insdelln", "['int','count'=>'int']");
f("ncurses_insertln", "['int']");
f("ncurses_insstr", "['int','text'=>'string']");
f("ncurses_instr", "['int','buffer'=>'string']");
f("ncurses_isendwin", "['bool']");
f("ncurses_keyok", "['int','keycode'=>'int','enable'=>'bool']");
f("ncurses_keypad", "['int','window'=>'','bf'=>'bool']");
f("ncurses_killchar", "['string']");
f("ncurses_longname", "['string']");
f("ncurses_meta", "['int','window'=>'','8bit'=>'bool']");
f("ncurses_mouseinterval", "['int','milliseconds'=>'int']");
f("ncurses_mousemask", "['int','newmask'=>'int','oldmask'=>'int']");
f("ncurses_mouse_trafo", "['bool','y'=>'int','x'=>'int','toscreen'=>'bool']");
f("ncurses_move", "['int','y'=>'int','x'=>'int']");
f("ncurses_move_panel", "['int','panel'=>'','startx'=>'int','starty'=>'int']");
f("ncurses_mvaddch", "['int','y'=>'int','x'=>'int','c'=>'int']");
f("ncurses_mvaddchnstr", "['int','y'=>'int','x'=>'int','s'=>'string','n'=>'int']");
f("ncurses_mvaddchstr", "['int','y'=>'int','x'=>'int','s'=>'string']");
f("ncurses_mvaddnstr", "['int','y'=>'int','x'=>'int','s'=>'string','n'=>'int']");
f("ncurses_mvaddstr", "['int','y'=>'int','x'=>'int','s'=>'string']");
f("ncurses_mvcur", "['int','old_y'=>'int','old_x'=>'int','new_y'=>'int','new_x'=>'int']");
f("ncurses_mvdelch", "['int','y'=>'int','x'=>'int']");
f("ncurses_mvgetch", "['int','y'=>'int','x'=>'int']");
f("ncurses_mvhline", "['int','y'=>'int','x'=>'int','attrchar'=>'int','n'=>'int']");
f("ncurses_mvinch", "['int','y'=>'int','x'=>'int']");
f("ncurses_mvvline", "['int','y'=>'int','x'=>'int','attrchar'=>'int','n'=>'int']");
f("ncurses_mvwaddstr", "['int','window'=>'','y'=>'int','x'=>'int','text'=>'string']");
f("ncurses_napms", "['int','milliseconds'=>'int']");
f("ncurses_newpad", "['resource','rows'=>'int','cols'=>'int']");
f("ncurses_new_panel", "['resource','window'=>'']");
f("ncurses_newwin", "['resource','rows'=>'int','cols'=>'int','y'=>'int','x'=>'int']");
f("ncurses_nl", "['bool']");
f("ncurses_nocbreak", "['bool']");
f("ncurses_noecho", "['bool']");
f("ncurses_nonl", "['bool']");
f("ncurses_noqiflush", "['']");
f("ncurses_noraw", "['bool']");
f("ncurses_pair_content", "['int','pair'=>'int','f'=>'int','b'=>'int']");
f("ncurses_panel_above", "['resource','panel'=>'']");
f("ncurses_panel_below", "['resource','panel'=>'']");
f("ncurses_panel_window", "['resource','panel'=>'']");
f("ncurses_pnoutrefresh", "['int','pad'=>'','pminrow'=>'int','pmincol'=>'int','sminrow'=>'int','smincol'=>'int','smaxrow'=>'int','smaxcol'=>'int']");
f("ncurses_prefresh", "['int','pad'=>'','pminrow'=>'int','pmincol'=>'int','sminrow'=>'int','smincol'=>'int','smaxrow'=>'int','smaxcol'=>'int']");
f("ncurses_putp", "['int','text'=>'string']");
f("ncurses_qiflush", "['']");
f("ncurses_raw", "['bool']");
f("ncurses_refresh", "['int','ch'=>'int']");
f("ncurses_replace_panel", "['int','panel'=>'','window'=>'']");
f("ncurses_reset_prog_mode", "['int']");
f("ncurses_reset_shell_mode", "['int']");
f("ncurses_resetty", "['bool']");
f("ncurses_savetty", "['bool']");
f("ncurses_scr_dump", "['int','filename'=>'string']");
f("ncurses_scr_init", "['int','filename'=>'string']");
f("ncurses_scrl", "['int','count'=>'int']");
f("ncurses_scr_restore", "['int','filename'=>'string']");
f("ncurses_scr_set", "['int','filename'=>'string']");
f("ncurses_show_panel", "['int','panel'=>'']");
f("ncurses_slk_attr", "['int']");
f("ncurses_slk_attroff", "['int','intarg'=>'int']");
f("ncurses_slk_attron", "['int','intarg'=>'int']");
f("ncurses_slk_attrset", "['int','intarg'=>'int']");
f("ncurses_slk_clear", "['bool']");
f("ncurses_slk_color", "['int','intarg'=>'int']");
f("ncurses_slk_init", "['bool','format'=>'int']");
f("ncurses_slk_noutrefresh", "['bool']");
f("ncurses_slk_refresh", "['int']");
f("ncurses_slk_restore", "['int']");
f("ncurses_slk_set", "['bool','labelnr'=>'int','label'=>'string','format'=>'int']");
f("ncurses_slk_touch", "['int']");
f("ncurses_standend", "['int']");
f("ncurses_standout", "['int']");
f("ncurses_start_color", "['int']");
f("ncurses_termattrs", "['bool']");
f("ncurses_termname", "['string']");
f("ncurses_timeout", "['','millisec'=>'int']");
f("ncurses_top_panel", "['int','panel'=>'']");
f("ncurses_typeahead", "['int','fd'=>'int']");
f("ncurses_ungetch", "['int','keycode'=>'int']");
f("ncurses_ungetmouse", "['bool','mevent'=>'array']");
f("ncurses_update_panels", "['']");
f("ncurses_use_default_colors", "['bool']");
f("ncurses_use_env", "['','flag'=>'bool']");
f("ncurses_use_extended_names", "['int','flag'=>'bool']");
f("ncurses_vidattr", "['int','intarg'=>'int']");
f("ncurses_vline", "['int','charattr'=>'int','n'=>'int']");
f("ncurses_waddch", "['int','window'=>'','ch'=>'int']");
f("ncurses_waddstr", "['int','window'=>'','str'=>'string','n='=>'int']");
f("ncurses_wattroff", "['int','window'=>'','attrs'=>'int']");
f("ncurses_wattron", "['int','window'=>'','attrs'=>'int']");
f("ncurses_wattrset", "['int','window'=>'','attrs'=>'int']");
f("ncurses_wborder", "['int','window'=>'','left'=>'int','right'=>'int','top'=>'int','bottom'=>'int','tl_corner'=>'int','tr_corner'=>'int','bl_corner'=>'int','br_corner'=>'int']");
f("ncurses_wclear", "['int','window'=>'']");
f("ncurses_wcolor_set", "['int','window'=>'','color_pair'=>'int']");
f("ncurses_werase", "['int','window'=>'']");
f("ncurses_wgetch", "['int','window'=>'']");
f("ncurses_whline", "['int','window'=>'','charattr'=>'int','n'=>'int']");
f("ncurses_wmouse_trafo", "['bool','window'=>'','y'=>'int','x'=>'int','toscreen'=>'bool']");
f("ncurses_wmove", "['int','window'=>'','y'=>'int','x'=>'int']");
f("ncurses_wnoutrefresh", "['int','window'=>'']");
f("ncurses_wrefresh", "['int','window'=>'']");
f("ncurses_wstandend", "['int','window'=>'']");
f("ncurses_wstandout", "['int','window'=>'']");
f("ncurses_wvline", "['int','window'=>'','charattr'=>'int','n'=>'int']");
f("newrelic_add_custom_parameter", "['bool','key'=>'string','value'=>'']");
f("newrelic_add_custom_tracer", "['bool','function_name'=>'string']");
f("newrelic_background_job", "['void','flag='=>'bool']");
f("newrelic_capture_params", "['void','enable='=>'bool']");
f("newrelic_custom_metric", "['bool','metric_name'=>'string','value'=>'float']");
f("newrelic_disable_autorum", "['bool']");
f("newrelic_end_of_transaction", "['void']");
f("newrelic_end_transaction", "['bool','ignore='=>'bool']");
f("newrelic_get_browser_timing_footer", "['string','include_tags='=>'bool']");
f("newrelic_get_browser_timing_header", "['string','include_tags='=>'bool']");
f("newrelic_ignore_apdex", "['void']");
f("newrelic_ignore_transaction", "['void']");
f("newrelic_name_transaction", "['bool','name'=>'string']");
f("newrelic_notice_error", "['void','message'=>'string','exception='=>'exception']");
f("newrelic_notice_error\\'1", "['void','unused_1'=>'string','message'=>'string','unused_2'=>'string','unused_3'=>'int','unused_4='=>'']");
f("newrelic_record_custom_event", "['void','name'=>'string','attributes'=>'array']");
f("newrelic_set_appname", "['bool','name'=>'string','license='=>'string','xmit='=>'bool']");
f("newrelic_set_user_attributes", "['bool','user'=>'string','account'=>'string','product'=>'string']");
f("newrelic_start_transaction", "['bool','appname'=>'string','license='=>'string']");
f("newt_bell", "['']");
f("newt_button_bar", "['resource','buttons'=>'array']");
f("newt_button", "['resource','left'=>'int','top'=>'int','text'=>'string']");
f("newt_centered_window", "['int','width'=>'int','height'=>'int','title='=>'string']");
f("newt_checkbox_get_value", "['string','checkbox'=>'']");
f("newt_checkbox", "['resource','left'=>'int','top'=>'int','text'=>'string','def_value'=>'string','seq='=>'string']");
f("newt_checkbox_set_flags", "['','checkbox'=>'','flags'=>'int','sense'=>'int']");
f("newt_checkbox_set_value", "['','checkbox'=>'','value'=>'string']");
f("newt_checkbox_tree_add_item", "['','checkboxtree'=>'','text'=>'string','data'=>'','flags'=>'int','index'=>'int','...='=>'int']");
f("newt_checkbox_tree_find_item", "['array','checkboxtree'=>'','data'=>'']");
f("newt_checkbox_tree_get_current", "['','checkboxtree'=>'']");
f("newt_checkbox_tree_get_entry_value", "['string','checkboxtree'=>'','data'=>'']");
f("newt_checkbox_tree_get_multi_selection", "['array','checkboxtree'=>'','seqnum'=>'string']");
f("newt_checkbox_tree_get_selection", "['array','checkboxtree'=>'']");
f("newt_checkbox_tree_multi", "['resource','left'=>'int','top'=>'int','height'=>'int','seq'=>'string','flags='=>'int']");
f("newt_checkbox_tree", "['resource','left'=>'int','top'=>'int','height'=>'int','flags='=>'int']");
f("newt_checkbox_tree_set_current", "['','checkboxtree'=>'','data'=>'']");
f("newt_checkbox_tree_set_entry", "['','checkboxtree'=>'','data'=>'','text'=>'string']");
f("newt_checkbox_tree_set_entry_value", "['','checkboxtree'=>'','data'=>'','value'=>'string']");
f("newt_checkbox_tree_set_width", "['','checkbox_tree'=>'','width'=>'int']");
f("newt_clear_key_buffer", "['']");
f("newt_cls", "['']");
f("newt_compact_button", "['resource','left'=>'int','top'=>'int','text'=>'string']");
f("newt_component_add_callback", "['','component'=>'','func_name'=>'','data'=>'']");
f("newt_component_takes_focus", "['','component'=>'','takes_focus'=>'bool']");
f("newt_create_grid", "['resource','cols'=>'int','rows'=>'int']");
f("newt_cursor_off", "['']");
f("newt_cursor_on", "['']");
f("newt_delay", "['','microseconds'=>'int']");
f("newt_draw_form", "['','form'=>'']");
f("newt_draw_root_text", "['','left'=>'int','top'=>'int','text'=>'string']");
f("newt_entry_get_value", "['string','entry'=>'']");
f("newt_entry", "['resource','left'=>'int','top'=>'int','width'=>'int','init_value='=>'string','flags='=>'int']");
f("newt_entry_set", "['','entry'=>'','value'=>'string','cursor_at_end='=>'bool']");
f("newt_entry_set_filter", "['','entry'=>'','filter'=>'callable','data'=>'']");
f("newt_entry_set_flags", "['','entry'=>'','flags'=>'int','sense'=>'int']");
f("newt_finished", "['int']");
f("newt_form_add_component", "['','form'=>'','component'=>'']");
f("newt_form_add_components", "['','form'=>'','components'=>'array']");
f("newt_form_add_hot_key", "['','form'=>'','key'=>'int']");
f("newt_form_destroy", "['','form'=>'']");
f("newt_form_get_current", "['resource','form'=>'']");
f("newt_form", "['resource','vert_bar='=>'','help='=>'string','flags='=>'int']");
f("newt_form_run", "['','form'=>'','exit_struct'=>'array']");
f("newt_form_set_background", "['','from'=>'','background'=>'int']");
f("newt_form_set_height", "['','form'=>'','height'=>'int']");
f("newt_form_set_size", "['','form'=>'']");
f("newt_form_set_timer", "['','form'=>'','milliseconds'=>'int']");
f("newt_form_set_width", "['','form'=>'','width'=>'int']");
f("newt_form_watch_fd", "['','form'=>'','stream'=>'','flags='=>'int']");
f("newt_get_screen_size", "['','cols'=>'int','rows'=>'int']");
f("newt_grid_add_components_to_form", "['','grid'=>'','form'=>'','recurse'=>'bool']");
f("newt_grid_basic_window", "['resource','text'=>'','middle'=>'','buttons'=>'']");
f("newt_grid_free", "['','grid'=>'','recurse'=>'bool']");
f("newt_grid_get_size", "['','grid'=>'resouce','width'=>'int','height'=>'int']");
f("newt_grid_h_close_stacked", "['resource','element1_type'=>'int','element1'=>'','...='=>'']");
f("newt_grid_h_stacked", "['resource','element1_type'=>'int','element1'=>'','...='=>'']");
f("newt_grid_place", "['','grid'=>'','left'=>'int','top'=>'int']");
f("newt_grid_set_field", "['','grid'=>'','col'=>'int','row'=>'int','type'=>'int','val'=>'','pad_left'=>'int','pad_top'=>'int','pad_right'=>'int','pad_bottom'=>'int','anchor'=>'int','flags='=>'int']");
f("newt_grid_simple_window", "['resource','text'=>'','middle'=>'','buttons'=>'']");
f("newt_grid_v_close_stacked", "['resource','element1_type'=>'int','element1'=>'','...='=>'']");
f("newt_grid_v_stacked", "['resource','element1_type'=>'int','element1'=>'','...='=>'']");
f("newt_grid_wrapped_window_at", "['','grid'=>'','title'=>'string','left'=>'int','top'=>'int']");
f("newt_grid_wrapped_window", "['','grid'=>'','title'=>'string']");
f("newt_init", "['int']");
f("newt_label", "['resource','left'=>'int','top'=>'int','text'=>'string']");
f("newt_label_set_text", "['','label'=>'','text'=>'string']");
f("newt_listbox_append_entry", "['','listbox'=>'','text'=>'string','data'=>'']");
f("newt_listbox_clear", "['','listobx'=>'']");
f("newt_listbox_clear_selection", "['','listbox'=>'']");
f("newt_listbox_delete_entry", "['','listbox'=>'','key'=>'']");
f("newt_listbox_get_current", "['string','listbox'=>'']");
f("newt_listbox_get_selection", "['array','listbox'=>'']");
f("newt_listbox_insert_entry", "['','listbox'=>'','text'=>'string','data'=>'','key'=>'']");
f("newt_listbox_item_count", "['int','listbox'=>'']");
f("newt_listbox", "['resource','left'=>'int','top'=>'int','height'=>'int','flags='=>'int']");
f("newt_listbox_select_item", "['','listbox'=>'','key'=>'','sense'=>'int']");
f("newt_listbox_set_current_by_key", "['','listbox'=>'','key'=>'']");
f("newt_listbox_set_current", "['','listbox'=>'','num'=>'int']");
f("newt_listbox_set_data", "['','listbox'=>'','num'=>'int','data'=>'']");
f("newt_listbox_set_entry", "['','listbox'=>'','num'=>'int','text'=>'string']");
f("newt_listbox_set_width", "['','listbox'=>'','width'=>'int']");
f("newt_listitem_get_data", "['','item'=>'']");
f("newt_listitem", "['resource','left'=>'int','top'=>'int','text'=>'string','is_default'=>'bool','prev_item'=>'resouce','data'=>'','flags='=>'int']");
f("newt_listitem_set", "['','item'=>'','text'=>'string']");
f("newt_open_window", "['int','left'=>'int','top'=>'int','width'=>'int','height'=>'int','title='=>'string']");
f("newt_pop_help_line", "['']");
f("newt_pop_window", "['']");
f("newt_push_help_line", "['','text='=>'string']");
f("newt_radiobutton", "['resource','left'=>'int','top'=>'int','text'=>'string','is_default'=>'bool','prev_button='=>'']");
f("newt_radio_get_current", "['resource','set_member'=>'']");
f("newt_redraw_help_line", "['']");
f("newt_reflow_text", "['string','text'=>'string','width'=>'int','flex_down'=>'int','flex_up'=>'int','actual_width'=>'int','actual_height'=>'int']");
f("newt_refresh", "['']");
f("newt_resize_screen", "['','redraw='=>'bool']");
f("newt_resume", "['']");
f("newt_run_form", "['resource','form'=>'']");
f("newt_scale", "['resource','left'=>'int','top'=>'int','width'=>'int','full_value'=>'int']");
f("newt_scale_set", "['','scale'=>'','amount'=>'int']");
f("newt_scrollbar_set", "['','scrollbar'=>'','where'=>'int','total'=>'int']");
f("newt_set_help_callback", "['','function'=>'']");
f("newt_set_suspend_callback", "['','function'=>'callable','data'=>'']");
f("newt_suspend", "['']");
f("newt_textbox_get_num_lines", "['int','textbox'=>'']");
f("newt_textbox_reflowed", "['resource','left'=>'int','top'=>'int','*text'=>'char','width'=>'int','flex_down'=>'int','flex_up'=>'int','flags='=>'int']");
f("newt_textbox", "['resource','left'=>'int','top'=>'int','width'=>'int','height'=>'int','flags='=>'int']");
f("newt_textbox_set_height", "['','textbox'=>'','height'=>'int']");
f("newt_textbox_set_text", "['','textbox'=>'','text'=>'string']");
f("newt_vertical_scrollbar", "['resource','left'=>'int','top'=>'int','height'=>'int','normal_colorset='=>'int','thumb_colorset='=>'int']");
f("newt_wait_for_key", "['']");
f("newt_win_choice", "['int','title'=>'string','button1_text'=>'string','button2_text'=>'string','format'=>'string','args='=>'','...='=>'']");
f("newt_win_entries", "['int','title'=>'string','text'=>'string','suggested_width'=>'int','flex_down'=>'int','flex_up'=>'int','data_width'=>'int','items'=>'array','button1'=>'string','...='=>'string']");
f("newt_win_menu", "['int','title'=>'string','text'=>'string','suggestedwidth'=>'int','flexdown'=>'int','flexup'=>'int','maxlistheight'=>'int','items'=>'array','listitem'=>'int','button1='=>'string','...='=>'string']");
f("newt_win_message", "['','title'=>'string','button_text'=>'string','format'=>'string','args='=>'','...='=>'']");
f("newt_win_messagev", "['','title'=>'string','button_text'=>'string','format'=>'string','args'=>'array']");
f("newt_win_ternary", "['int','title'=>'string','button1_text'=>'string','button2_text'=>'string','button3_text'=>'string','format'=>'string','args='=>'','...='=>'']");
f("next", "['','array_arg'=>'array']");
f("ngettext", "['string','msgid1'=>'string','msgid2'=>'string','n'=>'int']");
f("nl2br", "['string','str'=>'string','is_xhtml='=>'bool']");
f("nl_langinfo", "['string','item'=>'int']");
f("NoRewindIterator::__construct", "['NoRewindIterator','it'=>'iterator']");
f("NoRewindIterator::current", "['']");
f("NoRewindIterator::getInnerIterator", "['iterator']");
f("NoRewindIterator::key", "['']");
f("NoRewindIterator::next", "['']");
f("NoRewindIterator::rewind", "['']");
f("NoRewindIterator::valid", "['bool']");
f("normalizer_is_normalized", "['bool','input'=>'string','form='=>'int']");
f("Normalizer::isNormalized", "['bool','input'=>'string','form='=>'int']");
f("normalizer_normalize", "['string','input'=>'string','form='=>'int']");
f("Normalizer::normalize", "['string','input'=>'string','form='=>'int']");
f("notes_body", "['array','server'=>'string','mailbox'=>'string','msg_number'=>'int']");
f("notes_copy_db", "['bool','from_database_name'=>'string','to_database_name'=>'string']");
f("notes_create_db", "['bool','database_name'=>'string']");
f("notes_create_note", "['bool','database_name'=>'string','form_name'=>'string']");
f("notes_drop_db", "['bool','database_name'=>'string']");
f("notes_find_note", "['int','database_name'=>'string','name'=>'string','type='=>'string']");
f("notes_header_info", "['any','server'=>'string','mailbox'=>'string','msg_number'=>'int']");
f("notes_list_msgs", "['bool','db'=>'string']");
f("notes_mark_read", "['bool','database_name'=>'string','user_name'=>'string','note_id'=>'string']");
f("notes_mark_unread", "['bool','database_name'=>'string','user_name'=>'string','note_id'=>'string']");
f("notes_nav_create", "['bool','database_name'=>'string','name'=>'string']");
f("notes_search", "['array','database_name'=>'string','keywords'=>'string']");
f("notes_unread", "['array','database_name'=>'string','user_name'=>'string']");
f("notes_version", "['float','database_name'=>'string']");
f("nsapi_request_headers", "['array']");
f("nsapi_response_headers", "['array']");
f("nsapi_virtual", "['bool','uri'=>'string']");
f("nthmac", "['string','clent'=>'string','data'=>'string']");
f("number_format\\'1", "['string','number'=>'float','num_decimal_places'=>'int','dec_separator'=>'string','thousands_separator'=>'string']");
f("number_format", "['string','number'=>'float','num_decimal_places='=>'int']");
f("NumberFormatter::__construct", "['NumberFormatter','locale'=>'string','style'=>'int','pattern='=>'string']");
f("NumberFormatter::create", "['NumberFormatter','locale'=>'string','style'=>'int','pattern='=>'string']");
f("NumberFormatter::formatCurrency", "['string','num'=>'float','currency'=>'string']");
f("NumberFormatter::format", "['string','num'=>'','type='=>'int']");
f("NumberFormatter::getAttribute", "['int','attr'=>'int']");
f("NumberFormatter::getErrorCode", "['int']");
f("NumberFormatter::getErrorMessage", "['string']");
f("NumberFormatter::getLocale", "['string','type='=>'int']");
f("NumberFormatter::getPattern", "['string']");
f("NumberFormatter::getSymbol", "['string','attr'=>'int']");
f("NumberFormatter::getTextAttribute", "['string','attr'=>'int']");
f("NumberFormatter::parseCurrency", "['float','str'=>'string','&currency'=>'string','&position='=>'int']");
f("NumberFormatter::parse", "['float|false','str'=>'string','type='=>'int','&position='=>'int']");
f("NumberFormatter::setAttribute", "['bool','attr'=>'int','value'=>'']");
f("NumberFormatter::setPattern", "['bool','pattern'=>'string']");
f("NumberFormatter::setSymbol", "['bool','attr'=>'int','symbol'=>'string']");
f("NumberFormatter::setTextAttribute", "['bool','attr'=>'int','value'=>'string']");
f("numfmt_create", "['NumberFormatter','locale'=>'string','style'=>'int','pattern='=>'string']");
f("numfmt_format_currency", "['string|bool','fmt'=>'numberformatter','value'=>'float','currency'=>'string']");
f("numfmt_format", "['string','fmt='=>'numberformatter','value'=>'float','type='=>'int']");
f("numfmt_get_attribute", "['int','fmt'=>'numberformatter','attr'=>'int']");
f("numfmt_get_error_code", "['int','fmt'=>'numberformatter']");
f("numfmt_get_error_message", "['string','fmt'=>'numberformatter']");
f("numfmt_get_locale", "['string','fmt'=>'numberformatter','type='=>'int']");
f("numfmt_get_pattern", "['string','fmt'=>'numberformatter']");
f("numfmt_get_symbol", "['string','fmt'=>'numberformatter','attr'=>'int']");
f("numfmt_get_text_attribute", "['string','fmt'=>'numberformatter','attr'=>'int']");
f("numfmt_parse_currency", "['float|false','fmt'=>'numberformatter','value'=>'string','currency'=>'string','position='=>'int']");
f("numfmt_parse", "['float|false','fmt'=>'numberformatter','value'=>'string','type='=>'int','position='=>'int']");
f("numfmt_set_attribute", "['bool','fmt'=>'numberformatter','attr'=>'int','value'=>'int']");
f("numfmt_set_pattern", "['bool','fmt'=>'numberformatter','pattern'=>'string']");
f("numfmt_set_symbol", "['bool','fmt'=>'numberformatter','attr'=>'int','value'=>'string']");
f("numfmt_set_text_attribute", "['bool','fmt'=>'numberformatter','attr'=>'int','value'=>'string']");
f("OAuth::__construct", "['','consumer_key'=>'string','consumer_secret'=>'string','signature_method='=>'string','auth_type='=>'int']");
f("OAuth::__destruct", "['']");
f("OAuth::disableDebug", "['bool']");
f("OAuth::disableRedirects", "['bool']");
f("OAuth::disableSSLChecks", "['bool']");
f("OAuth::enableDebug", "['bool']");
f("OAuth::enableRedirects", "['bool']");
f("OAuth::enableSSLChecks", "['bool']");
f("OAuth::fetch", "['','protected_resource_url'=>'string','extra_parameters='=>'array','http_method='=>'string','http_headers='=>'array']");
f("OAuth::generateSignature", "['string','http_method'=>'string','url'=>'string','extra_parameters='=>'mixed']");
f("OAuth::getAccessToken", "['array','access_token_url'=>'string','auth_session_handle='=>'string','verifier_token='=>'string']");
f("OAuth::getCAPath", "['array']");
f("OAuth::getLastResponseHeaders", "['string']");
f("OAuth::getLastResponseInfo", "['array']");
f("OAuth::getLastResponse", "['string']");
f("OAuth::getRequestHeader", "['string','http_method'=>'string','url'=>'string','extra_parameters='=>'mixed']");
f("OAuth::getRequestToken", "['array','request_token_url'=>'string','callback_url='=>'string']");
f("oauth_get_sbs", "['string','http_method'=>'string','uri'=>'string','request_parameters='=>'array']");
f("OAuthProvider::addRequiredParameter", "['bool','req_params'=>'string']");
f("OAuthProvider::callconsumerHandler", "['']");
f("OAuthProvider::callTimestampNonceHandler", "['']");
f("OAuthProvider::calltokenHandler", "['']");
f("OAuthProvider::checkOAuthRequest", "['','uri='=>'string','method='=>'string']");
f("OAuthProvider::__construct", "['OAuthProvider','params_array='=>'array']");
f("OAuthProvider::consumerHandler", "['','callback_function'=>'callable']");
f("OAuthProvider::generateToken", "['string','size'=>'int','strong='=>'bool']");
f("OAuthProvider::is2LeggedEndpoint", "['','params_array'=>'']");
f("OAuthProvider::isRequestTokenEndpoint", "['','will_issue_request_token'=>'bool']");
f("OAuthProvider::removeRequiredParameter", "['bool','req_params'=>'string']");
f("OAuthProvider::reportProblem", "['string','oauthexception'=>'string','send_headers='=>'bool']");
f("OAuthProvider::setParam", "['bool','param_key'=>'string','param_val='=>'']");
f("OAuthProvider::setRequestTokenPath", "['bool','path'=>'string']");
f("OAuthProvider::timestampNonceHandler", "['','callback_function'=>'callable']");
f("OAuthProvider::tokenHandler", "['','callback_function'=>'callable']");
f("OAuth::setAuthType", "['','auth_type'=>'int']");
f("OAuth::setCAPath", "['','ca_path='=>'string','ca_info='=>'string']");
f("OAuth::setNonce", "['','nonce'=>'string']");
f("OAuth::setRequestEngine", "['','reqengine'=>'int']");
f("OAuth::setRSACertificate", "['','cert'=>'string']");
f("OAuth::setSSLChecks", "['bool','sslcheck'=>'int']");
f("OAuth::setTimestamp", "['','timestamp'=>'string']");
f("OAuth::setToken", "['bool','token'=>'string','token_secret'=>'string']");
f("OAuth::setVersion", "['bool','version'=>'string']");
f("oauth_urlencode", "['string','uri'=>'string']");
f("ob_clean", "['bool']");
f("ob_deflatehandler", "['string','data'=>'string','mode'=>'int']");
f("ob_end_clean", "['bool']");
f("ob_end_flush", "['bool']");
f("ob_etaghandler", "['string','data'=>'string','mode'=>'int']");
f("ob_flush", "['bool']");
f("ob_get_clean", "['string|false']");
f("ob_get_contents", "['string|false']");
f("ob_get_flush", "['string|false']");
f("ob_get_length", "['int|false']");
f("ob_get_level", "['int']");
f("ob_get_status", "['false|array','full_status='=>'bool']");
f("ob_gzhandler", "['string|bool','data'=>'string','flags'=>'int']");
f("ob_iconv_handler", "['string','contents'=>'string','status'=>'int']");
f("ob_implicit_flush", "['','flag='=>'int']");
f("ob_inflatehandler", "['string','data'=>'string','mode'=>'int']");
f("ob_list_handlers", "['false|array']");
f("ob_start", "['bool','user_function='=>'string|array|callable|null','chunk_size='=>'int','flags='=>'int']");
f("ob_tidyhandler", "['string','input'=>'string','mode='=>'int']");
f("oci_bind_array_by_name", "['bool','stmt'=>'','name'=>'string','&var'=>'array','max_table_length'=>'int','max_item_length='=>'int','type='=>'int']");
f("oci_bind_by_name", "['bool','stmt'=>'','name'=>'string','&var'=>'','maxlength='=>'int','type='=>'int']");
f("oci_cancel", "['bool','stmt'=>'']");
f("oci_client_version", "['string']");
f("oci_close", "['bool','connection'=>'']");
//f("OCI-Collection::append", "['bool','value'=>'']");
f("oci_collection_append", "['bool','value'=>'string']");
f("oci_collection_assign", "['bool','from'=>'any']");
//f("'OCI-Collection::assign", "['bool','from'=>'oci-collection']");
//f("OCI-Collection::assignElem", "['bool','index'=>'int','value'=>'']");
f("oci_collection_element_assign", "['bool','index'=>'int','val'=>'string']");
f("oci_collection_element_get", "['string','ndx'=>'int']");
//f("OCI-Collection::free", "['bool']");
//f("OCI-Collection::getElem", "['','index'=>'int']");
f("oci_collection_max", "['int']");
//f("OCI-Collection::max", "['int']");
f("oci_collection_size", "['int']");
//f("OCI-Collection::size", "['int']");
f("oci_collection_trim", "['bool','num'=>'int']");
//f("OCI-Collection::trim", "['bool','num'=>'int']");
f("oci_commit", "['bool','connection'=>'']");
f("oci_connect", "['resource','user'=>'string','pass'=>'string','db='=>'string','charset='=>'string','session_mode='=>'int']");
f("oci_define_by_name", "['bool','stmt'=>'','name'=>'string','&var'=>'','type='=>'int']");
f("oci_error", "['array','stmt|connection|global='=>'']");
f("oci_execute", "['bool','stmt'=>'','mode='=>'int']");
f("oci_fetch_all", "['int','stmt'=>'','&output'=>'array','skip='=>'int','maxrows='=>'int','flags='=>'int']");
f("oci_fetch_array", "['array','stmt'=>'','mode='=>'int']");
f("oci_fetch_assoc", "['array','stmt'=>'']");
f("oci_fetch", "['bool','stmt'=>'']");
f("ocifetchinto", "['int','stmt'=>'','&output'=>'array','mode='=>'int']");
f("oci_fetch_object", "['any','stmt'=>'']");
f("oci_fetch_row", "['array','stmt'=>'']");
f("oci_field_is_null", "['bool','stmt'=>'','col'=>'']");
f("oci_field_name", "['string','stmt'=>'','col'=>'']");
f("oci_field_precision", "['int','stmt'=>'','col'=>'']");
f("oci_field_scale", "['int','stmt'=>'','col'=>'']");
f("oci_field_size", "['int','stmt'=>'','col'=>'']");
f("oci_field_type_raw", "['int','stmt'=>'','col'=>'']");
f("oci_field_type", "['','stmt'=>'','col'=>'']");
f("oci_free_collection", "['bool']");
f("oci_free_descriptor", "['bool']");
f("oci_free_statement", "['bool','stmt'=>'']");
f("ocigetbufferinglob", "['bool']");
f("oci_get_implicit", "['bool','stmt'=>'']");
f("oci_get_implicit_resultset", "['resource','statement'=>'resource']");
f("oci_internal_debug", "['','onoff'=>'int']");
//f("'OCI-Lob::append", "['bool','lob_from'=>'oci-lob']");
f("oci_lob_append", "['bool','lob'=>'any']");
f("oci_lob_close", "['bool']");
//f("OCI-Lob::close", "['bool']");
f("oci_lob_copy", "['bool','lob_to'=>'any','lob_from'=>'any','length='=>'int']");
f("oci_lob_eof", "['bool']");
//f("OCI-Lob::eof", "['bool']");
f("oci_lob_erase", "['int','offset'=>'int','length'=>'int']");
//f("OCI-Lob::erase", "['int','offset='=>'int','length='=>'int']");
f("oci_lob_export", "['bool','filename'=>'string','start'=>'int','length'=>'int']");
//f("OCI-Lob::export", "['bool','filename'=>'string','start='=>'int','length='=>'int']");
f("oci_lob_flush", "['bool','flag'=>'int']");
//f("OCI-Lob::flush", "['bool','flag='=>'int']");
//f("OCI-Lob::free", "['bool']");
//f("OCI-Lob::getBuffering", "['bool']");
f("oci_lob_import", "['bool','filename'=>'string']");
//f("OCI-Lob::import", "['bool','filename'=>'string']");
f("oci_lob_is_equal", "['bool','lob1'=>'any','lob2'=>'any']");
f("oci_lob_load", "['string']");
//f("OCI-Lob::load", "['string']");
f("oci_lob_read", "['string','length'=>'int']");
//f("OCI-Lob::read", "['string','length'=>'int']");
f("oci_lob_rewind", "['bool']");
//f("OCI-Lob::rewind", "['bool']");
f("oci_lob_save", "['bool','data'=>'string','offset'=>'int']");
//f("OCI-Lob::save", "['bool','data'=>'string','offset='=>'int']");
f("oci_lob_seek", "['bool','offset'=>'int','whence'=>'int']");
//f("OCI-Lob::seek", "['bool','offset'=>'int','whence='=>'int']");
//f("OCI-Lob::setBuffering", "['bool','on_off'=>'bool']");
f("oci_lob_size", "['int']");
//f("OCI-Lob::size", "['int']");
f("oci_lob_tell", "['int']");
//f("OCI-Lob::tell", "['int']");
f("oci_lob_truncate", "['bool','length'=>'int']");
//f("OCI-Lob::truncate", "['bool','length='=>'int']");
//f("OCI-Lob::write", "['int','data'=>'string','length='=>'int']");
f("oci_lob_write", "['int','string'=>'string','length'=>'int']");
//f("OCI-Lob::writeTemporary", "['bool','data'=>'string','lob_type='=>'int']");
f("oci_lob_write_temporary", "['bool','var'=>'string','lob_type'=>'int']");
f("oci_new_collection", "['any','connection'=>'','tdo'=>'string','schema='=>'string']");
f("oci_new_connect", "['resource','user'=>'string','pass'=>'string','db='=>'string','charset='=>'string','session_mode='=>'int']");
f("oci_new_cursor", "['resource','connection'=>'']");
f("oci_new_descriptor", "['any','connection'=>'','type='=>'int']");
f("oci_num_fields", "['int','stmt'=>'']");
f("oci_num_rows", "['int','stmt'=>'']");
f("oci_parse", "['resource','connection'=>'','statement'=>'string']");
f("oci_password_change", "['bool','connection'=>'','username'=>'string','old_password'=>'string','new_password'=>'string']");
f("oci_pconnect", "['resource','user'=>'string','pass'=>'string','db='=>'string','charset='=>'string','session_mode='=>'int']");
f("oci_result", "['string','stmt'=>'','column'=>'']");
f("oci_rollback", "['bool','connection'=>'']");
f("oci_server_version", "['string','connection'=>'']");
f("oci_set_action", "['bool','connection'=>'','value'=>'string']");
f("ocisetbufferinglob", "['bool','flag'=>'bool']");
f("oci_set_client_identifier", "['bool','connection'=>'','value'=>'string']");
f("oci_set_client_info", "['bool','connection'=>'','value'=>'string']");
f("oci_set_db_operation", "['bool','connection'=>'','value'=>'string']");
f("oci_set_edition", "['bool','value'=>'string']");
f("oci_set_module_name", "['bool','connection'=>'','value'=>'string']");
f("oci_set_prefetch", "['bool','stmt'=>'','prefetch_rows'=>'int']");
f("oci_statement_type", "['string','stmt'=>'']");
f("octdec", "['int','octal_number'=>'string']");
f("odbc_autocommit", "['','connection_id'=>'','onoff='=>'int']");
f("odbc_binmode", "['bool','result_id'=>'int','mode'=>'int']");
f("odbc_close_all", "['']");
f("odbc_close", "['','connection_id'=>'']");
f("odbc_columnprivileges", "['resource','connection_id'=>'','catalog'=>'string','schema'=>'string','table'=>'string','column'=>'string']");
f("odbc_columns", "['resource','connection_id'=>'','qualifier='=>'string','owner='=>'string','table_name='=>'string','column_name='=>'string']");
f("odbc_commit", "['bool','connection_id'=>'']");
f("odbc_connect", "['resource','dsn'=>'string','user'=>'string','password'=>'string','cursor_option='=>'int']");
f("odbc_cursor", "['string','result_id'=>'']");
f("odbc_data_source", "['array','connection_id'=>'','fetch_type'=>'int']");
f("odbc_errormsg", "['string','connection_id='=>'']");
f("odbc_error", "['string','connection_id='=>'']");
f("odbc_exec", "['resource','connection_id'=>'','query'=>'string','flags='=>'int']");
f("odbc_execute", "['bool','result_id'=>'','parameters_array='=>'array']");
f("odbc_fetch_array", "['array','result'=>'resource','rownumber='=>'int']");
f("odbc_fetch_into", "['int','result_id'=>'','&result_array'=>'array','rownumber='=>'int']");
f("odbc_fetch_object", "['any','result'=>'int','rownumber='=>'int']");
f("odbc_fetch_row", "['bool','result_id'=>'','row_number='=>'int']");
f("odbc_field_len", "['int','result_id'=>'','field_number'=>'int']");
f("odbc_field_name", "['string','result_id'=>'','field_number'=>'int']");
f("odbc_field_num", "['int','result_id'=>'','field_name'=>'string']");
f("odbc_field_scale", "['int','result_id'=>'','field_number'=>'int']");
f("odbc_field_type", "['string','result_id'=>'','field_number'=>'int']");
f("odbc_foreignkeys", "['resource','connection_id'=>'','pk_qualifier'=>'string','pk_owner'=>'string','pk_table'=>'string','fk_qualifier'=>'string','fk_owner'=>'string','fk_table'=>'string']");
f("odbc_free_result", "['bool','result_id'=>'']");
f("odbc_gettypeinfo", "['resource','connection_id'=>'','data_type='=>'int']");
f("odbc_longreadlen", "['bool','result_id'=>'int','length'=>'int']");
f("odbc_next_result", "['bool','result_id'=>'']");
f("odbc_num_fields", "['int','result_id'=>'']");
f("odbc_num_rows", "['int','result_id'=>'']");
f("odbc_pconnect", "['resource','dsn'=>'string','user'=>'string','password'=>'string','cursor_option='=>'int']");
f("odbc_prepare", "['resource','connection_id'=>'','query'=>'string']");
f("odbc_primarykeys", "['resource','connection_id'=>'','qualifier'=>'string','owner'=>'string','table'=>'string']");
f("odbc_procedurecolumns", "['resource','connection_id'=>'','qualifier'=>'string','owner'=>'string','proc'=>'string','column'=>'string']");
f("odbc_procedures", "['resource','connection_id'=>'','qualifier'=>'string','owner'=>'string','name'=>'string']");
f("odbc_result_all", "['int','result_id'=>'','format='=>'string']");
f("odbc_result", "['','result_id'=>'','field'=>'']");
f("odbc_rollback", "['bool','connection_id'=>'']");
f("odbc_setoption", "['bool','conn_id|result_id'=>'','which'=>'int','option'=>'int','value'=>'int']");
f("odbc_specialcolumns", "['resource','connection_id'=>'','type'=>'int','qualifier'=>'string','owner'=>'string','table'=>'string','scope'=>'int','nullable'=>'int']");
f("odbc_statistics", "['resource','connection_id'=>'','qualifier'=>'string','owner'=>'string','name'=>'string','unique'=>'int','accuracy'=>'int']");
f("odbc_tableprivileges", "['resource','connection_id'=>'','qualifier'=>'string','owner'=>'string','name'=>'string']");
f("odbc_tables", "['resource','connection_id'=>'','qualifier='=>'string','owner='=>'string','name='=>'string','table_types='=>'string']");
f("opcache_compile_file", "['bool','file'=>'string']");
f("opcache_get_configuration", "['array']");
f("opcache_get_status", "['array','get_scripts='=>'bool']");
f("opcache_invalidate", "['bool','script'=>'string','force='=>'bool']");
f("opcache_is_script_cached", "['bool','script'=>'string']");
f("opcache_reset", "['bool']");
f("openal_buffer_create", "['resource']");
f("openal_buffer_data", "['bool','buffer'=>'','format'=>'int','data'=>'string','freq'=>'int']");
f("openal_buffer_destroy", "['bool','buffer'=>'']");
f("openal_buffer_get", "['int','buffer'=>'','property'=>'int']");
f("openal_buffer_loadwav", "['bool','buffer'=>'','wavfile'=>'string']");
f("openal_context_create", "['resource','device'=>'']");
f("openal_context_current", "['bool','context'=>'']");
f("openal_context_destroy", "['bool','context'=>'']");
f("openal_context_process", "['bool','context'=>'']");
f("openal_context_suspend", "['bool','context'=>'']");
f("openal_device_close", "['bool','device'=>'']");
f("openal_device_open", "['resource','device_desc='=>'string']");
f("openal_listener_get", "['','property'=>'int']");
f("openal_listener_set", "['bool','property'=>'int','setting'=>'']");
f("openal_source_create", "['resource']");
f("openal_source_destroy", "['bool','source'=>'']");
f("openal_source_get", "['','source'=>'','property'=>'int']");
f("openal_source_pause", "['bool','source'=>'']");
f("openal_source_play", "['bool','source'=>'']");
f("openal_source_rewind", "['bool','source'=>'']");
f("openal_source_set", "['bool','source'=>'','property'=>'int','setting'=>'']");
f("openal_source_stop", "['bool','source'=>'']");
f("openal_stream", "['resource','source'=>'','format'=>'int','rate'=>'int']");
f("opendir", "['','path'=>'string','context='=>'']");
f("openlog", "['bool','ident'=>'string','option'=>'int','facility'=>'int']");
f("openssl_cipher_iv_length", "['int','method'=>'string']");
f("openssl_csr_export", "['bool','csr'=>'','&out'=>'string','notext='=>'bool']");
f("openssl_csr_export_to_file", "['bool','csr'=>'','outfilename'=>'string','notext='=>'bool']");
f("openssl_csr_get_public_key", "['resource|false','csr'=>'','use_shortnames='=>'bool']");
f("openssl_csr_get_subject", "['array','csr'=>'','use_shortnames='=>'bool']");
f("openssl_csr_new", "['bool','dn'=>'array','privkey'=>'resource','configargs='=>'array','extraattribs='=>'array']");
f("openssl_csr_sign", "['resource','csr'=>'','x509'=>'','priv_key'=>'','days'=>'int','config_args='=>'array','serial='=>'int']");
f("openssl_decrypt", "['string','data'=>'string','method'=>'string','password'=>'string','options='=>'int','iv='=>'string']");
f("openssl_dh_compute_key", "['string','pub_key'=>'string','dh_key'=>'']");
f("openssl_digest", "['string','data'=>'string','method'=>'string','raw_output='=>'bool']");
f("openssl_encrypt", "['string','data'=>'string','method'=>'string','password'=>'string','options='=>'int','iv='=>'string']");
f("openssl_error_string", "['string']");
f("openssl_free_key", "['','key_identifier'=>'']");
f("openssl_get_cert_locations", "['array']");
f("openssl_get_cipher_methods", "['array','aliases='=>'bool']");
f("openssl_get_md_methods", "['array','aliases='=>'bool']");
f("openssl_open", "['bool','data'=>'string','&opendata'=>'string','ekey'=>'string','privkey'=>'string|array|resource','method='=>'string']");
f("openssl_pbkdf2", "['string','password'=>'string','salt'=>'string','key_length'=>'int','iterations'=>'int','digest_method'=>'string']");
f("openssl_pkcs12_export", "['bool','x509'=>'','&out'=>'string','priv_key'=>'string|array|resource','pass'=>'string','args='=>'array']");
f("openssl_pkcs12_export_to_file", "['bool','x509'=>'','filename'=>'string','priv_key'=>'string|array|resource','pass'=>'string','args='=>'array']");
f("openssl_pkcs12_read", "['bool','pkcs12'=>'string','&certs'=>'array','pass'=>'string']");
f("openssl_pkcs7_decrypt", "['bool','infilename'=>'string','outfilename'=>'string','recipcert'=>'','recipkey='=>'']");
f("openssl_pkcs7_encrypt", "['bool','infile'=>'string','outfile'=>'string','recipcerts'=>'','headers'=>'array','flags='=>'int','cipher='=>'int']");
f("openssl_pkcs7_sign", "['bool','infile'=>'string','outfile'=>'string','signcert'=>'','signkey'=>'','headers'=>'array','flags='=>'int','extracertsfilename='=>'string']");
f("openssl_pkcs7_verify", "['bool','filename'=>'string','flags'=>'int','signerscerts='=>'string','cainfo='=>'array','extracerts='=>'string','content='=>'string']");
f("openssl_pkey_export", "['bool','key'=>'','&out'=>'','passphrase='=>'string','config_args='=>'array']");
f("openssl_pkey_export_to_file", "['bool','key'=>'','outfilename'=>'string','passphrase='=>'string','config_args='=>'array']");
f("openssl_pkey_free", "['','key'=>'int']");
f("openssl_pkey_get_details", "['array|false','key'=>'']");
f("openssl_pkey_get_private", "['resource','key'=>'string','passphrase='=>'string']");
f("openssl_pkey_get_public", "['resource','cert'=>'']");
f("openssl_pkey_new", "['resource','configargs='=>'array']");
f("openssl_private_decrypt", "['bool','data'=>'string','&decrypted'=>'string','key'=>'','padding='=>'int']");
f("openssl_private_encrypt", "['bool','data'=>'string','&crypted'=>'string','key'=>'','padding='=>'int']");
f("openssl_public_decrypt", "['bool','data'=>'string','&crypted'=>'string','key'=>'','padding='=>'int']");
f("openssl_public_encrypt", "['bool','data'=>'string','&crypted'=>'string','key'=>'','padding='=>'int']");
f("openssl_random_pseudo_bytes", "['string','length'=>'int','&returned_strong_result='=>'bool']");
f("openssl_seal", "['int','data'=>'string','&sealdata'=>'string','&ekeys'=>'array','pubkeys'=>'array','method='=>'string']");
f("openssl_sign", "['bool','data'=>'string','&signature'=>'string','key'=>'','method='=>'']");
f("openssl_spki_export_challenge", "['string','spki'=>'string']");
f("openssl_spki_export", "['string','spki'=>'string']");
f("openssl_spki_verify", "['bool','spki'=>'string']");
f("openssl_verify", "['int','data'=>'string','signature'=>'string','key'=>'','method='=>'']");
f("openssl_x509_check_private_key", "['bool','cert'=>'','key'=>'']");
f("openssl_x509_checkpurpose", "['int','x509cert'=>'','purpose'=>'int','cainfo='=>'array','untrustedfile='=>'string']");
f("openssl_x509_export", "['bool','x509'=>'','&out'=>'string','notext='=>'bool']");
f("openssl_x509_export_to_file", "['bool','x509'=>'','outfilename'=>'string','notext='=>'bool']");
f("openssl_x509_fingerprint", "['bool','x509'=>'mixed','hash_algorithm='=>'string','raw_output='=>'bool']");
f("openssl_x509_free", "['','x509'=>'']");
f("openssl_x509_parse", "['array|bool','x509'=>'','shortnames='=>'bool']");
f("openssl_x509_read", "['resource','cert'=>'']");
f("ord", "['int','character'=>'string']");
f("OuterIterator::getInnerIterator", "['Iterator']");
f("OutOfBoundsException::__clone", "['Throwable|OutOfBoundsException']");
f("OutOfBoundsException::__construct", "['OutOfBoundsException','message='=>'string','code='=>'int','previous='=>'Throwable|OutOfBoundsException|null']");
f("OutOfBoundsException::getCode", "['int']");
f("OutOfBoundsException::getFile", "['string']");
f("OutOfBoundsException::getLine", "['int']");
f("OutOfBoundsException::getMessage", "['string']");
f("OutOfBoundsException::getPrevious", "['Throwable|OutOfBoundsException']");
f("OutOfBoundsException::getTrace", "['array']");
f("OutOfBoundsException::getTraceAsString", "['string']");
f("OutOfBoundsException::__toString", "['string']");
f("OutOfRangeException::__clone", "['Throwable|Exception']");
f("OutOfRangeException::__construct", "['OutOfRangeException','message='=>'string','code='=>'int','previous='=>'Throwable|OutOfRangeException|null']");
f("OutOfRangeException::getCode", "['int']");
f("OutOfRangeException::getFile", "['string']");
f("OutOfRangeException::getLine", "['int']");
f("OutOfRangeException::getMessage", "['string']");
f("OutOfRangeException::getPrevious", "['Throwable|OutOfRangeException']");
f("OutOfRangeException::getTrace", "['array']");
f("OutOfRangeException::getTraceAsString", "['string']");
f("OutOfRangeException::__toString", "['string']");
f("output_add_rewrite_var", "['bool','name'=>'string','value'=>'string']");
f("output_reset_rewrite_vars", "['bool']");
f("OverflowException::__clone", "['Throwable|Exception']");
f("OverflowException::__construct", "['OverflowException','message='=>'string','code='=>'int','previous='=>'Throwable|OverflowException|null']");
f("OverflowException::getCode", "['int']");
f("OverflowException::getFile", "['string']");
f("OverflowException::getLine", "['int']");
f("OverflowException::getMessage", "['string']");
f("OverflowException::getPrevious", "['Throwable|OverflowException']");
f("OverflowException::getTrace", "['array']");
f("OverflowException::getTraceAsString", "['string']");
f("OverflowException::__toString", "['string']");
f("overload", "['','class_name'=>'string']");
f("override_function", "['bool','function_name'=>'string','function_args'=>'string','function_code'=>'string']");
f("pack", "['string','format'=>'string','...args='=>'']");
f("ParentIterator::accept", "['bool']");
f("ParentIterator::__construct", "['ParentIterator','it'=>'recursiveiterator']");
f("ParentIterator::getChildren", "['ParentIterator']");
f("ParentIterator::hasChildren", "['bool']");
f("ParentIterator::next", "['']");
f("ParentIterator::rewind", "['']");
f("ParseError::__clone", "['ParseError']");
f("ParseError::__construct", "['ParseError','message='=>'string','code='=>'int','previous='=>'Throwable|ParseError']");
f("ParseError::getCode", "['int']");
f("ParseError::getFile", "['string']");
f("ParseError::getLine", "['int']");
f("ParseError::getMessage", "['string']");
f("ParseError::getPrevious", "['Throwable|ParseError']");
f("ParseError::getTrace", "['array']");
f("ParseError::getTraceAsString", "['string']");
f("ParseError::__toString", "['string']");
f("parse_ini_file", "['array|false','filename'=>'string','process_sections='=>'bool','scanner_mode='=>'int']");
f("parse_ini_string", "['array|false','ini_string'=>'string','process_sections='=>'bool','scanner_mode='=>'int']");
f("parsekit_compile_file", "['array','filename'=>'string','errors='=>'array','options='=>'int']");
f("parsekit_compile_string", "['array','phpcode'=>'string','errors='=>'array','options='=>'int']");
f("parsekit_func_arginfo", "['array','function'=>'']");
f("parse_str", "['','encoded_string'=>'string','&result='=>'array']");
f("parse_url", "['','url'=>'string','url_component='=>'int']");
f("passthru", "['','command'=>'string','&return_value='=>'int']");
f("password_get_info", "['array','hash'=>'string']");
f("password_hash", "['string','password'=>'string','algo'=>'int','options='=>'array']");
f("password_make_salt", "['bool','password'=>'string','hash'=>'string']");
f("password_needs_rehash", "['bool','hash'=>'string','algo'=>'int','options='=>'array']");
f("password_verify", "['bool','password'=>'string','hash'=>'string']");
f("pathinfo", "['array|string','path'=>'string','options='=>'int']");
f("pclose", "['int','fp'=>'']");
f("pcnlt_sigwaitinfo", "['int','set'=>'array','&siginfo'=>'array']");
f("pcntl_alarm", "['int','seconds'=>'int']");
f("pcntl_exec", "['bool','path'=>'string','args='=>'array','envs='=>'array']");
f("pcntl_fork", "['int']");
f("pcntl_get_last_error", "['int']");
f("pcntl_getpriority", "['int','pid='=>'int','process_identifier='=>'int']");
f("pcntl_setpriority", "['bool','priority'=>'int','pid='=>'int','process_identifier='=>'int']");
f("pcntl_signal", "['bool','signo'=>'int','handle'=>'callable|int','restart_syscalls='=>'bool']");
f("pcntl_signal_dispatch", "['bool']");
f("pcntl_sigprocmask", "['bool','how'=>'int','set'=>'array','&oldset='=>'array']");
f("pcntl_sigtimedwait", "['int','set'=>'array','&siginfo='=>'array','seconds='=>'int','nanoseconds='=>'int']");
f("pcntl_sigwaitinfo", "['int','set'=>'array','siginfo='=>'array']");
f("pcntl_strerror", "['string','errno'=>'int']");
f("pcntl_wait", "['int','&status'=>'int','options='=>'int','&rusage='=>'array']");
f("pcntl_waitpid", "['int','pid'=>'int','&status'=>'int','options='=>'int','&rusage='=>'array']");
f("pcntl_wexitstatus", "['int','status'=>'int']");
f("pcntl_wifcontinued", "['bool','status'=>'int']");
f("pcntl_wifexited", "['bool','status'=>'int']");
f("pcntl_wifsignaled", "['bool','status'=>'int']");
f("pcntl_wifstopped", "['bool','status'=>'int']");
f("pcntl_wstopsig", "['int','status'=>'int']");
f("pcntl_wtermsig", "['int','status'=>'int']");
f("PDF_activate_item", "['bool','pdfdoc'=>'','id'=>'int']");
f("PDF_add_launchlink", "['bool','pdfdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','filename'=>'string']");
f("PDF_add_locallink", "['bool','pdfdoc'=>'','lowerleftx'=>'float','lowerlefty'=>'float','upperrightx'=>'float','upperrighty'=>'float','page'=>'int','dest'=>'string']");
f("PDF_add_nameddest", "['bool','pdfdoc'=>'','name'=>'string','optlist'=>'string']");
f("PDF_add_note", "['bool','pdfdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','contents'=>'string','title'=>'string','icon'=>'string','open'=>'int']");
f("PDF_add_pdflink", "['bool','pdfdoc'=>'','bottom_left_x'=>'float','bottom_left_y'=>'float','up_right_x'=>'float','up_right_y'=>'float','filename'=>'string','page'=>'int','dest'=>'string']");
f("PDF_add_table_cell", "['int','pdfdoc'=>'','table'=>'int','column'=>'int','row'=>'int','text'=>'string','optlist'=>'string']");
f("PDF_add_textflow", "['int','pdfdoc'=>'','textflow'=>'int','text'=>'string','optlist'=>'string']");
f("PDF_add_thumbnail", "['bool','pdfdoc'=>'','image'=>'int']");
f("PDF_add_weblink", "['bool','pdfdoc'=>'','lowerleftx'=>'float','lowerlefty'=>'float','upperrightx'=>'float','upperrighty'=>'float','url'=>'string']");
f("PDF_arc", "['bool','p'=>'','x'=>'float','y'=>'float','r'=>'float','alpha'=>'float','beta'=>'float']");
f("PDF_arcn", "['bool','p'=>'','x'=>'float','y'=>'float','r'=>'float','alpha'=>'float','beta'=>'float']");
f("PDF_attach_file", "['bool','pdfdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','filename'=>'string','description'=>'string','author'=>'string','mimetype'=>'string','icon'=>'string']");
f("PDF_begin_document", "['int','pdfdoc'=>'','filename'=>'string','optlist'=>'string']");
f("PDF_begin_font", "['bool','pdfdoc'=>'','filename'=>'string','a'=>'float','b'=>'float','c'=>'float','d'=>'float','e'=>'float','f'=>'float','optlist'=>'string']");
f("PDF_begin_glyph", "['bool','pdfdoc'=>'','glyphname'=>'string','wx'=>'float','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float']");
f("PDF_begin_item", "['int','pdfdoc'=>'','tag'=>'string','optlist'=>'string']");
f("PDF_begin_layer", "['bool','pdfdoc'=>'','layer'=>'int']");
f("PDF_begin_page", "['bool','pdfdoc'=>'','width'=>'float','height'=>'float']");
f("PDF_begin_page_ext", "['bool','pdfdoc'=>'','width'=>'float','height'=>'float','optlist'=>'string']");
f("PDF_begin_pattern", "['int','pdfdoc'=>'','width'=>'float','height'=>'float','xstep'=>'float','ystep'=>'float','painttype'=>'int']");
f("PDF_begin_template_ext", "['int','pdfdoc'=>'','width'=>'float','height'=>'float','optlist'=>'string']");
f("PDF_begin_template", "['int','pdfdoc'=>'','width'=>'float','height'=>'float']");
f("PDF_circle", "['bool','pdfdoc'=>'','x'=>'float','y'=>'float','r'=>'float']");
f("PDF_clip", "['bool','p'=>'']");
f("PDF_close", "['bool','p'=>'']");
f("PDF_close_image", "['bool','p'=>'','image'=>'int']");
f("PDF_closepath", "['bool','p'=>'']");
f("PDF_closepath_fill_stroke", "['bool','p'=>'']");
f("PDF_closepath_stroke", "['bool','p'=>'']");
f("PDF_close_pdi", "['bool','p'=>'','doc'=>'int']");
f("PDF_close_pdi_page", "['bool','p'=>'','page'=>'int']");
f("PDF_concat", "['bool','p'=>'','a'=>'float','b'=>'float','c'=>'float','d'=>'float','e'=>'float','f'=>'float']");
f("PDF_continue_text", "['bool','p'=>'','text'=>'string']");
f("PDF_create_3dview", "['int','pdfdoc'=>'','username'=>'string','optlist'=>'string']");
f("PDF_create_action", "['int','pdfdoc'=>'','type'=>'string','optlist'=>'string']");
f("PDF_create_annotation", "['bool','pdfdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','type'=>'string','optlist'=>'string']");
f("PDF_create_bookmark", "['int','pdfdoc'=>'','text'=>'string','optlist'=>'string']");
f("PDF_create_field", "['bool','pdfdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','name'=>'string','type'=>'string','optlist'=>'string']");
f("PDF_create_fieldgroup", "['bool','pdfdoc'=>'','name'=>'string','optlist'=>'string']");
f("PDF_create_gstate", "['int','pdfdoc'=>'','optlist'=>'string']");
f("PDF_create_pvf", "['bool','pdfdoc'=>'','filename'=>'string','data'=>'string','optlist'=>'string']");
f("PDF_create_textflow", "['int','pdfdoc'=>'','text'=>'string','optlist'=>'string']");
f("PDF_curveto", "['bool','p'=>'','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float']");
f("PDF_define_layer", "['int','pdfdoc'=>'','name'=>'string','optlist'=>'string']");
f("PDF_delete", "['bool','pdfdoc'=>'']");
f("PDF_delete_pvf", "['int','pdfdoc'=>'','filename'=>'string']");
f("PDF_delete_table", "['bool','pdfdoc'=>'','table'=>'int','optlist'=>'string']");
f("PDF_delete_textflow", "['bool','pdfdoc'=>'','textflow'=>'int']");
f("PDF_encoding_set_char", "['bool','pdfdoc'=>'','encoding'=>'string','slot'=>'int','glyphname'=>'string','uv'=>'int']");
f("PDF_end_document", "['bool','pdfdoc'=>'','optlist'=>'string']");
f("PDF_end_font", "['bool','pdfdoc'=>'']");
f("PDF_end_glyph", "['bool','pdfdoc'=>'']");
f("PDF_end_item", "['bool','pdfdoc'=>'','id'=>'int']");
f("PDF_end_layer", "['bool','pdfdoc'=>'']");
f("PDF_end_page", "['bool','p'=>'']");
f("PDF_end_page_ext", "['bool','pdfdoc'=>'','optlist'=>'string']");
f("PDF_endpath", "['bool','p'=>'']");
f("PDF_end_pattern", "['bool','p'=>'']");
f("PDF_end_template", "['bool','p'=>'']");
f("PDF_fill", "['bool','p'=>'']");
f("PDF_fill_imageblock", "['int','pdfdoc'=>'','page'=>'int','blockname'=>'string','image'=>'int','optlist'=>'string']");
f("PDF_fill_pdfblock", "['int','pdfdoc'=>'','page'=>'int','blockname'=>'string','contents'=>'int','optlist'=>'string']");
f("PDF_fill_stroke", "['bool','p'=>'']");
f("PDF_fill_textblock", "['int','pdfdoc'=>'','page'=>'int','blockname'=>'string','text'=>'string','optlist'=>'string']");
f("PDF_findfont", "['int','p'=>'','fontname'=>'string','encoding'=>'string','embed'=>'int']");
f("PDF_fit_image", "['bool','pdfdoc'=>'','image'=>'int','x'=>'float','y'=>'float','optlist'=>'string']");
f("PDF_fit_pdi_page", "['bool','pdfdoc'=>'','page'=>'int','x'=>'float','y'=>'float','optlist'=>'string']");
f("PDF_fit_table", "['string','pdfdoc'=>'','table'=>'int','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','optlist'=>'string']");
f("PDF_fit_textflow", "['string','pdfdoc'=>'','textflow'=>'int','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','optlist'=>'string']");
f("PDF_fit_textline", "['bool','pdfdoc'=>'','text'=>'string','x'=>'float','y'=>'float','optlist'=>'string']");
f("PDF_get_apiname", "['string','pdfdoc'=>'']");
f("PDF_get_buffer", "['string','p'=>'']");
f("PDF_get_errmsg", "['string','pdfdoc'=>'']");
f("PDF_get_errnum", "['int','pdfdoc'=>'']");
f("PDF_get_majorversion", "['int']");
f("PDF_get_minorversion", "['int']");
f("PDF_get_parameter", "['string','p'=>'','key'=>'string','modifier'=>'float']");
f("PDF_get_pdi_parameter", "['string','p'=>'','key'=>'string','doc'=>'int','page'=>'int','reserved'=>'int']");
f("PDF_get_pdi_value", "['float','p'=>'','key'=>'string','doc'=>'int','page'=>'int','reserved'=>'int']");
f("PDF_get_value", "['float','p'=>'','key'=>'string','modifier'=>'float']");
f("PDF_info_font", "['float','pdfdoc'=>'','font'=>'int','keyword'=>'string','optlist'=>'string']");
f("PDF_info_matchbox", "['float','pdfdoc'=>'','boxname'=>'string','num'=>'int','keyword'=>'string']");
f("PDF_info_table", "['float','pdfdoc'=>'','table'=>'int','keyword'=>'string']");
f("PDF_info_textflow", "['float','pdfdoc'=>'','textflow'=>'int','keyword'=>'string']");
f("PDF_info_textline", "['float','pdfdoc'=>'','text'=>'string','keyword'=>'string','optlist'=>'string']");
f("PDF_initgraphics", "['bool','p'=>'']");
f("PDF_lineto", "['bool','p'=>'','x'=>'float','y'=>'float']");
f("PDF_load_3ddata", "['int','pdfdoc'=>'','filename'=>'string','optlist'=>'string']");
f("PDF_load_font", "['int','pdfdoc'=>'','fontname'=>'string','encoding'=>'string','optlist'=>'string']");
f("PDF_load_iccprofile", "['int','pdfdoc'=>'','profilename'=>'string','optlist'=>'string']");
f("PDF_load_image", "['int','pdfdoc'=>'','imagetype'=>'string','filename'=>'string','optlist'=>'string']");
f("PDF_makespotcolor", "['int','p'=>'','spotname'=>'string']");
f("PDF_moveto", "['bool','p'=>'','x'=>'float','y'=>'float']");
f("PDF_new", "['resource']");
f("PDF_open_ccitt", "['int','pdfdoc'=>'','filename'=>'string','width'=>'int','height'=>'int','bitreverse'=>'int','k'=>'int','blackls1'=>'int']");
f("PDF_open_file", "['bool','p'=>'','filename'=>'string']");
f("PDF_open_image_file", "['int','p'=>'','imagetype'=>'string','filename'=>'string','stringparam'=>'string','intparam'=>'int']");
f("PDF_open_image", "['int','p'=>'','imagetype'=>'string','source'=>'string','data'=>'string','length'=>'int','width'=>'int','height'=>'int','components'=>'int','bpc'=>'int','params'=>'string']");
f("PDF_open_memory_image", "['int','p'=>'','image'=>'']");
f("PDF_open_pdi_document", "['int','p'=>'','filename'=>'string','optlist'=>'string']");
f("PDF_open_pdi", "['int','pdfdoc'=>'','filename'=>'string','optlist'=>'string','len'=>'int']");
f("PDF_open_pdi_page", "['int','p'=>'','doc'=>'int','pagenumber'=>'int','optlist'=>'string']");
f("PDF_pcos_get_number", "['float','p'=>'','doc'=>'int','path'=>'string']");
f("PDF_pcos_get_stream", "['string','p'=>'','doc'=>'int','optlist'=>'string','path'=>'string']");
f("PDF_pcos_get_string", "['string','p'=>'','doc'=>'int','path'=>'string']");
f("PDF_place_image", "['bool','pdfdoc'=>'','image'=>'int','x'=>'float','y'=>'float','scale'=>'float']");
f("PDF_place_pdi_page", "['bool','pdfdoc'=>'','page'=>'int','x'=>'float','y'=>'float','sx'=>'float','sy'=>'float']");
f("PDF_process_pdi", "['int','pdfdoc'=>'','doc'=>'int','page'=>'int','optlist'=>'string']");
f("PDF_rect", "['bool','p'=>'','x'=>'float','y'=>'float','width'=>'float','height'=>'float']");
f("PDF_restore", "['bool','p'=>'']");
f("PDF_resume_page", "['bool','pdfdoc'=>'','optlist'=>'string']");
f("PDF_rotate", "['bool','p'=>'','phi'=>'float']");
f("PDF_save", "['bool','p'=>'']");
f("PDF_scale", "['bool','p'=>'','sx'=>'float','sy'=>'float']");
f("PDF_set_border_color", "['bool','p'=>'','red'=>'float','green'=>'float','blue'=>'float']");
f("PDF_set_border_dash", "['bool','pdfdoc'=>'','black'=>'float','white'=>'float']");
f("PDF_set_border_style", "['bool','pdfdoc'=>'','style'=>'string','width'=>'float']");
f("PDF_setcolor", "['bool','p'=>'','fstype'=>'string','colorspace'=>'string','c1'=>'float','c2'=>'float','c3'=>'float','c4'=>'float']");
f("PDF_setdash", "['bool','pdfdoc'=>'','b'=>'float','w'=>'float']");
f("PDF_setdashpattern", "['bool','pdfdoc'=>'','optlist'=>'string']");
f("PDF_setflat", "['bool','pdfdoc'=>'','flatness'=>'float']");
f("PDF_setfont", "['bool','pdfdoc'=>'','font'=>'int','fontsize'=>'float']");
f("PDF_setgray", "['bool','p'=>'','g'=>'float']");
f("PDF_setgray_fill", "['bool','p'=>'','g'=>'float']");
f("PDF_setgray_stroke", "['bool','p'=>'','g'=>'float']");
f("PDF_set_gstate", "['bool','pdfdoc'=>'','gstate'=>'int']");
f("PDF_set_info", "['bool','p'=>'','key'=>'string','value'=>'string']");
f("PDF_set_layer_dependency", "['bool','pdfdoc'=>'','type'=>'string','optlist'=>'string']");
f("PDF_setlinecap", "['bool','p'=>'','linecap'=>'int']");
f("PDF_setlinejoin", "['bool','p'=>'','value'=>'int']");
f("PDF_setlinewidth", "['bool','p'=>'','width'=>'float']");
f("PDF_setmatrix", "['bool','p'=>'','a'=>'float','b'=>'float','c'=>'float','d'=>'float','e'=>'float','f'=>'float']");
f("PDF_setmiterlimit", "['bool','pdfdoc'=>'','miter'=>'float']");
f("PDF_set_parameter", "['bool','p'=>'','key'=>'string','value'=>'string']");
f("PDF_setrgbcolor", "['bool','p'=>'','red'=>'float','green'=>'float','blue'=>'float']");
f("PDF_setrgbcolor_fill", "['bool','p'=>'','red'=>'float','green'=>'float','blue'=>'float']");
f("PDF_setrgbcolor_stroke", "['bool','p'=>'','red'=>'float','green'=>'float','blue'=>'float']");
f("PDF_set_text_pos", "['bool','p'=>'','x'=>'float','y'=>'float']");
f("PDF_set_value", "['bool','p'=>'','key'=>'string','value'=>'float']");
f("PDF_shading", "['int','pdfdoc'=>'','shtype'=>'string','x0'=>'float','y0'=>'float','x1'=>'float','y1'=>'float','c1'=>'float','c2'=>'float','c3'=>'float','c4'=>'float','optlist'=>'string']");
f("PDF_shading_pattern", "['int','pdfdoc'=>'','shading'=>'int','optlist'=>'string']");
f("PDF_shfill", "['bool','pdfdoc'=>'','shading'=>'int']");
f("PDF_show", "['bool','pdfdoc'=>'','text'=>'string']");
f("PDF_show_boxed", "['int','p'=>'','text'=>'string','left'=>'float','top'=>'float','width'=>'float','height'=>'float','mode'=>'string','feature'=>'string']");
f("PDF_show_xy", "['bool','p'=>'','text'=>'string','x'=>'float','y'=>'float']");
f("PDF_skew", "['bool','p'=>'','alpha'=>'float','beta'=>'float']");
f("PDF_stringwidth", "['float','p'=>'','text'=>'string','font'=>'int','fontsize'=>'float']");
f("PDF_stroke", "['bool','p'=>'']");
f("PDF_suspend_page", "['bool','pdfdoc'=>'','optlist'=>'string']");
f("PDF_translate", "['bool','p'=>'','tx'=>'float','ty'=>'float']");
f("PDF_utf16_to_utf8", "['string','pdfdoc'=>'','utf16string'=>'string']");
f("PDF_utf32_to_utf16", "['string','pdfdoc'=>'','utf32string'=>'string','ordering'=>'string']");
f("PDF_utf8_to_utf16", "['string','pdfdoc'=>'','utf8string'=>'string','ordering'=>'string']");
f("PDO::beginTransaction", "['bool']");
f("PDO::commit", "['bool']");
f("PDO::__construct", "['PDO','dsn'=>'string','username='=>'string','passwd='=>'string','options='=>'array']");
f("PDO::cubrid_schema", "['array','schema_type'=>'int','table_name='=>'string','col_name='=>'string']");
f("pdo_drivers", "['array']");
f("PDO::errorCode", "['string']");
f("PDO::errorInfo", "['array']");
f("PDO::exec", "['int','query'=>'string']");
f("PDO::getAttribute", "['','attribute'=>'int']");
f("PDO::getAvailableDrivers", "['array']");
f("PDO::inTransaction", "['bool']");
f("PDO::lastInsertId", "['string','seqname='=>'string']");
f("PDO::pgsqlCopyFromArray", "['bool','table_name'=>'string','rows'=>'array','delimiter'=>'string','null_as'=>'string','fields'=>'string']");
f("PDO::pgsqlCopyFromFile", "['bool','table_name'=>'string','filename'=>'string','delimiter'=>'string','null_as'=>'string','fields'=>'string']");
f("PDO::pgsqlCopyToArray", "['array','table_name'=>'string','delimiter'=>'string','null_as'=>'string','fields'=>'string']");
f("PDO::pgsqlCopyToFile", "['bool','table_name'=>'string','filename'=>'string','delimiter'=>'string','null_as'=>'string','fields'=>'string']");
f("PDO::pgsqlGetNotify", "['array','result_type'=>'int','ms_timeout'=>'int']");
f("PDO::pgsqlGetPid", "['int']");
f("PDO::pgsqlLOBCreate", "['string']");
f("PDO::pgsqlLOBOpen", "['resource','oid'=>'string','mode='=>'string']");
f("PDO::pgsqlLOBUnlink", "['bool','oid'=>'string']");
f("PDO::prepare", "['PDOStatement','statement'=>'string','options='=>'array']");
f("PDO::query", "['PDOStatement','sql'=>'string']");
f("PDO::query\\'1", "['PDOStatement','sql'=>'string','fetch_column'=>'int','colno'=>'int']");
f("PDO::query\\'2", "['PDOStatement','sql'=>'string','fetch_class'=>'int','classname'=>'string','ctorargs'=>'array']");
f("PDO::query\\'3", "['PDOStatement','sql'=>'string','fetch_into'=>'int','any'=>'any']");
f("PDO::quote", "['string','string'=>'string','paramtype='=>'int']");
f("PDO::rollBack", "['bool']");
f("PDO::setAttribute", "['bool','attribute'=>'int','value'=>'']");
f("PDO::__sleep", "['int']");
f("PDO::sqliteCreateAggregate", "['bool','function_name'=>'string','step_func'=>'callable','finalize_func'=>'callable','num_args='=>'int']");
f("PDO::sqliteCreateCollation", "['bool','name'=>'string','callback'=>'callable']");
f("PDO::sqliteCreateFunction", "['bool','function_name'=>'string','callback'=>'callable','num_args='=>'int']");
f("PDOStatement::bindColumn", "['bool','column'=>'','&param'=>'','type='=>'int','maxlen='=>'int','driverdata='=>'']");
f("PDOStatement::bindParam", "['bool','paramno'=>'','&param'=>'','type='=>'int','maxlen='=>'int','driverdata='=>'']");
f("PDOStatement::bindValue", "['bool','paramno'=>'','param'=>'','type='=>'int']");
f("PDOStatement::closeCursor", "['bool']");
f("PDOStatement::columnCount", "['int']");
f("PDOStatement::debugDumpParams", "['']");
f("PDOStatement::errorCode", "['string']");
f("PDOStatement::errorInfo", "['array']");
f("PDOStatement::execute", "['bool','bound_input_params='=>'array']");
f("PDOStatement::fetchAll", "['array','how='=>'int','class_name='=>'string','ctor_args='=>'null|array']");
f("PDOStatement::fetchColumn", "['string','column_number='=>'int']");
f("PDOStatement::fetch", "['','how='=>'int','orientation='=>'int','offset='=>'int']");
f("PDOStatement::fetchObject", "['','class_name='=>'string','ctor_args='=>'null|array']");
f("PDOStatement::getAttribute", "['','attribute'=>'int']");
f("PDOStatement::getColumnMeta", "['array','column'=>'int']");
f("PDOStatement::nextRowset", "['bool']");
f("PDOStatement::rowCount", "['int']");
f("PDOStatement::setAttribute", "['bool','attribute'=>'int','value'=>'']");
f("PDOStatement::setFetchMode\\'1", "['bool','fetch_column'=>'int','colno'=>'int']");
f("PDOStatement::setFetchMode\\'2", "['bool','fetch_class'=>'int','classname'=>'string','ctorargs'=>'array']");
f("PDOStatement::setFetchMode\\'3", "['bool','fetch_into'=>'int','any'=>'any']");
f("PDOStatement::setFetchMode", "['bool','mode'=>'int']");
f("PDOStatement::__sleep", "['int']");
f("PDOStatement::__wakeup", "['int']");
f("PDO::__wakeup", "['int']");
f("pfsockopen", "['resource','hostname'=>'string','port='=>'int','&errno='=>'int','&errstr='=>'string','timeout='=>'float']");
f("pg_affected_rows", "['int','result'=>'']");
f("pg_cancel_query", "['bool','connection'=>'resource']");
f("pg_client_encoding", "['string','connection='=>'resource']");
f("pg_close", "['bool','connection='=>'resource']");
f("pg_connection_busy", "['bool','connection'=>'resource']");
f("pg_connection_reset", "['bool','connection'=>'resource']");
f("pg_connection_status", "['int|bool','connection'=>'resource']");
f("pg_connect_poll", "['resource','connection'=>'resource']");
f("pg_connect", "['resource','connection_string'=>'string','connect_type='=>'int']");
f("pg_consume_input", "['bool','connection'=>'resource']");
f("pg_convert", "['array','db'=>'','table'=>'string','values'=>'array','options='=>'int']");
f("pg_copy_from", "['bool','connection'=>'resource','table_name'=>'string','rows'=>'array','delimiter='=>'string','null_as='=>'string']");
f("pg_copy_to", "['array','connection'=>'resource','table_name'=>'string','delimiter='=>'string','null_as='=>'string']");
f("pg_dbname", "['string','connection='=>'resource']");
f("pg_delete", "['','db'=>'','table'=>'string','ids'=>'array','options='=>'int']");
f("pg_end_copy", "['bool','connection='=>'resource']");
f("pg_escape_bytea\\'1", "['string','data'=>'string']");
f("pg_escape_bytea", "['string','connection='=>'resource','data='=>'string']");
f("pg_escape_identifier\\'1", "['string','connection'=>'resource','data'=>'string']");
f("pg_escape_identifier", "['string','connection='=>'resource','data'=>'string']");
f("pg_escape_literal\\'1", "['string','data'=>'string']");
f("pg_escape_literal", "['string','connection'=>'resource','data'=>'string']");
f("pg_escape_string\\'1", "['string','data'=>'string']");
f("pg_escape_string", "['string','connection='=>'resource','data='=>'string']");
f("pg_execute\\'1", "['resource','stmtname'=>'string','params'=>'array']");
f("pg_execute", "['resource','connection='=>'resource','stmtname='=>'string','params='=>'array']");
f("pg_fetch_all", "['array','result'=>'']");
f("pg_fetch_all_columns", "['array','result'=>'','column_number='=>'int']");
f("pg_fetch_array", "['array','result'=>'','row='=>'int','result_type='=>'int']");
f("pg_fetch_assoc", "['array','result'=>'','row='=>'int']");
f("pg_fetch_object\\'1", "['any','result'=>'','row='=>'int','class_name='=>'string','ctor_params='=>'array']");
f("pg_fetch_object", "['any','result'=>'','row='=>'int','result_type='=>'int']");
f("pg_fetch_result\\'1", "['','result'=>'','row_number'=>'int','field_name'=>'string|int']");
f("pg_fetch_result", "['','result'=>'','field_name'=>'string|int']");
f("pg_fetch_row", "['array','result'=>'','row='=>'int','result_type='=>'int']");
f("pg_field_is_null\\'1", "['int','result'=>'','row'=>'int','field_name_or_number'=>'string|int']");
f("pg_field_is_null", "['int','result'=>'','field_name_or_number'=>'string|int']");
f("pg_field_name", "['string','result'=>'','field_number'=>'int']");
f("pg_field_num", "['int','result'=>'','field_name'=>'string']");
f("pg_field_prtlen\\'1", "['int','result'=>'','row'=>'int','field_name_or_number'=>'string|int']");
f("pg_field_prtlen", "['int','result'=>'','field_name_or_number'=>'']");
f("pg_field_size", "['int','result'=>'','field_number'=>'int']");
f("pg_field_table", "['','result'=>'','field_number'=>'int','oid_only='=>'bool']");
f("pg_field_type_oid", "['string','result'=>'','field_number'=>'int']");
f("pg_field_type", "['string','result'=>'','field_number'=>'int']");
f("pg_flush", "['','connection'=>'resource']");
f("pg_free_result", "['bool','result'=>'resource']");
f("pg_get_notify", "['array','connection'=>'resource','result_type='=>'int']");
f("pg_get_pid", "['int|bool','connection'=>'resource']");
f("pg_get_result", "['resource|false','connection='=>'resource']");
f("pg_host", "['string','connection='=>'resource']");
f("pg_insert", "['','db'=>'','table'=>'string','values'=>'array','options='=>'int']");
f("pg_last_error", "['string','connection='=>'resource']");
f("pg_last_notice", "['string','connection'=>'resource']");
f("pg_last_oid", "['string','result'=>'']");
f("pg_lo_close", "['bool','large_object'=>'']");
f("pg_lo_create", "['int','connection='=>'resource','large_object_oid='=>'']");
f("pg_lo_export\\'1", "['bool','oid'=>'int','pathname'=>'string']");
f("pg_lo_export", "['bool','connection'=>'resource','oid'=>'int','filename'=>'string']");
f("pg_lo_import\\'1", "['int','pathname'=>'string','oid'=>'']");
f("pg_lo_import", "['int','connection'=>'resource','pathname'=>'string','oid'=>'']");
f("pg_lo_open", "['resource','connection'=>'resource','oid'=>'int','mode'=>'string']");
f("pg_lo_read_all", "['int','large_object'=>'']");
f("pg_lo_read", "['string','large_object'=>'','len='=>'int']");
f("pg_lo_seek", "['bool','large_object'=>'','offset'=>'int','whence='=>'int']");
f("pg_lo_tell", "['int','large_object'=>'']");
f("pg_lo_truncate", "['bool','large_object'=>'','size'=>'int']");
f("pg_lo_unlink", "['bool','connection'=>'resource','oid'=>'int']");
f("pg_lo_write", "['int','large_object'=>'','data'=>'string','len='=>'int']");
f("pg_meta_data", "['array','db'=>'','table'=>'string','extended='=>'bool']");
f("pg_num_fields", "['int','result'=>'']");
f("pg_num_rows", "['int','result'=>'']");
f("pg_options", "['string','connection='=>'resource']");
f("pg_parameter_status\\'1", "['string|false','param_name'=>'string']");
f("pg_parameter_status", "['string|false','connection='=>'resource','param_name='=>'string']");
f("pg_pconnect", "['resource','connection_string'=>'string','host='=>'string','port='=>'string|int','options='=>'string','tty='=>'string','database='=>'string']");
f("pg_ping", "['bool','connection='=>'resource']");
f("pg_port", "['int','connection='=>'resource']");
f("pg_prepare\\'1", "['resource','stmtname'=>'string','query'=>'string']");
f("pg_prepare", "['resource','connection='=>'resource','stmtname='=>'string','query='=>'string']");
f("pg_put_line\\'1", "['bool','data'=>'string']");
f("pg_put_line", "['bool','connection='=>'resource','data='=>'string']");
f("pg_query\\'1", "['resource','query'=>'string']");
f("pg_query_params\\'1", "['resource','query'=>'string','params'=>'array']");
f("pg_query_params", "['resource','connection='=>'resource','query='=>'string','params='=>'array']");
f("pg_query", "['resource','connection='=>'resource','query='=>'string']");
f("pg_result_error_field", "['string|false|null','result'=>'','fieldcode'=>'int']");
f("pg_result_error", "['string|false','result'=>'']");
f("pg_result_seek", "['bool','result'=>'','offset'=>'int']");
f("pg_result_status", "['','result'=>'','result_type='=>'int']");
f("pg_select", "['','db'=>'','table'=>'string','ids'=>'array','options='=>'int']");
f("pg_send_execute", "['bool','connection'=>'resource','stmtname'=>'string','params'=>'array']");
f("pg_send_prepare", "['bool','connection'=>'resource','stmtname'=>'string','query'=>'string']");
f("pg_send_query", "['bool','connection'=>'resource','query'=>'string']");
f("pg_send_query_params", "['bool','connection'=>'resource','query'=>'string','params'=>'array']");
f("pg_set_client_encoding\\'1", "['int','connection'=>'resource','encoding'=>'string']");
f("pg_set_client_encoding", "['int','connection='=>'resource','encoding='=>'string']");
f("pg_set_error_verbosity\\'1", "['int','verbosity'=>'int']");
f("pg_set_error_verbosity", "['int','connection='=>'resource','verbosity='=>'int']");
f("pg_socket", "['resource','connection'=>'resource']");
f("pg_trace", "['bool','filename'=>'string','mode='=>'string','connection='=>'resource']");
f("pg_transaction_status", "['int|bool','connection'=>'resource']");
f("pg_tty\\'1", "['string']");
f("pg_tty", "['string','connection='=>'resource']");
f("pg_unescape_bytea", "['string','data'=>'string']");
f("pg_untrace\\'1", "['bool']");
f("pg_untrace", "['bool','connection='=>'resource']");
f("pg_update", "['','db'=>'','table'=>'string','fields'=>'array','ids'=>'array','options='=>'int']");
f("pg_version", "['array','connection='=>'resource']");
f("Phar::addEmptyDir", "['','dirname'=>'string']");
f("Phar::addFile", "['','file'=>'string','localname='=>'string']");
f("Phar::addFromString", "['','localname'=>'string','contents'=>'string']");
f("Phar::apiVersion", "['string']");
f("Phar::buildFromDirectory", "['array','base_dir'=>'string','regex='=>'string']");
f("Phar::buildFromIterator", "['array','iter'=>'iterator','base_directory='=>'string']");
f("Phar::canCompress", "['bool','method='=>'int']");
f("Phar::canWrite", "['bool']");
f("Phar::compressAllFilesBZIP2", "['bool']");
f("Phar::compressAllFilesGZ", "['bool']");
f("Phar::compressFiles", "['','compression'=>'int']");
f("Phar::compress", "['any','compression'=>'int','extension='=>'string']");
f("Phar::__construct", "['Phar','fname'=>'string','flags='=>'int','alias='=>'string']");
f("Phar::convertToData", "['PharData','format='=>'int','compression='=>'int','extension='=>'string']");
f("Phar::convertToExecutable", "['Phar','format='=>'int','compression='=>'int','extension='=>'string']");
f("Phar::copy", "['bool','oldfile'=>'string','newfile'=>'string']");
f("Phar::count", "['int']");
f("Phar::createDefaultStub", "['string','indexfile='=>'string','webindexfile='=>'string']");
f("PharData::addEmptyDir", "['bool','dirname'=>'string']");
f("PharData::addFile", "['','file'=>'string','localname='=>'string']");
f("PharData::addFromString", "['bool','localname'=>'string','contents'=>'string']");
f("PharData::buildFromDirectory", "['array','base_dir'=>'string','regex='=>'string']");
f("PharData::buildFromIterator", "['array','iter'=>'iterator','base_directory='=>'string']");
f("PharData::compressFiles", "['bool','compression'=>'int']");
f("PharData::compress", "['any','compression'=>'int','extension='=>'string']");
f("PharData::__construct", "['PharData','fname'=>'string','flags='=>'int','alias='=>'string','format='=>'int']");
f("PharData::convertToData", "['PharData','format='=>'int','compression='=>'int','extension='=>'string']");
f("PharData::convertToExecutable", "['Phar','format='=>'int','compression='=>'int','extension='=>'string']");
f("PharData::copy", "['bool','oldfile'=>'string','newfile'=>'string']");
f("PharData::decompressFiles", "['bool']");
f("PharData::decompress", "['any','extension='=>'string']");
f("PharData::delete", "['bool','entry'=>'string']");
f("PharData::delMetadata", "['bool']");
f("PharData::extractTo", "['bool','pathto'=>'string','files='=>'string|array','overwrite='=>'bool']");
f("PharData::isWritable", "['bool']");
f("PharData::offsetSet", "['','offset'=>'string','value'=>'string']");
f("PharData::offsetUnset", "['bool','offset'=>'string']");
f("PharData::setAlias", "['bool','alias'=>'string']");
f("PharData::setDefaultStub", "['bool','index='=>'string','webindex='=>'string']");
f("PharData::setStub", "['bool','stub'=>'string']");
f("Phar::decompressFiles", "['bool']");
f("Phar::decompress", "['any','extension='=>'string']");
f("Phar::delete", "['bool','entry'=>'string']");
f("Phar::delMetadata", "['bool']");
f("Phar::extractTo", "['bool','pathto'=>'string','files='=>'string|array','overwrite='=>'bool']");
f("PharFileInfo::chmod", "['','permissions'=>'int']");
f("PharFileInfo::compress", "['bool','compression'=>'int']");
f("PharFileInfo::__construct", "['PharFileInfo','entry'=>'string']");
f("PharFileInfo::decompress", "['bool']");
f("PharFileInfo::delMetadata", "['bool']");
f("PharFileInfo::getCompressedSize", "['int']");
f("PharFileInfo::getCRC32", "['int']");
f("PharFileInfo::getMetaData", "['']");
f("PharFileInfo::getMetadata", "['mixed']");
f("PharFileInfo::getPharFlags", "['int']");
f("PharFileInfo::hasMetadata", "['bool']");
f("PharFileInfo::isCompressed", "['bool','compression_type='=>'int']");
f("PharFileInfo::isCompressedBZIP2", "['bool']");
f("PharFileInfo::isCompressedGZ", "['bool']");
f("PharFileInfo::isCRCChecked", "['bool']");
f("PharFileInfo::setCompressedBZIP2", "['bool']");
f("PharFileInfo::setCompressedGZ", "['bool']");
f("PharFileInfo::setMetaData", "['','metadata'=>'']");
f("PharFileInfo::setMetadata", "['void','metadata'=>'mixed']");
f("PharFileInfo::setUncompressed", "['bool']");
f("Phar::getMetaData", "['']");
f("Phar::getMetadata", "['mixed']");
f("Phar::getModified", "['bool']");
f("Phar::getSignature", "['array']");
f("Phar::getStub", "['string']");
f("Phar::getSupportedCompression", "['array']");
f("Phar::getSupportedSignatures", "['array']");
f("Phar::getVersion", "['string']");
f("Phar::hasMetadata", "['bool']");
f("Phar::hasMetaData", "['bool']");
f("Phar::interceptFileFuncs", "['']");
f("Phar::isBuffering", "['bool']");
f("Phar::isCompressed", "['']");
f("Phar::isFileFormat", "['bool','format'=>'int']");
f("Phar::isValidPharFilename", "['bool','filename'=>'string','executable='=>'bool']");
f("Phar::isWritable", "['bool']");
f("Phar::loadPhar", "['bool','filename'=>'string','alias='=>'string']");
f("Phar::mapPhar", "['bool','alias='=>'string','dataoffset='=>'int']");
f("Phar::mount", "['','pharpath'=>'string','externalpath'=>'string']");
f("Phar::mungServer", "['','munglist'=>'array']");
f("Phar::offsetExists", "['bool','offset'=>'string']");
f("Phar::offsetGet", "['int','offset'=>'string']");
f("Phar::offsetSet", "['','offset'=>'string','value'=>'string']");
f("Phar::offsetUnset", "['bool','offset'=>'string']");
f("Phar::running", "['string','retphar='=>'bool']");
f("Phar::setAlias", "['bool','alias'=>'string']");
f("Phar::setDefaultStub", "['bool','index='=>'string','webindex='=>'string']");
f("Phar::setMetadata", "['','metadata'=>'']");
f("Phar::setSignatureAlgorithm", "['','sigtype'=>'int']");
f("Phar::setStub", "['bool','stub'=>'string']");
f("Phar::startBuffering", "['']");
f("Phar::stopBuffering", "['']");
f("Phar::uncompressAllFiles", "['bool']");
f("Phar::unlinkArchive", "['bool','archive'=>'string']");
f("Phar::webPhar", "['','alias='=>'string','index='=>'string','f404='=>'string','mimetypes='=>'array','rewrites='=>'array']");
f("phdfs::connect", "['']");
f("phdfs::__construct", "['','ip'=>'string','port'=>'string']");
f("phdfs::copy", "['','source_file'=>'string','destination_file'=>'string']");
f("phdfs::create_directory", "['','path'=>'string']");
f("phdfs::delete", "['','path'=>'string']");
f("phdfs::__destruct", "['']");
f("phdfs::disconnect", "['']");
f("phdfs::exists", "['','path'=>'string']");
f("phdfs::file_info", "['','path'=>'string']");
f("phdfs::list_directory", "['','path'=>'string']");
f("phdfs::read", "['','path'=>'string','length='=>'string']");
f("phdfs::rename", "['','old_path'=>'string','new_path'=>'string']");
f("phdfs::tell", "['','path'=>'string']");
f("phdfs::write", "['','path'=>'string','buffer'=>'string','mode='=>'string']");
f("php_check_syntax", "['bool','filename'=>'string','error_message='=>'string']");
f("phpcredits", "['','flag='=>'int']");
f("phpdbg_break", "['']");
f("phpdbg_break_file", "['','file'=>'string','line'=>'int']");
f("phpdbg_break_function", "['','function'=>'string']");
f("phpdbg_break_method", "['','class'=>'string','method'=>'string']");
f("phpdbg_clear", "['']");
f("phpdbg_color", "['','element'=>'int','color'=>'string']");
f("phpdbg_end_oplog", "['']");
f("phpdbg_prompt", "['','prompt'=>'string']");
f("phpdbg_start_oplog", "['']");
f("phpinfo", "['bool','what='=>'int']");
f("php_ini_loaded_file", "['string']");
f("php_ini_scanned_files", "['string']");
f("php_logo_guid", "['string']");
f("php_sapi_name", "['string']");
f("php_strip_whitespace", "['string','file_name'=>'string']");
f("php_uname", "['string','mode='=>'string']");
f("php_user_filter::filter", "['int','in'=>'resource','out'=>'resource','&consumed'=>'int','closing'=>'bool']");
f("php_user_filter::onClose", "['void']");
f("php_user_filter::onCreate", "['bool']");
f("phpversion", "['string|false','extension='=>'string']");
f("pi", "['float']");
f("png2wbmp", "['bool','pngname'=>'string','wbmpname'=>'string','dest_height'=>'int','dest_width'=>'int','threshold'=>'int']");
f("Pool::collect", "['void','collector'=>'Callable']");
f("Pool::__construct", "['Pool','size'=>'int','class'=>'string','ctor='=>'array']");
f("Pool::resize", "['void','size'=>'int']");
f("Pool::shutdown", "['void']");
f("Pool::submit", "['int','task'=>'Threaded']");
f("Pool::submitTo", "['int','worker'=>'int','task'=>'Threaded']");
f("popen", "['resource','command'=>'string','mode'=>'string']");
f("posix_access", "['bool','file'=>'string','mode='=>'int']");
f("posix_ctermid", "['string']");
f("posix_getcwd", "['string']");
f("posix_getegid", "['int']");
f("posix_geteuid", "['int']");
f("posix_getgid", "['int']");
f("posix_getgrgid", "['array','gid'=>'int']");
f("posix_getgrnam", "['array|bool','groupname'=>'string']");
f("posix_getgroups", "['array']");
f("posix_get_last_error", "['int']");
f("posix_getlogin", "['string']");
f("posix_getpgid", "['int','pid'=>'int']");
f("posix_getpgrp", "['int']");
f("posix_getpid", "['int']");
f("posix_getppid", "['int']");
f("posix_getpwnam", "['array|false','groupname'=>'string']");
f("posix_getpwuid", "['array','uid'=>'int']");
f("posix_getrlimit", "['array']");
f("posix_getsid", "['int','pid'=>'int']");
f("posix_getuid", "['int']");
f("posix_initgroups", "['bool','name'=>'string','base_group_id'=>'int']");
f("posix_isatty", "['bool','fd'=>'resource|int']");
f("posix_kill", "['bool','pid'=>'int','sig'=>'int']");
f("posix_mkfifo", "['bool','pathname'=>'string','mode'=>'int']");
f("posix_mknod", "['bool','pathname'=>'string','mode'=>'int','major='=>'int','minor='=>'int']");
f("posix_setegid", "['bool','uid'=>'int']");
f("posix_seteuid", "['bool','uid'=>'int']");
f("posix_setgid", "['bool','uid'=>'int']");
f("posix_setpgid", "['bool','pid'=>'int','pgid'=>'int']");
f("posix_setsid", "['int']");
f("posix_setuid", "['bool','uid'=>'int']");
f("posix_strerror", "['string','errno'=>'int']");
f("posix_times", "['array']");
f("posix_ttyname", "['string|false','fd'=>'resource|int']");
f("posix_uname", "['array']");
f("pow", "['float','base'=>'float','exponent'=>'float']");
f("preg_filter", "['','regex'=>'','replace'=>'','subject'=>'','limit='=>'int','&count='=>'int']");
f("preg_grep", "['array','regex'=>'string','input'=>'array','flags='=>'int']");
f("preg_last_error", "['int']");
f("preg_match_all", "['int','pattern'=>'string','subject'=>'string','&subpatterns='=>'array','flags='=>'int','offset='=>'int']");
f("preg_match", "['int','pattern'=>'string','subject'=>'string','&subpatterns='=>'array','flags='=>'int','offset='=>'int']");
f("preg_quote", "['string','str'=>'string','delim_char='=>'string']");
f("preg_replace_callback_array", "['string|array','pattern'=>'callable[]','subject'=>'array','limit='=>'int','&count='=>'int']");
f("preg_replace_callback", "['string|array','regex'=>'string|array','callback'=>'callable','subject'=>'string|array','limit='=>'int','&count='=>'int']");
f("preg_replace", "['string|array','regex'=>'string|array','replace'=>'string|array','subject'=>'string|array','limit='=>'int','&count='=>'int']");
f("preg_split", "['array','pattern'=>'string','subject'=>'string','limit='=>'int|null','flags='=>'int']");
f("prev", "['','array_arg'=>'array']");
f("printf", "['int','format'=>'string','arg1='=>'','...='=>'']");
f("print", "['int','arg'=>'string']");
f("print_r", "['','var'=>'','return='=>'bool']");
f("proc_close", "['int','process'=>'']");
f("proc_get_status", "['array','process'=>'']");
f("proc_nice", "['bool','priority'=>'int']");
f("proc_open", "['resource|false','command'=>'string','descriptorspec'=>'array','&pipes'=>'array','cwd='=>'string|null','env='=>'array|null','other_options='=>'array']");
f("proc_terminate", "['bool','process'=>'','signal='=>'int']");
f("property_exists", "['bool','object_or_class'=>'object|string','property_name'=>'string']");
f("ps_add_bookmark", "['int','psdoc'=>'','text'=>'string','parent='=>'int','open='=>'int']");
f("ps_add_launchlink", "['bool','psdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','filename'=>'string']");
f("ps_add_locallink", "['bool','psdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','page'=>'int','dest'=>'string']");
f("ps_add_note", "['bool','psdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','contents'=>'string','title'=>'string','icon'=>'string','open'=>'int']");
f("ps_add_pdflink", "['bool','psdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','filename'=>'string','page'=>'int','dest'=>'string']");
f("ps_add_weblink", "['bool','psdoc'=>'','llx'=>'float','lly'=>'float','urx'=>'float','ury'=>'float','url'=>'string']");
f("ps_arc", "['bool','psdoc'=>'','x'=>'float','y'=>'float','radius'=>'float','alpha'=>'float','beta'=>'float']");
f("ps_arcn", "['bool','psdoc'=>'','x'=>'float','y'=>'float','radius'=>'float','alpha'=>'float','beta'=>'float']");
f("ps_begin_page", "['bool','psdoc'=>'','width'=>'float','height'=>'float']");
f("ps_begin_pattern", "['int','psdoc'=>'','width'=>'float','height'=>'float','xstep'=>'float','ystep'=>'float','painttype'=>'int']");
f("ps_begin_template", "['int','psdoc'=>'','width'=>'float','height'=>'float']");
f("ps_circle", "['bool','psdoc'=>'','x'=>'float','y'=>'float','radius'=>'float']");
f("ps_clip", "['bool','psdoc'=>'']");
f("ps_close", "['bool','psdoc'=>'']");
f("ps_close_image", "['','psdoc'=>'','imageid'=>'int']");
f("ps_closepath", "['bool','psdoc'=>'']");
f("ps_closepath_stroke", "['bool','psdoc'=>'']");
f("ps_continue_text", "['bool','psdoc'=>'','text'=>'string']");
f("ps_curveto", "['bool','psdoc'=>'','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float']");
f("ps_delete", "['bool','psdoc'=>'']");
f("ps_end_page", "['bool','psdoc'=>'']");
f("ps_end_pattern", "['bool','psdoc'=>'']");
f("ps_end_template", "['bool','psdoc'=>'']");
f("ps_fill", "['bool','psdoc'=>'']");
f("ps_fill_stroke", "['bool','psdoc'=>'']");
f("ps_findfont", "['int','psdoc'=>'','fontname'=>'string','encoding'=>'string','embed='=>'bool']");
f("ps_get_buffer", "['string','psdoc'=>'']");
f("ps_get_parameter", "['string','psdoc'=>'','name'=>'string','modifier='=>'float']");
f("ps_get_value", "['float','psdoc'=>'','name'=>'string','modifier='=>'float']");
f("ps_hyphenate", "['array','psdoc'=>'','text'=>'string']");
f("ps_include_file", "['bool','psdoc'=>'','file'=>'string']");
f("ps_lineto", "['bool','psdoc'=>'','x'=>'float','y'=>'float']");
f("ps_makespotcolor", "['int','psdoc'=>'','name'=>'string','reserved='=>'int']");
f("ps_moveto", "['bool','psdoc'=>'','x'=>'float','y'=>'float']");
f("ps_new", "['resource']");
f("ps_open_file", "['bool','psdoc'=>'','filename='=>'string']");
f("ps_open_image_file", "['int','psdoc'=>'','type'=>'string','filename'=>'string','stringparam='=>'string','intparam='=>'int']");
f("ps_open_image", "['int','psdoc'=>'','type'=>'string','source'=>'string','data'=>'string','lenght'=>'int','width'=>'int','height'=>'int','components'=>'int','bpc'=>'int','params'=>'string']");
f("ps_open_memory_image", "['int','psdoc'=>'','gd'=>'int']");
f("pspell_add_to_personal", "['bool','pspell'=>'int','word'=>'string']");
f("pspell_add_to_session", "['bool','pspell'=>'int','word'=>'string']");
f("pspell_check", "['bool','pspell'=>'int','word'=>'string']");
f("pspell_clear_session", "['bool','pspell'=>'int']");
f("pspell_config_create", "['int','language'=>'string','spelling='=>'string','jargon='=>'string','encoding='=>'string']");
f("pspell_config_data_dir", "['bool','conf'=>'int','directory'=>'string']");
f("pspell_config_dict_dir", "['bool','conf'=>'int','directory'=>'string']");
f("pspell_config_ignore", "['bool','conf'=>'int','ignore'=>'int']");
f("pspell_config_mode", "['bool','conf'=>'int','mode'=>'int']");
f("pspell_config_personal", "['bool','conf'=>'int','personal'=>'string']");
f("pspell_config_repl", "['bool','conf'=>'int','repl'=>'string']");
f("pspell_config_runtogether", "['bool','conf'=>'int','runtogether'=>'bool']");
f("pspell_config_save_repl", "['bool','conf'=>'int','save'=>'bool']");
f("pspell_new_config", "['int','config'=>'int']");
f("pspell_new", "['int','language'=>'string','spelling='=>'string','jargon='=>'string','encoding='=>'string','mode='=>'int']");
f("pspell_new_personal", "['int','personal'=>'string','language'=>'string','spelling='=>'string','jargon='=>'string','encoding='=>'string','mode='=>'int']");
f("pspell_save_wordlist", "['bool','pspell'=>'int']");
f("pspell_store_replacement", "['bool','pspell'=>'int','misspell'=>'string','correct'=>'string']");
f("pspell_suggest", "['array','pspell'=>'int','word'=>'string']");
f("ps_place_image", "['bool','psdoc'=>'','imageid'=>'int','x'=>'float','y'=>'float','scale'=>'float']");
f("ps_rect", "['bool','psdoc'=>'','x'=>'float','y'=>'float','width'=>'float','height'=>'float']");
f("ps_restore", "['bool','psdoc'=>'']");
f("ps_rotate", "['bool','psdoc'=>'','rot'=>'float']");
f("ps_save", "['bool','psdoc'=>'']");
f("ps_scale", "['bool','psdoc'=>'','x'=>'float','y'=>'float']");
f("ps_set_border_color", "['bool','psdoc'=>'','red'=>'float','green'=>'float','blue'=>'float']");
f("ps_set_border_dash", "['bool','psdoc'=>'','black'=>'float','white'=>'float']");
f("ps_set_border_style", "['bool','psdoc'=>'','style'=>'string','width'=>'float']");
f("ps_setcolor", "['bool','psdoc'=>'','type'=>'string','colorspace'=>'string','c1'=>'float','c2'=>'float','c3'=>'float','c4'=>'float']");
f("ps_setdash", "['bool','psdoc'=>'','on'=>'float','off'=>'float']");
f("ps_setflat", "['bool','psdoc'=>'','value'=>'float']");
f("ps_setfont", "['bool','psdoc'=>'','fontid'=>'int','size'=>'float']");
f("ps_setgray", "['bool','psdoc'=>'','gray'=>'float']");
f("ps_set_info", "['bool','p'=>'','key'=>'string','val'=>'string']");
f("ps_setlinecap", "['bool','psdoc'=>'','type'=>'int']");
f("ps_setlinejoin", "['bool','psdoc'=>'','type'=>'int']");
f("ps_setlinewidth", "['bool','psdoc'=>'','width'=>'float']");
f("ps_setmiterlimit", "['bool','psdoc'=>'','value'=>'float']");
f("ps_setoverprintmode", "['bool','psdoc'=>'','mode'=>'int']");
f("ps_set_parameter", "['bool','psdoc'=>'','name'=>'string','value'=>'string']");
f("ps_setpolydash", "['bool','psdoc'=>'','arr'=>'float']");
f("ps_set_text_pos", "['bool','psdoc'=>'','x'=>'float','y'=>'float']");
f("ps_set_value", "['bool','psdoc'=>'','name'=>'string','value'=>'float']");
f("ps_shading", "['int','psdoc'=>'','type'=>'string','x0'=>'float','y0'=>'float','x1'=>'float','y1'=>'float','c1'=>'float','c2'=>'float','c3'=>'float','c4'=>'float','optlist'=>'string']");
f("ps_shading_pattern", "['int','psdoc'=>'','shadingid'=>'int','optlist'=>'string']");
f("ps_shfill", "['bool','psdoc'=>'','shadingid'=>'int']");
f("ps_show2", "['bool','psdoc'=>'','text'=>'string','len'=>'int']");
f("ps_show", "['bool','psdoc'=>'','text'=>'string']");
f("ps_show_boxed", "['int','psdoc'=>'','text'=>'string','left'=>'float','bottom'=>'float','width'=>'float','height'=>'float','hmode'=>'string','feature='=>'string']");
f("ps_show_xy2", "['bool','psdoc'=>'','text'=>'string','len'=>'int','xcoor'=>'float','ycoor'=>'float']");
f("ps_show_xy", "['bool','psdoc'=>'','text'=>'string','x'=>'float','y'=>'float']");
f("ps_string_geometry", "['array','psdoc'=>'','text'=>'string','fontid='=>'int','size='=>'float']");
f("ps_stringwidth", "['float','psdoc'=>'','text'=>'string','fontid='=>'int','size='=>'float']");
f("ps_stroke", "['bool','psdoc'=>'']");
f("ps_symbol", "['bool','psdoc'=>'','ord'=>'int']");
f("ps_symbol_name", "['string','psdoc'=>'','ord'=>'int','fontid='=>'int']");
f("ps_symbol_width", "['float','psdoc'=>'','ord'=>'int','fontid='=>'int','size='=>'float']");
f("ps_translate", "['bool','psdoc'=>'','x'=>'float','y'=>'float']");
f("putenv", "['bool','setting'=>'string']");
f("px_close", "['bool','pxdoc'=>'']");
f("px_create_fp", "['bool','pxdoc'=>'','file'=>'','fielddesc'=>'array']");
f("px_date2string", "['string','pxdoc'=>'','value'=>'int','format'=>'string']");
f("px_delete", "['bool','pxdoc'=>'']");
f("px_delete_record", "['bool','pxdoc'=>'','num'=>'int']");
f("px_get_field", "['array','pxdoc'=>'','fieldno'=>'int']");
f("px_get_info", "['array','pxdoc'=>'']");
f("px_get_parameter", "['string','pxdoc'=>'','name'=>'string']");
f("px_get_record", "['array','pxdoc'=>'','num'=>'int','mode='=>'int']");
f("px_get_schema", "['array','pxdoc'=>'','mode='=>'int']");
f("px_get_value", "['float','pxdoc'=>'','name'=>'string']");
f("px_insert_record", "['int','pxdoc'=>'','data'=>'array']");
f("px_new", "['resource']");
f("px_numfields", "['int','pxdoc'=>'']");
f("px_numrecords", "['int','pxdoc'=>'']");
f("px_open_fp", "['bool','pxdoc'=>'','file'=>'']");
f("px_put_record", "['bool','pxdoc'=>'','record'=>'array','recpos='=>'int']");
f("px_retrieve_record", "['array','pxdoc'=>'','num'=>'int','mode='=>'int']");
f("px_set_blob_file", "['bool','pxdoc'=>'','filename'=>'string']");
f("px_set_parameter", "['bool','pxdoc'=>'','name'=>'string','value'=>'string']");
f("px_set_tablename", "['','pxdoc'=>'','name'=>'string']");
f("px_set_targetencoding", "['bool','pxdoc'=>'','encoding'=>'string']");
f("px_set_value", "['bool','pxdoc'=>'','name'=>'string','value'=>'float']");
f("px_timestamp2string", "['string','pxdoc'=>'','value'=>'float','format'=>'string']");
f("px_update_record", "['bool','pxdoc'=>'','data'=>'array','num'=>'int']");
f("qdom_error", "['string']");
f("qdom_tree", "['QDomDocument','doc'=>'string']");
f("QuickHashIntHash::add", "['bool','key'=>'int','value='=>'int']");
f("QuickHashIntHash::__construct", "['','size'=>'int','options='=>'int']");
f("QuickHashIntHash::delete", "['bool','key'=>'int']");
f("QuickHashIntHash::exists", "['bool','key'=>'int']");
f("QuickHashIntHash::get", "['int','key'=>'int']");
f("QuickHashIntHash::getSize", "['int']");
f("QuickHashIntHash::loadFromFile", "['QuickHashIntHash','filename'=>'string','options='=>'int']");
f("QuickHashIntHash::loadFromString", "['QuickHashIntHash','contents'=>'string','options='=>'int']");
f("QuickHashIntHash::saveToFile", "['void','filename'=>'string']");
f("QuickHashIntHash::saveToString", "['string']");
f("QuickHashIntHash::set", "['bool','key'=>'int','value'=>'int']");
f("QuickHashIntHash::update", "['bool','key'=>'int','value'=>'int']");
f("QuickHashIntSet::add", "['bool','key'=>'int']");
f("QuickHashIntSet::__construct", "['','size'=>'int','options='=>'int']");
f("QuickHashIntSet::delete", "['bool','key'=>'int']");
f("QuickHashIntSet::exists", "['bool','key'=>'int']");
f("QuickHashIntSet::getSize", "['int']");
f("QuickHashIntSet::loadFromFile", "['QuickHashIntSet','filename'=>'string','size='=>'int','options='=>'int']");
f("QuickHashIntSet::loadFromString", "['QuickHashIntSet','contents'=>'string','size='=>'int','options='=>'int']");
f("QuickHashIntSet::saveToFile", "['void','filename'=>'string']");
f("QuickHashIntSet::saveToString", "['string']");
f("QuickHashIntStringHash::add", "['bool','key'=>'int','value'=>'string']");
f("QuickHashIntStringHash::__construct", "['','size'=>'int','options='=>'int']");
f("QuickHashIntStringHash::delete", "['bool','key'=>'int']");
f("QuickHashIntStringHash::exists", "['bool','key'=>'int']");
f("QuickHashIntStringHash::get", "['mixed','key'=>'int']");
f("QuickHashIntStringHash::getSize", "['int']");
f("QuickHashIntStringHash::loadFromFile", "['QuickHashIntStringHash','filename'=>'string','size='=>'int','options='=>'int']");
f("QuickHashIntStringHash::loadFromString", "['QuickHashIntStringHash','contents'=>'string','size='=>'int','options='=>'int']");
f("QuickHashIntStringHash::saveToFile", "['void','filename'=>'string']");
f("QuickHashIntStringHash::saveToString", "['string']");
f("QuickHashIntStringHash::set", "['int','key'=>'int','value'=>'string']");
f("QuickHashIntStringHash::update", "['bool','key'=>'int','value'=>'string']");
f("QuickHashStringIntHash::add", "['bool','key'=>'string','value'=>'int']");
f("QuickHashStringIntHash::__construct", "['','size'=>'int','options='=>'int']");
f("QuickHashStringIntHash::delete", "['bool','key'=>'string']");
f("QuickHashStringIntHash::exists", "['bool','key'=>'string']");
f("QuickHashStringIntHash::get", "['mixed','key'=>'string']");
f("QuickHashStringIntHash::getSize", "['int']");
f("QuickHashStringIntHash::loadFromFile", "['QuickHashStringIntHash','filename'=>'string','size='=>'int','options='=>'int']");
f("QuickHashStringIntHash::loadFromString", "['QuickHashStringIntHash','contents'=>'string','size='=>'int','options='=>'int']");
f("QuickHashStringIntHash::saveToFile", "['void','filename'=>'string']");
f("QuickHashStringIntHash::saveToString", "['string']");
f("QuickHashStringIntHash::set", "['int','key'=>'string','value'=>'int']");
f("QuickHashStringIntHash::update", "['bool','key'=>'string','value'=>'int']");
f("quoted_printable_decode", "['string','str'=>'string']");
f("quoted_printable_encode", "['string','str'=>'string']");
f("quotemeta", "['string','str'=>'string']");
f("rad2deg", "['float','number'=>'float']");
f("radius_acct_open", "['resource']");
f("radius_add_server", "['bool','radius_handle'=>'','hostname'=>'string','port'=>'int','secret'=>'string','timeout'=>'int','max_tries'=>'int']");
f("radius_auth_open", "['resource']");
f("radius_close", "['bool','radius_handle'=>'']");
f("radius_config", "['bool','radius_handle'=>'','file'=>'string']");
f("radius_create_request", "['bool','radius_handle'=>'','type'=>'int']");
f("radius_cvt_addr", "['string','data'=>'string']");
f("radius_cvt_int", "['int','data'=>'string']");
f("radius_cvt_string", "['string','data'=>'string']");
f("radius_demangle_mppe_key", "['string','radius_handle'=>'','mangled'=>'string']");
f("radius_demangle", "['string','radius_handle'=>'','mangled'=>'string']");
f("radius_get_attr", "['','radius_handle'=>'']");
f("radius_get_tagged_attr_data", "['string','data'=>'string']");
f("radius_get_tagged_attr_tag", "['int','data'=>'string']");
f("radius_get_vendor_attr", "['array','data'=>'string']");
f("radius_put_addr", "['bool','radius_handle'=>'','type'=>'int','addr'=>'string']");
f("radius_put_attr", "['bool','radius_handle'=>'','type'=>'int','value'=>'string']");
f("radius_put_int", "['bool','radius_handle'=>'','type'=>'int','value'=>'int']");
f("radius_put_string", "['bool','radius_handle'=>'','type'=>'int','value'=>'string']");
f("radius_put_vendor_addr", "['bool','radius_handle'=>'','vendor'=>'int','type'=>'int','addr'=>'string']");
f("radius_put_vendor_attr", "['bool','radius_handle'=>'','vendor'=>'int','type'=>'int','value'=>'string']");
f("radius_put_vendor_int", "['bool','radius_handle'=>'','vendor'=>'int','type'=>'int','value'=>'int']");
f("radius_put_vendor_string", "['bool','radius_handle'=>'','vendor'=>'int','type'=>'int','value'=>'string']");
f("radius_request_authenticator", "['string','radius_handle'=>'']");
f("radius_salt_encrypt_attr", "['string','radius_handle'=>'resource','data'=>'string']");
f("radius_send_request", "['int','radius_handle'=>'']");
f("radius_server_secret", "['string','radius_handle'=>'']");
f("radius_strerror", "['string','radius_handle'=>'']");
f("rand\\'1", "['int']");
f("rand", "['int','min'=>'int','max'=>'int']");
f("random_bytes", "['string','length'=>'int']");
f("random_int", "['int','min'=>'int','max'=>'int']");
f("range", "['array','low'=>'','high'=>'','step='=>'int']");
f("RangeException::__clone", "['Throwable|Exception']");
f("RangeException::__construct", "['RangeException','message='=>'string','code='=>'int','previous='=>'Throwable|RangeException|null']");
f("RangeException::getCode", "['int']");
f("RangeException::getFile", "['string']");
f("RangeException::getLine", "['int']");
f("RangeException::getMessage", "['string']");
f("RangeException::getPrevious", "['Throwable|RangeException']");
f("RangeException::getTrace", "['array']");
f("RangeException::getTraceAsString", "['string']");
f("RangeException::__toString", "['string']");
f("rar_allow_broken_set", "['bool','rarfile'=>'RarArchive','allow_broken'=>'bool']");
f("RarArchive::close", "['bool','rarfile'=>'rararchive']");
f("RarArchive::getComment", "['string','rarfile'=>'rararchive']");
f("RarArchive::getEntries", "['RarArchive','rarfile'=>'rararchive']");
f("RarArchive::getEntry", "['RarEntry','entryname'=>'string','rarfile'=>'rararchive']");
f("RarArchive::isBroken", "['bool','rarfile'=>'rararchive']");
f("RarArchive::isSolid", "['bool','rarfile'=>'rararchive']");
f("RarArchive::open", "['RarArchive','filename'=>'string','password='=>'string','volume_callback='=>'callable']");
f("RarArchive::setAllowBroken", "['bool','allow_broken'=>'bool','rarfile'=>'rararchive']");
f("RarArchive::__toString", "['RarArchive']");
f("rar_broken_is", "['bool','rarfile'=>'rararchive']");
f("rar_close", "['bool','rarfile'=>'rararchive']");
f("rar_comment_get", "['string','rarfile'=>'rararchive']");
f("RarEntry::extract", "['bool','dir'=>'string','filepath='=>'string','password='=>'string','extended_data='=>'bool']");
f("RarEntry::getAttr", "['int']");
f("RarEntry::getCrc", "['string']");
f("RarEntry::getFileTime", "['string']");
f("RarEntry::getHostOs", "['int']");
f("RarEntry::getMethod", "['int']");
f("RarEntry::getName", "['string']");
f("RarEntry::getPackedSize", "['int']");
f("rar_entry_get", "['RarEntry','entryname'=>'string','rarfile'=>'rararchive']");
f("RarEntry::getStream", "['resource','password='=>'string']");
f("RarEntry::getUnpackedSize", "['int']");
f("RarEntry::getVersion", "['int']");
f("RarEntry::isDirectory", "['bool']");
f("RarEntry::isEncrypted", "['bool']");
f("RarEntry::__toString", "['string']");
f("RarException::isUsingExceptions", "['bool']");
f("RarException::setUsingExceptions", "['RarEntry','using_exceptions'=>'bool']");
f("rar_list", "['RarArchive','rarfile'=>'rararchive']");
f("rar_open", "['RarArchive','filename'=>'string','password='=>'string','volume_callback='=>'callable']");
f("rar_solid_is", "['bool','rarfile'=>'rararchive']");
f("rar_wrapper_cache_stats", "['string']");
f("rawurldecode", "['string','str'=>'string']");
f("rawurlencode", "['string','str'=>'string']");
f("readdir", "['string','dir_handle='=>'']");
f("readfile", "['int','filename'=>'string','use_include_path='=>'bool','context='=>'']");
f("readgzfile", "['int','filename'=>'string','use_include_path='=>'int']");
f("readline_add_history", "['bool','prompt'=>'string']");
f("readline_callback_handler_install", "['bool','prompt'=>'string','callback'=>'']");
f("readline_callback_handler_remove", "['bool']");
f("readline_callback_read_char", "['']");
f("readline_clear_history", "['bool']");
f("readline_completion_function", "['bool','funcname'=>'callable']");
f("readline_info", "['','varname='=>'string','newvalue='=>'string']");
f("readline_list_history", "['array']");
f("readline_on_new_line", "['']");
f("readline_read_history", "['bool','filename='=>'string']");
f("readline_redisplay", "['']");
f("readline", "['string','prompt='=>'string|null']");
f("readline_write_history", "['bool','filename='=>'string']");
f("readlink", "['string','filename'=>'string']");
f("realpath_cache_get", "['array']");
f("realpath_cache_size", "['int']");
f("realpath", "['string','path'=>'string']");
f("recode_file", "['bool','request'=>'string','input'=>'','output'=>'']");
f("recode_string", "['string','request'=>'string','str'=>'string']");
f("RecursiveArrayIterator::getChildren", "['RecursiveArrayIterator']");
f("RecursiveArrayIterator::hasChildren", "['bool']");
f("RecursiveCachingIterator::__construct", "['RecursiveCachingIterator','it'=>'recursiveiterator','flags'=>'']");
f("RecursiveCachingIterator::getChildren", "['RecursiveCachingIterator']");
f("RecursiveCachingIterator::hasChildren", "['bool']");
f("RecursiveCallbackFilterIterator::__construct", "['RecursiveCallbackFilterIterator','it'=>'recursiveiterator','func'=>'callable']");
f("RecursiveCallbackFilterIterator::getChildren", "['RecursiveCallbackFilterIterator']");
f("RecursiveCallbackFilterIterator::hasChildren", "['void']");
f("RecursiveDirectoryIterator::__construct", "['RecursiveDirectoryIterator','path'=>'string','flags='=>'int']");
f("RecursiveDirectoryIterator::getChildren", "['any']");
f("RecursiveDirectoryIterator::getSubPath", "['']");
f("RecursiveDirectoryIterator::getSubPathname", "['']");
f("RecursiveDirectoryIterator::hasChildren", "['bool','allow_links='=>'bool']");
f("RecursiveDirectoryIterator::key", "['string']");
f("RecursiveDirectoryIterator::next", "['']");
f("RecursiveDirectoryIterator::rewind", "['']");
f("RecursiveFilterIterator::__construct", "['RecursiveFilterIterator','it'=>'recursiveiterator']");
f("RecursiveFilterIterator::getChildren", "['RecursiveFilterIterator']");
f("RecursiveFilterIterator::hasChildren", "['bool']");
f("RecursiveIterator::getChildren", "['RecursiveIterator']");
f("RecursiveIterator::hasChildren", "['bool']");
f("RecursiveIteratorIterator::beginChildren", "['']");
f("RecursiveIteratorIterator::beginIteration", "['RecursiveIterator']");
f("RecursiveIteratorIterator::callGetChildren", "['RecursiveIterator']");
f("RecursiveIteratorIterator::callHasChildren", "['bool']");
f("RecursiveIteratorIterator::__construct", "['RecursiveIteratorIterator','it'=>'recursiveiterator|iteratoraggregate','mode='=>'int','flags='=>'int']");
f("RecursiveIteratorIterator::current", "['']");
f("RecursiveIteratorIterator::endChildren", "['']");
f("RecursiveIteratorIterator::endIteration", "['RecursiveIterator']");
f("RecursiveIteratorIterator::getDepth", "['int']");
f("RecursiveIteratorIterator::getInnerIterator", "['RecursiveIterator']");
f("RecursiveIteratorIterator::getMaxDepth", "['int|false']");
f("RecursiveIteratorIterator::getSubIterator", "['RecursiveIterator','level='=>'int']");
f("RecursiveIteratorIterator::key", "['']");
f("RecursiveIteratorIterator::next", "['']");
f("RecursiveIteratorIterator::nextElement", "['']");
f("RecursiveIteratorIterator::rewind", "['']");
f("RecursiveIteratorIterator::setMaxDepth", "['','max_depth='=>'']");
f("RecursiveIteratorIterator::valid", "['bool']");
f("RecursiveRegexIterator::__construct", "['RecursiveRegexIterator','it'=>'recursiveiterator','regex'=>'string','mode'=>'int','flags'=>'int','preg_flags'=>'int']");
f("RecursiveRegexIterator::getChildren", "['RecursiveRegexIterator']");
f("RecursiveRegexIterator::hasChildren", "['bool']");
f("RecursiveTreeIterator::beginChildren", "['']");
f("RecursiveTreeIterator::beginIteration", "['RecursiveIterator']");
f("RecursiveTreeIterator::callGetChildren", "['RecursiveIterator']");
f("RecursiveTreeIterator::callHasChildren", "['bool']");
f("RecursiveTreeIterator::__construct", "['RecursiveTreeIterator','it'=>'recursiveiterator|iteratoraggregate','flags'=>'int','cit_flags'=>'int',']]]'=>'mode']");
f("RecursiveTreeIterator::current", "['string']");
f("RecursiveTreeIterator::endChildren", "['']");
f("RecursiveTreeIterator::endIteration", "['']");
f("RecursiveTreeIterator::getEntry", "['string']");
f("RecursiveTreeIterator::getPostfix", "['string']");
f("RecursiveTreeIterator::getPrefix", "['string']");
f("RecursiveTreeIterator::key", "['string']");
f("RecursiveTreeIterator::next", "['']");
f("RecursiveTreeIterator::nextElement", "['']");
f("RecursiveTreeIterator::rewind", "['']");
f("RecursiveTreeIterator::setPostfix", "['','prefix'=>'string']");
f("RecursiveTreeIterator::setPrefixPart", "['','part'=>'int','prefix'=>'string']");
f("RecursiveTreeIterator::valid", "['bool']");
f("Redis::__construct", "['Redis']");
f("Redis::append", "['int','key'=>'string','value'=>'string']");
f("Redis::auth", "['bool','password'=>'string']");
f("Redis::bgRewriteAOF", "['bool']");
f("Redis::bgSave", "['bool']");
f("Redis::bitCount", "['int','key'=>'string']");
f("Redis::bitOp", "['int','operation'=>'string','...'=>'string']");
f("Redis::close", "['void']");
f("Redis::config", "['string','key'=>'string','value='=>'string']");
f("Redis::connect", "['bool','host'=>'string','port='=>'int','timeout='=>'float','retry_interval='=>'int|null']");
f("Redis::dbSize", "['int']");
f("Redis::decrByFloat", "['float','key'=>'string','value'=>'float']");
f("Redis::decrBy", "['int','key'=>'string','value'=>'int']");
f("Redis::decr", "['int','key'=>'string']");
f("Redis::del\\'1", "['bool','key'=>'string[]']");
f("Redis::del", "['bool','key'=>'string','...'=>'string']");
f("Redis::delete\\'1", "['bool','key'=>'string[]']");
f("Redis::delete", "['bool','key'=>'string','...'=>'string']");
f("Redis::dump", "['string|false','key'=>'string']");
f("Redis::echo", "['string','message'=>'string']");
f("Redis::exists", "['bool','key'=>'string']");
f("Redis::expireAt", "['bool','key'=>'string','expiry'=>'int']");
f("Redis::flushAll", "['bool']");
f("Redis::flushDb", "['bool']");
f("Redis::getBit", "['int','key'=>'string','offset'=>'int']");
f("Redis::getKeys", "['string[]','pattern'=>'string']");
f("Redis::getMultiple", "['array','keys'=>'string[]']");
f("Redis::getOption", "['','name'=>'int']");
f("Redis::getRange", "['int','key'=>'string','start'=>'int','end'=>'int']");
f("Redis::getSet", "['string','key'=>'string','string'=>'string']");
f("Redis::get", "['string|false','key'=>'string']");
f("Redis::incrByFloat", "['float','key'=>'string']");
f("Redis::incrBy", "['int','key'=>'string','value'=>'int']");
f("Redis::incr", "['int','key'=>'string']");
f("Redis::info", "['array','option='=>'string']");
f("Redis::keys", "['string[]','pattern'=>'string']");
f("Redis::lastSave", "['int']");
f("Redis::mGet", "['array','keys'=>'string[]']");
f("Redis::migrate", "['','host'=>'string','port'=>'int','db'=>'int','timeout'=>'int','copy='=>'bool','replace='=>'bool']");
f("Redis::move", "['bool','key'=>'string','dbindex'=>'int']");
f("Redis::mSet", "['bool','pairs'=>'array']");
f("Redis::mSetNx", "['bool','pairs'=>'array']");
f("Redis::object", "['string|long|false','info'=>'string','key'=>'string']");
f("Redis::open", "['bool','host'=>'string','port='=>'int','timeout='=>'float','retry_interval='=>'int|null']");
f("Redis::pconnect", "['bool','host'=>'string','port='=>'int','timeout='=>'float','persistent_id='=>'string','retry_interval='=>'int|null']");
f("Redis::persist", "['bool','key'=>'string']");
f("Redis::pexpireAt", "['bool','key'=>'string','expiry'=>'int']");
f("Redis::ping", "['string']");
f("Redis::popen", "['bool','host'=>'string','port='=>'int','timeout='=>'float','persistent_id='=>'string','retry_interval='=>'int|null']");
f("Redis::pttl", "['int','key'=>'string']");
f("Redis::randomKey", "['string']");
f("Redis::rename", "['bool','srckey'=>'string','dstkey'=>'string']");
f("Redis::renameKey", "['bool','srckey'=>'string','dstkey'=>'string']");
f("Redis::renameNx", "['bool','srckey'=>'string','dstkey'=>'string']");
f("Redis::resetStat", "['bool']");
f("Redis::restore", "['','key'=>'string','ttl'=>'int','value'=>'string']");
f("Redis::save", "['bool']");
f("Redis::scan", "['string[]|false','iterator'=>'int|null','pattern='=>'string|null','count='=>'int|null']");
f("Redis::select", "['bool','dbindex'=>'int']");
f("Redis::setBit", "['int','key'=>'string','offset'=>'int','value'=>'int']");
f("Redis::set", "['bool','key'=>'string','value'=>'string','options='=>'array']");
f("Redis::set", "['bool','key'=>'string','value'=>'string','timeout='=>'int']");
f("Redis::setEx", "['bool','key'=>'string','ttl'=>'int','value'=>'string']");
f("Redis::setNx", "['bool','key'=>'string','value'=>'string']");
f("Redis::setOption", "['bool','name'=>'int','value'=>'']");
f("Redis::setRange", "['int','key'=>'string','offset'=>'int','end'=>'int']");
f("Redis::slave\\'1", "['bool','host'=>'string','port'=>'int']");
f("Redis::slave", "['bool','host'=>'string','port'=>'int']");
f("Redis::slowLog", "['','operation'=>'string','length='=>'int']");
f("Redis::sort", "['array|int','options='=>'array|null']");
f("Redis::strLen", "['int','key'=>'string']");
f("Redis::time", "['array']");
f("Redis::ttl", "['array|int','options='=>'array|null']");
f("Redis::type", "['int','key'=>'string']");
f("ReflectionClass::__clone", "['ReflectionClass']");
f("ReflectionClass::__construct", "['ReflectionClass','argument'=>'']");
f("ReflectionClass::export", "['string','argument'=>'','return='=>'bool']");
f("ReflectionClass::getConstant", "['','name'=>'string']");
f("ReflectionClass::getConstants", "['array']");
f("ReflectionClass::getConstructor", "['ReflectionMethod']");
f("ReflectionClass::getDefaultProperties", "['array']");
f("ReflectionClass::getDocComment", "['string|false']");
f("ReflectionClass::getEndLine", "['int']");
f("ReflectionClass::getExtensionName", "['string|false']");
f("ReflectionClass::getExtension", "['ReflectionExtension|NULL']");
f("ReflectionClass::getFileName", "['string']");
f("ReflectionClass::getInterfaceNames", "['array']");
f("ReflectionClass::getInterfaces", "['array']");
f("ReflectionClass::getMethod", "['ReflectionMethod','name'=>'string']");
f("ReflectionClass::getMethods", "['array','filter='=>'int']");
f("ReflectionClass::getModifiers", "['int']");
f("ReflectionClass::getNamespaceName", "['string']");
f("ReflectionClass::getName", "['string']");
f("ReflectionClass::getParentClass", "['ReflectionClass']");
f("ReflectionClass::getProperties", "['array','filter='=>'int']");
f("ReflectionClass::getProperty", "['ReflectionProperty','name'=>'string']");
f("ReflectionClass::getShortName", "['string']");
f("ReflectionClass::getStartLine", "['int']");
f("ReflectionClass::getStaticProperties", "['array']");
f("ReflectionClass::getStaticPropertyValue", "['','name'=>'string','default='=>'']");
f("ReflectionClass::getTraitaliases", "['arra']");
f("ReflectionClass::getTraitAliases", "['array']");
f("ReflectionClass::getTraitNames", "['array']");
f("ReflectionClass::getTraits", "['array']");
f("ReflectionClass::hasConstant", "['bool','name'=>'string']");
f("ReflectionClass::hasMethod", "['bool','name'=>'string']");
f("ReflectionClass::hasProperty", "['bool','name'=>'string']");
f("ReflectionClass::implementsInterface", "['bool','interface_name'=>'string|reflectionclass']");
f("ReflectionClass::inNamespace", "['bool']");
f("ReflectionClass::isAbstract", "['bool']");
f("ReflectionClass::isAnonymous", "['bool']");
f("ReflectionClass::isCloneable", "['bool']");
f("ReflectionClass::isFinal", "['bool']");
f("ReflectionClass::isInstance", "['bool','any'=>'any']");
f("ReflectionClass::isInstantiable", "['bool']");
f("ReflectionClass::isInterface", "['bool']");
f("ReflectionClass::isInternal", "['bool']");
f("ReflectionClass::isIterateable", "['bool']");
f("ReflectionClass::isSubclassOf", "['bool','class'=>'string|reflectionclass']");
f("ReflectionClass::isTrait", "['bool']");
f("ReflectionClass::isUserDefined", "['bool']");
f("ReflectionClass::newInstanceArgs", "['any','args='=>'array']");
f("ReflectionClass::newInstance", "['any','args='=>'','...='=>'']");
f("ReflectionClass::newInstanceWithoutConstructor", "['any']");
f("ReflectionClass::setStaticPropertyValue", "['','name'=>'string','value'=>'']");
f("ReflectionClass::__toString", "['string']");
f("Reflection::export", "['string','r'=>'reflector','return='=>'bool']");
f("ReflectionExtension::__clone", "['ReflectionExtension']");
f("ReflectionExtension::__construct", "['ReflectionExtension','name'=>'string']");
f("ReflectionExtension::export", "['string','name'=>'string','return='=>'bool']");
f("ReflectionExtension::getClasses", "['array']");
f("ReflectionExtension::getClassNames", "['array']");
f("ReflectionExtension::getConstants", "['array']");
f("ReflectionExtension::getDependencies", "['array']");
f("ReflectionExtension::getFunctions", "['array']");
f("ReflectionExtension::getINIEntries", "['array']");
f("ReflectionExtension::getName", "['string']");
f("ReflectionExtension::getVersion", "['string']");
f("ReflectionExtension::info", "['']");
f("ReflectionExtension::isDatabase", "['bool']");
f("ReflectionExtension::isTemporary", "['bool']");
f("ReflectionExtension::__toString", "['string']");
f("ReflectionFunctionAbstract::__clone", "['ReflectionFunctionAbstract']");
f("ReflectionFunctionAbstract::getClosureScopeClass", "['ReflectionClass']");
f("ReflectionFunctionAbstract::getClosureThis", "['any']");
f("ReflectionFunctionAbstract::getDocComment", "['string|false']");
f("ReflectionFunctionAbstract::getEndLine", "['int']");
f("ReflectionFunctionAbstract::getExtensionName", "['string']");
f("ReflectionFunctionAbstract::getExtension", "['ReflectionExtension']");
f("ReflectionFunctionAbstract::getFileName", "['string']");
f("ReflectionFunctionAbstract::getNamespaceName", "['string']");
f("ReflectionFunctionAbstract::getName", "['string']");
f("ReflectionFunctionAbstract::getNumberOfParameters", "['int']");
f("ReflectionFunctionAbstract::getNumberOfRequiredParameters", "['int']");
f("ReflectionFunctionAbstract::getParameters", "['ReflectionParameter[]']");
f("ReflectionFunctionAbstract::getReturnType", "['ReflectionType|null']");
f("ReflectionFunctionAbstract::getShortName", "['string']");
f("ReflectionFunctionAbstract::getStartLine", "['int']");
f("ReflectionFunctionAbstract::getStaticVariables", "['array']");
f("ReflectionFunctionAbstract:hasReturnType", "['bool']");
f("ReflectionFunctionAbstract::inNamespace", "['bool']");
f("ReflectionFunctionAbstract::isClosure", "['bool']");
f("ReflectionFunctionAbstract::isDeprecated", "['bool']");
f("ReflectionFunctionAbstract::isGenerator", "['bool']");
f("ReflectionFunctionAbstract::isInternal", "['bool']");
f("ReflectionFunctionAbstract::isUserDefined", "['bool']");
f("ReflectionFunctionAbstract::isVariadic", "['bool']");
f("ReflectionFunctionAbstract::returnsReference", "['bool']");
f("ReflectionFunctionAbstract::__toString", "['']");
f("ReflectionFunction::__construct", "['ReflectionFunction','name'=>'string|Closure']");
f("ReflectionFunction::export", "['string','name'=>'string','return='=>'bool']");
f("ReflectionFunction::getClosure", "['Closure']");
f("ReflectionFunction::getClosureScopeClass", "['ReflectionClass']");
f("ReflectionFunction::getClosureThis", "['bool']");
f("ReflectionFunction::getDocComment", "['string|false']");
f("ReflectionFunction::getEndLine", "['int']");
f("ReflectionFunction::getExtensionName", "['string|false']");
f("ReflectionFunction::getExtension", "['ReflectionExtension|NULL']");
f("ReflectionFunction::getFileName", "['string']");
f("ReflectionFunction::getNamespaceName", "['string']");
f("ReflectionFunction::getName", "['string']");
f("ReflectionFunction::getNumberOfParameters", "['int']");
f("ReflectionFunction::getNumberOfRequiredParameters", "['int']");
f("ReflectionFunction::getParameters", "['ReflectionParameter[]']");
f("ReflectionFunction::getReturnType", "['ReflectionType|null']");
f("ReflectionFunction::getShortName", "['string']");
f("ReflectionFunction::getStartLine", "['int']");
f("ReflectionFunction::getStaticVariables", "['array']");
f("ReflectionFunction::inNamespace", "['bool']");
f("ReflectionFunction::invoke", "['','...args='=>'']");
f("ReflectionFunction::invokeArgs", "['','args'=>'array']");
f("ReflectionFunction::isClosure", "['bool']");
f("ReflectionFunction::isDeprecated", "['bool']");
f("ReflectionFunction::isDisabled", "['bool']");
f("ReflectionFunction::isGenerator", "['bool']");
f("ReflectionFunction::isInternal", "['bool']");
f("ReflectionFunction::isUserDefined", "['bool']");
f("ReflectionFunction::isVariadic", "['bool']");
f("ReflectionFunction::returnsReference", "['bool']");
f("ReflectionFunction::__toString", "['string']");
f("ReflectionGenerator::__construct", "['ReflectionGenerator','generator'=>'any']");
f("ReflectionGenerator::getExecutingFile", "['string']");
f("ReflectionGenerator::getExecutingGenerator", "['Generator']");
f("ReflectionGenerator::getExecutingLine", "['int']");
f("ReflectionGenerator::getFunction", "['ReflectionFunctionAbstract']");
f("ReflectionGenerator::getThis", "['any']");
f("ReflectionGenerator::getTrace", "['array','options'=>'']");
f("Reflection::getModifierNames", "['array','modifiers'=>'int']");
f("ReflectionMethod::__construct", "['ReflectionMethod','class_or_method'=>'','name'=>'string']");
f("ReflectionMethod::export", "['string','class'=>'','name'=>'string','return='=>'bool']");
f("ReflectionMethod::getClosure", "['Closure','any'=>'']");
f("ReflectionMethod::getDeclaringClass", "['ReflectionClass']");
f("ReflectionMethod::getModifiers", "['int']");
f("ReflectionMethod::getPrototype", "['ReflectionMethod']");
f("ReflectionMethod::invokeArgs", "['','any'=>'','args'=>'array']");
f("ReflectionMethod::invoke", "['','any'=>'','...args='=>'']");
f("ReflectionMethod::isAbstract", "['bool']");
f("ReflectionMethod::isConstructor", "['bool']");
f("ReflectionMethod::isDestructor", "['bool']");
f("ReflectionMethod::isFinal", "['bool']");
f("ReflectionMethod::isPrivate", "['bool']");
f("ReflectionMethod::isProtected", "['bool']");
f("ReflectionMethod::isPublic", "['bool']");
f("ReflectionMethod::isStatic", "['bool']");
f("ReflectionMethod::setAccessible", "['','visible'=>'bool']");
f("ReflectionMethod::__toString", "['string']");
f("ReflectionObject::__construct", "['ReflectionObject','argument'=>'']");
f("ReflectionObject::export", "['','argument'=>'','return='=>'bool']");
f("ReflectionParameter::allowsNull", "['bool']");
f("ReflectionParameter::canBePassedByValue", "['bool']");
f("ReflectionParameter::__clone", "['']");
f("ReflectionParameter::__construct", "['ReflectionParameter','function'=>'','parameter'=>'']");
f("ReflectionParameter::export", "['','function'=>'','parameter'=>'','return='=>'bool']");
f("ReflectionParameter::getClass", "['ReflectionClass|NULL']");
f("ReflectionParameter::getDeclaringClass", "['ReflectionClass|NULL']");
f("ReflectionParameter::getDeclaringFunction", "['ReflectionFunction']");
f("ReflectionParameter::getDefaultValue", "['bool']");
f("ReflectionParameter::getDefaultValueConstantName", "['string']");
f("ReflectionParameter::getName", "['string']");
f("ReflectionParameter::getPosition", "['int']");
f("ReflectionParameter::getType", "['ReflectionType']");
f("ReflectionParameter::hasType", "['bool']");
f("ReflectionParameter::isArray", "['bool']");
f("ReflectionParameter::isCallable", "['bool']");
f("ReflectionParameter::isDefaultValueAvailable", "['bool']");
f("ReflectionParameter::isDefaultValueConstant", "['bool']");
f("ReflectionParameter::isOptional", "['bool']");
f("ReflectionParameter::isPassedByReference", "['bool']");
f("ReflectionParameter::isVariadic", "['bool']");
f("ReflectionParameter::__toString", "['string']");
f("ReflectionProperty::__clone", "['ReflectionProperty']");
f("ReflectionProperty::__construct", "['ReflectionProperty','class'=>'','name'=>'string']");
f("ReflectionProperty::export", "['string','class'=>'','name'=>'string','return='=>'bool']");
f("ReflectionProperty::getDeclaringClass", "['ReflectionClass']");
f("ReflectionProperty::getDocComment", "['string']");
f("ReflectionProperty::getModifiers", "['int']");
f("ReflectionProperty::getName", "['string']");
f("ReflectionProperty::getValue", "['','object='=>'any']");
f("ReflectionProperty::isDefault", "['bool']");
f("ReflectionProperty::isPrivate", "['bool']");
f("ReflectionProperty::isProtected", "['bool']");
f("ReflectionProperty::isPublic", "['bool']");
f("ReflectionProperty::isStatic", "['bool']");
f("ReflectionProperty::setAccessible", "['int','visible'=>'bool']");
f("ReflectionProperty::setValue\\'1", "['','value'=>'']");
f("ReflectionProperty::setValue", "['','any'=>'any','value'=>'']");
f("ReflectionProperty::__toString", "['string']");
f("ReflectionType::allowsNull", "['bool']");
f("ReflectionType::isBuiltin", "['bool']");
f("ReflectionType::__toString", "['string']");
f("ReflectionZendExtension::__clone", "['void']");
f("ReflectionZendExtension::__construct", "['ReflectionZendExtension','name'=>'string']");
f("ReflectionZendExtension::export", "['string','name'=>'string','return]'=>'bool']");
f("ReflectionZendExtension::getAuthor", "['string']");
f("ReflectionZendExtension::getCopyright", "['string']");
f("ReflectionZendExtension::getName", "['string']");
f("ReflectionZendExtension::getURL", "['string']");
f("ReflectionZendExtension::getVersion", "['string']");
f("ReflectionZendExtension::__toString", "['string']");
f("Reflector::export", "['string']");
f("Reflector::__toString", "['string']");
f("RegexIterator::accept", "['bool']");
f("RegexIterator::__construct", "['RegexIterator','it'=>'iterator','regex'=>'string','mode='=>'int','flags='=>'int','preg_flags='=>'int']");
f("RegexIterator::getFlags", "['int']");
f("RegexIterator::getMode", "['int']");
f("RegexIterator::getPregFlags", "['int']");
f("RegexIterator::getRegex", "['string']");
f("RegexIterator::setFlags", "['bool','new_flags'=>'int']");
f("RegexIterator::setMode", "['bool','new_mode'=>'int']");
f("RegexIterator::setPregFlags", "['bool','new_flags'=>'int']");
f("register_shutdown_function", "['','function'=>'callable','...parameter='=>'']");
f("register_tick_function", "['bool','function_name'=>'string','arg='=>'','...='=>'']");
f("rename", "['bool','old_name'=>'string','new_name'=>'string','context='=>'']");
f("rename_function", "['bool','original_name'=>'string','new_name'=>'string']");
f("reset", "['','array_arg'=>'array']");
f("ResourceBundle::__construct", "['ResourceBundle','locale'=>'string','bundlename'=>'string','fallback='=>'bool']");
f("resourcebundle_count", "['int','r'=>'resourcebundle']");
f("ResourceBundle::count", "['int']");
f("resourcebundle_create", "['ResourceBundle|null','locale'=>'string','bundlename'=>'string','fallback='=>'bool']");
f("ResourceBundle::create", "['ResourceBundle|null','locale'=>'string','bundlename'=>'string','fallback='=>'bool']");
f("resourcebundle_get_error_code", "['int','r'=>'resourcebundle']");
f("ResourceBundle::getErrorCode", "['int']");
f("resourcebundle_get_error_message", "['string','r'=>'resourcebundle']");
f("ResourceBundle::getErrorMessage", "['string']");
f("resourcebundle_get", "['','r'=>'resourcebundle','index'=>'string|int']");
f("ResourceBundle::get", "['','index'=>'string|int']");
f("ResourceBundle::getLocales", "['array','bundlename'=>'string']");
f("resourcebundle_locales", "['array','bundlename'=>'string']");
f("restore_error_handler", "['']");
f("restore_exception_handler", "['']");
f("restore_include_path", "['']");
f("rewind", "['bool','fp'=>'']");
f("rewinddir", "['','dir_handle='=>'']");
f("rmdir", "['bool','dirname'=>'string','context='=>'']");
f("round", "['float','number'=>'float','precision='=>'int','mode='=>'int']");
f("rpm_close", "['bool','rpmr'=>'']");
f("rpm_get_tag", "['','rpmr'=>'','tagnum'=>'int']");
f("rpm_is_valid", "['bool','filename'=>'string']");
f("rpm_open", "['resource','filename'=>'string']");
f("rpm_version", "['string']");
f("rrdc_disconnect", "['void']");
f("rrd_create", "['bool','filename'=>'string','options'=>'array']");
f("RRDCreator::addArchive", "['','description'=>'string']");
f("RRDCreator::addDataSource", "['','description'=>'string']");
f("RRDCreator::__construct", "['RRDCreator','path'=>'string','starttime='=>'string','step='=>'int']");
f("RRDCreator::save", "['bool']");
f("rrd_error", "['string']");
f("rrd_fetch", "['array','filename'=>'string','options'=>'array']");
f("rrd_first", "['int','file'=>'string','raaindex='=>'int']");
f("rrd_graph", "['array','filename'=>'string','options'=>'array']");
f("RRDGraph::__construct", "['RRDGraph','path'=>'string']");
f("RRDGraph::save", "['array']");
f("RRDGraph::saveVerbose", "['array']");
f("RRDGraph::setOptions", "['','options'=>'array']");
f("rrd_info", "['array','filename'=>'string']");
f("rrd_last", "['int','filename'=>'string']");
f("rrd_lastupdate", "['array','filename'=>'string']");
f("rrd_restore", "['bool','xml_file'=>'string','rrd_file'=>'string','options='=>'array']");
f("rrd_tune", "['bool','filename'=>'string','options'=>'array']");
f("rrd_update", "['bool','filename'=>'string','options'=>'array']");
f("RRDUpdater::__construct", "['RRDUpdater','path'=>'string']");
f("RRDUpdater::update", "['bool','values'=>'array','time='=>'string']");
f("rrd_version", "['string']");
f("rrd_xport", "['array','options'=>'array']");
f("rsort", "['bool','array_arg'=>'array','sort_flags='=>'int']");
f("rtrim", "['string','str'=>'string','character_mask='=>'string']");
f("runkit_class_adopt", "['bool','classname'=>'string','parentname'=>'string']");
f("runkit_class_emancipate", "['bool','classname'=>'string']");
f("runkit_constant_add", "['bool','constname'=>'string','value'=>'']");
f("runkit_constant_redefine", "['bool','constname'=>'string','newvalue'=>'']");
f("runkit_constant_remove", "['bool','constname'=>'string']");
f("runkit_function_add\\'1", "['bool','funcname'=>'string','closure'=>'Closure','doccomment='=>'string|null']");
f("runkit_function_add", "['bool','funcname'=>'string','arglist'=>'string','code'=>'string','doccomment='=>'string|null']");
f("runkit_function_copy", "['bool','funcname'=>'string','targetname'=>'string']");
f("runkit_function_redefine\\'1", "['bool','funcname'=>'string','closure'=>'Closure','doccomment='=>'string|null']");
f("runkit_function_redefine", "['bool','funcname'=>'string','arglist'=>'string','code'=>'string','doccomment='=>'string|null']");
f("runkit_function_remove", "['bool','funcname'=>'string']");
f("runkit_function_rename", "['bool','funcname'=>'string','newname'=>'string']");
f("runkit_import", "['bool','filename'=>'string','flags='=>'int']");
f("runkit_lint", "['bool','code'=>'string']");
f("runkit_lint_file", "['bool','filename'=>'string']");
f("runkit_method_add\\'1", "['bool','classname'=>'string','methodname'=>'string','closure'=>'Closure','flags='=>'int','doccomment='=>'string|null']");
f("runkit_method_add", "['bool','classname'=>'string','methodname'=>'string','args'=>'string','code'=>'string','flags='=>'int','doccomment='=>'string|null']");
f("runkit_method_copy", "['bool','dclass'=>'string','dmethod'=>'string','sclass'=>'string','smethod='=>'string']");
f("runkit_method_redefine\\'1", "['bool','classname'=>'string','methodname'=>'string','closure'=>'Closure','flags='=>'int','doccomment='=>'string|null']");
f("runkit_method_redefine", "['bool','classname'=>'string','methodname'=>'string','args'=>'string','code'=>'string','flags='=>'int','doccomment='=>'string|null']");
f("runkit_method_remove", "['bool','classname'=>'string','methodname'=>'string']");
f("runkit_method_rename", "['bool','classname'=>'string','methodname'=>'string','newname'=>'string']");
f("runkit_return_value_used", "['bool']");
f("Runkit_Sandbox::__construct", "['void','options='=>'array']");
f("runkit_sandbox_output_handler", "['','sandbox'=>'any','callback='=>'']");
f("Runkit_Sandbox_Parent", "['']");
f("Runkit_Sandbox_Parent::__construct", "['void']");
f("runkit_superglobals", "['array']");
f("RuntimeException::__clone", "['Throwable|Exception']");
f("RuntimeException::__construct", "['RuntimeException','message='=>'string','code='=>'int','previous='=>'Throwable|RuntimeException|null']");
f("RuntimeException::getCode", "['int']");
f("RuntimeException::getFile", "['string']");
f("RuntimeException::getLine", "['int']");
f("RuntimeException::getMessage", "['string']");
f("RuntimeException::getPrevious", "['Throwable|RuntimeException']");
f("RuntimeException::getTrace", "['array']");
f("RuntimeException::getTraceAsString", "['string']");
f("RuntimeException::__toString", "['string']");
f("SAMConnection::commit", "['bool']");
f("SAMConnection::connect", "['bool','protocol'=>'string','properties='=>'array']");
f("SAMConnection::disconnect", "['bool']");
f("SAMConnection::errno", "['int']");
f("SAMConnection::error", "['string']");
f("SAMConnection::isConnected", "['bool']");
f("SAMConnection::peekAll", "['array','target'=>'string','properties='=>'array']");
f("SAMConnection::peek", "['SAMMessage','target'=>'string','properties='=>'array']");
f("SAMConnection::receive", "['SAMMessage','target'=>'string','properties='=>'array']");
f("SAMConnection::remove", "['SAMMessage','target'=>'string','properties='=>'array']");
f("SAMConnection::rollback", "['bool']");
f("SAMConnection::send", "['string','target'=>'string','msg'=>'sammessage','properties='=>'array']");
f("SAMConnection::setDebug", "['','switch'=>'bool']");
f("SAMConnection::subscribe", "['string','targettopic'=>'string']");
f("SAMConnection::unsubscribe", "['bool','subscriptionid'=>'string','targettopic='=>'string']");
f("SAMMessage::body", "['string']");
f("SAMMessage::header", "['any']");
f("SCA::createDataObject", "['SDO_DataObject','type_namespace_uri'=>'string','type_name'=>'string']");
f("SCA::getService", "['','target'=>'string','binding='=>'string','config='=>'array']");
f("SCA_LocalProxy::createDataObject", "['SDO_DataObject','type_namespace_uri'=>'string','type_name'=>'string']");
f("scandir", "['array','dir'=>'string','sorting_order='=>'int','context='=>'']");
f("SCA_SoapProxy::createDataObject", "['SDO_DataObject','type_namespace_uri'=>'string','type_name'=>'string']");
f("SDO_DAS_ChangeSummary::beginLogging", "['']");
f("SDO_DAS_ChangeSummary::endLogging", "['']");
f("SDO_DAS_ChangeSummary::getChangedDataObjects", "['SDO_List']");
f("SDO_DAS_ChangeSummary::getChangeType", "['int','dataobject'=>'sdo_dataobject']");
f("SDO_DAS_ChangeSummary::getOldContainer", "['SDO_DataObject','data_object'=>'sdo_dataobject']");
f("SDO_DAS_ChangeSummary::getOldValues", "['SDO_List','data_object'=>'sdo_dataobject']");
f("SDO_DAS_ChangeSummary::isLogging", "['bool']");
f("SDO_DAS_DataFactory::addPropertyToType", "['','parent_type_namespace_uri'=>'string','parent_type_name'=>'string','property_name'=>'string','type_namespace_uri'=>'string','type_name'=>'string','options='=>'array']");
f("SDO_DAS_DataFactory::addType", "['','type_namespace_uri'=>'string','type_name'=>'string','options='=>'array']");
f("SDO_DAS_DataFactory::getDataFactory", "['SDO_DAS_DataFactory']");
f("SDO_DAS_DataObject::getChangeSummary", "['SDO_DAS_ChangeSummary']");
f("SDO_DAS_Relational::applyChanges", "['','database_handle'=>'pdo','root_data_object'=>'sdodataobject']");
f("SDO_DAS_Relational::__construct", "['SDO_DAS_Relational','database_metadata'=>'array','application_root_type='=>'string','sdo_containment_references_metadata='=>'array']");
f("SDO_DAS_Relational::createRootDataObject", "['SDODataObject']");
f("SDO_DAS_Relational::executePreparedQuery", "['SDODataObject','database_handle'=>'pdo','prepared_statement'=>'pdostatement','value_list'=>'array','column_specifier='=>'array']");
f("SDO_DAS_Relational::executeQuery", "['SDODataObject','database_handle'=>'pdo','sql_statement'=>'string','column_specifier='=>'array']");
f("SDO_DAS_Setting::getListIndex", "['int']");
f("SDO_DAS_Setting::getPropertyIndex", "['int']");
f("SDO_DAS_Setting::getPropertyName", "['string']");
f("SDO_DAS_Setting::getValue", "['']");
f("SDO_DAS_Setting::isSet", "['bool']");
f("SDO_DAS_XML::addTypes", "['','xsd_file'=>'string']");
f("SDO_DAS_XML::createDataObject", "['SDO_DataObject','namespace_uri'=>'string','type_name'=>'string']");
f("SDO_DAS_XML::createDocument", "['SDO_DAS_XML_Document','document_element_name'=>'string','document_element_namespace_uri'=>'string','dataobject='=>'sdo_dataobject']");
f("SDO_DAS_XML::create", "['SDO_DAS_XML','xsd_file='=>'','key='=>'string']");
f("SDO_DAS_XML_Document::getRootDataObject", "['SDO_DataObject']");
f("SDO_DAS_XML_Document::getRootElementName", "['string']");
f("SDO_DAS_XML_Document::getRootElementURI", "['string']");
f("SDO_DAS_XML_Document::setEncoding", "['','encoding'=>'string']");
f("SDO_DAS_XML_Document::setXMLDeclaration", "['','xmldeclatation'=>'bool']");
f("SDO_DAS_XML_Document::setXMLVersion", "['','xmlversion'=>'string']");
f("SDO_DAS_XML::loadFile", "['SDO_XMLDocument','xml_file'=>'string']");
f("SDO_DAS_XML::loadString", "['SDO_DAS_XML_Document','xml_string'=>'string']");
f("SDO_DAS_XML::saveFile", "['','xdoc'=>'sdo_xmldocument','xml_file'=>'string','indent='=>'int']");
f("SDO_DAS_XML::saveString", "['string','xdoc'=>'sdo_xmldocument','indent='=>'int']");
f("SDO_DataFactory::create", "['','type_namespace_uri'=>'string','type_name'=>'string']");
f("SDO_DataObject::clear", "['']");
f("SDO_DataObject::createDataObject", "['SDO_DataObject','identifier'=>'']");
f("SDO_DataObject::getContainer", "['SDO_DataObject']");
f("SDO_DataObject::getSequence", "['SDO_Sequence']");
f("SDO_DataObject::getTypeNamespaceURI", "['string']");
f("SDO_DataObject::getTypeName", "['string']");
f("SDO_Exception::getCause", "['']");
f("SDO_List::insert", "['','value'=>'','index='=>'int']");
f("SDO_Model_Property::getContainingType", "['SDO_Model_Type']");
f("SDO_Model_Property::getDefault", "['']");
f("SDO_Model_Property::getName", "['string']");
f("SDO_Model_Property::getType", "['SDO_Model_Type']");
f("SDO_Model_Property::isContainment", "['bool']");
f("SDO_Model_Property::isMany", "['bool']");
f("SDO_Model_ReflectionDataObject::__construct", "['SDO_Model_ReflectionDataObject','data_object'=>'sdo_dataobject']");
f("SDO_Model_ReflectionDataObject::export", "['','rdo'=>'sdo_model_reflectiondataobject','return='=>'bool']");
f("SDO_Model_ReflectionDataObject::getContainmentProperty", "['SDO_Model_Property']");
f("SDO_Model_ReflectionDataObject::getInstanceProperties", "['array']");
f("SDO_Model_ReflectionDataObject::getType", "['SDO_Model_Type']");
f("SDO_Model_Type::getBaseType", "['SDO_Model_Type']");
f("SDO_Model_Type::getNamespaceURI", "['string']");
f("SDO_Model_Type::getName", "['string']");
f("SDO_Model_Type::getProperties", "['array']");
f("SDO_Model_Type::getProperty", "['SDO_Model_Property','identifier'=>'']");
f("SDO_Model_Type::isAbstractType", "['bool']");
f("SDO_Model_Type::isDataType", "['bool']");
f("SDO_Model_Type::isInstance", "['bool','data_object'=>'sdo_dataobject']");
f("SDO_Model_Type::isOpenType", "['bool']");
f("SDO_Model_Type::isSequencedType", "['bool']");
f("SDO_Sequence::getProperty", "['SDO_Model_Property','sequence_index'=>'int']");
f("SDO_Sequence::insert", "['','value'=>'','sequenceindex='=>'int','propertyidentifier='=>'']");
f("SDO_Sequence::move", "['','toindex'=>'int','fromindex'=>'int']");
f("SeekableIterator::seek", "['','position'=>'int']");
f("sem_acquire", "['bool','id'=>'']");
f("sem_get", "['resource','key'=>'int','max_acquire='=>'int','perm='=>'int','auto_release='=>'int']");
f("sem_release", "['bool','id'=>'']");
f("sem_remove", "['bool','id'=>'']");
f("Serializable::serialize", "['string']");
f("Serializable::unserialize", "['void','serialized'=>'']");
f("serialize", "['string','variable'=>'']");
f("session_abort", "['']");
f("session_cache_expire", "['int','new_cache_expire='=>'int']");
f("session_cache_limiter", "['string','new_cache_limiter='=>'string']");
f("session_create_id", "['','prefix'=>'string']");
f("session_decode", "['bool','data'=>'string']");
f("session_destroy", "['bool']");
f("session_encode", "['string']");
f("session_get_cookie_params", "['array']");
f("SessionHandler::close", "['bool']");
f("SessionHandler::create_sid", "['char']");
f("SessionHandler::destroy", "['bool','id'=>'string']");
f("SessionHandler::gc", "['bool','maxlifetime'=>'int']");
f("SessionHandlerInterface::close", "['bool']");
f("SessionHandlerInterface::destroy", "['bool','session_id'=>'string']");
f("SessionHandlerInterface::gc", "['bool','maxlifetime'=>'string']");
f("SessionHandlerInterface::open", "['bool','save_path'=>'string','name'=>'string']");
f("SessionHandlerInterface::read", "['string','session_id'=>'string']");
f("SessionHandlerInterface::write", "['bool','session_id'=>'string','session_data'=>'string']");
f("SessionHandler::open", "['bool','save_path'=>'string','session_name'=>'string']");
f("SessionHandler::read", "['bool','id'=>'string']");
f("SessionHandler::write", "['bool','id'=>'string','data'=>'string']");
f("session_id", "['string','newid='=>'string']");
f("session_is_registered", "['bool','name'=>'string']");
f("session_module_name", "['string','newname='=>'string']");
f("session_name", "['string','newname='=>'string']");
f("session_pgsql_add_error", "['bool','error_level'=>'int','error_message='=>'string']");
f("session_pgsql_get_error", "['array','with_error_message='=>'bool']");
f("session_pgsql_get_field", "['string']");
f("session_pgsql_reset", "['bool']");
f("session_pgsql_set_field", "['bool','value'=>'string']");
f("session_pgsql_status", "['array']");
f("session_regenerate_id", "['bool','delete_old_session='=>'bool']");
f("session_register", "['bool','name'=>'','...='=>'']");
f("session_register_shutdown", "['']");
f("session_reset", "['']");
f("session_save_path", "['string','newname='=>'string']");
f("session_set_cookie_params", "['','lifetime'=>'int','path='=>'string','domain='=>'string|null','secure='=>'bool','httponly='=>'bool']");
f("session_set_save_handler", "['bool','open'=>'callable','close'=>'callable','read'=>'callable','write'=>'callable','destroy'=>'callable','gc'=>'callable','create_sid='=>'callable','validate_sid='=>'callable','update_timestamp='=>'callable']");
f("session_set_save_handler\\'1", "['bool','sessionhandler'=>'SessionHandlerInterface','register_shutdown='=>'bool']");
f("session_start", "['bool','options='=>'array']");
f("session_status", "['int']");
f("session_unregister", "['bool','name'=>'string']");
f("session_unset", "['']");
f("SessionUpdateTimestampHandler::updateTimestamp", "['bool','id'=>'string','data'=>'string']");
f("SessionUpdateTimestampHandler::validateId", "['char','id'=>'string']");
f("session_write_close", "['']");
f("setcookie", "['bool','name'=>'string','value='=>'string','expires='=>'int','path='=>'string','domain='=>'string','secure='=>'bool','httponly='=>'bool']");
f("set_error_handler", "['string|null','error_handler'=>'callable','error_types='=>'int']");
f("set_exception_handler", "['callable','exception_handler'=>'callable']");
f("set_include_path", "['string','new_include_path'=>'string']");
f("setLeftFill", "['void','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("setLine", "['void','width'=>'int','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("setlocale\\'1", "['string|false','category'=>'int','locale'=>'array']");
f("setlocale", "['string|false','category'=>'int','...='=>'string']");
f("set_magic_quotes_runtime", "['bool','new_setting'=>'bool']");
f("setproctitle", "['','title'=>'string']");
f("setrawcookie", "['bool','name'=>'string','value='=>'string','expires='=>'int','path='=>'string','domain='=>'string','secure='=>'bool','httponly='=>'bool']");
f("setRightFill", "['void','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("setthreadtitle", "['bool','title'=>'string']");
f("set_time_limit", "['bool','seconds'=>'int']");
f("settype", "['bool','var'=>'','type'=>'string']");
f("sha1_file", "['string','filename'=>'string','raw_output='=>'bool']");
f("sha1", "['string','str'=>'string','raw_output='=>'bool']");
f("sha256_file", "['string','filename'=>'string','raw_output='=>'bool']");
f("sha256", "['string','str'=>'string','raw_output='=>'bool']");
f("shell_exec", "['string|null','cmd'=>'string']");
f("shm_attach", "['resource','key'=>'int','memsize='=>'int','perm='=>'int']");
f("shm_detach", "['bool','shm_identifier'=>'']");
f("shm_get_var", "['','id'=>'','variable_key'=>'int']");
f("shm_has_var", "['bool','id'=>'','variable_key'=>'int']");
f("shmop_close", "['','shmid'=>'int']");
f("shmop_delete", "['bool','shmid'=>'int']");
f("shmop_open", "['int','key'=>'int','flags'=>'string','mode'=>'int','size'=>'int']");
f("shmop_read", "['string','shmid'=>'int','start'=>'int','count'=>'int']");
f("shmop_size", "['int','shmid'=>'int']");
f("shmop_write", "['int','shmid'=>'int','data'=>'string','offset'=>'int']");
f("shm_put_var", "['bool','shm_identifier'=>'','variable_key'=>'int','variable'=>'']");
f("shm_remove", "['bool','shm_identifier'=>'']");
f("shm_remove_var", "['bool','id'=>'','variable_key'=>'int']");
f("shuffle", "['bool','array_arg'=>'array']");
f("signeurlpaiement", "['string','clent'=>'string','data'=>'string']");
f("similar_text", "['int','str1'=>'string','str2'=>'string','percent='=>'float']");
f("SimpleXMLElement::addAttribute", "['','qname'=>'string','value'=>'string','ns='=>'string']");
f("SimpleXMLElement::addChild", "['SimpleXMLElement','qname'=>'string','value='=>'string','ns='=>'string']");
f("SimpleXMLElement::asXML", "['string','filename='=>'string']");
f("SimpleXMLElement::attributes", "['array','ns='=>'string','is_prefix='=>'bool']");
f("SimpleXMLElement::children", "['SimpleXMLElement','ns='=>'string','is_prefix='=>'bool']");
f("SimpleXMLElement::__construct", "['SimpleXMLElement','data'=>'string','options='=>'int','data_is_url='=>'bool','ns='=>'string','is_prefix='=>'bool']");
f("SimpleXMLElement::count", "['int']");
f("SimpleXMLElement::getDocNamespaces", "['string[]','recursive='=>'bool','from_root='=>'bool']");
f("SimpleXMLElement::getName", "['string']");
f("SimpleXMLElement::getNamespaces", "['string[]','recursve='=>'bool']");
f("SimpleXMLElement::registerXPathNamespace", "['bool','prefix'=>'string','ns'=>'string']");
f("SimpleXMLElement::__toString", "['string']");
f("SimpleXMLElement::xpath", "['array','path'=>'string']");
f("simplexml_import_dom", "['SimpleXMLElement','node'=>'domnode','class_name='=>'string']");
f("SimpleXMLIterator::current", "['SimpleXMLIterator']");
f("SimpleXMLIterator::getChildren", "['SimpleXMLIterator']");
f("SimpleXMLIterator::hasChildren", "['bool']");
f("SimpleXMLIterator::key", "['string']");
f("SimpleXMLIterator::next", "['']");
f("SimpleXMLIterator::rewind", "['']");
f("SimpleXMLIterator::valid", "['bool']");
f("simplexml_load_file", "['SimpleXMLElement','filename'=>'string','class_name='=>'string','options='=>'int','ns='=>'string','is_prefix='=>'bool']");
f("simplexml_load_string", "['SimpleXMLElement','data'=>'string','class_name='=>'string','options='=>'int','ns='=>'string','is_prefix='=>'bool']");
f("sin", "['float','number'=>'float']");
f("sinh", "['float','number'=>'float']");
f("sleep", "['int|false','seconds'=>'int']");
f("snmp2_get", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp2_getnext", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp2_real_walk", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp2_set", "['bool','host'=>'string','community'=>'string','object_id'=>'','type'=>'','value'=>'','timeout='=>'int','retries='=>'int']");
f("snmp2_walk", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp3_get", "['','host'=>'string','sec_name'=>'string','sec_level'=>'string','auth_protocol'=>'string','auth_passphrase'=>'string','priv_protocol'=>'string','priv_passphrase'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp3_getnext", "['','host'=>'string','sec_name'=>'string','sec_level'=>'string','auth_protocol'=>'string','auth_passphrase'=>'string','priv_protocol'=>'string','priv_passphrase'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp3_real_walk", "['','host'=>'string','sec_name'=>'string','sec_level'=>'string','auth_protocol'=>'string','auth_passphrase'=>'string','priv_protocol'=>'string','priv_passphrase'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmp3_set", "['bool','host'=>'string','sec_name'=>'string','sec_level'=>'string','auth_protocol'=>'string','auth_passphrase'=>'string','priv_protocol'=>'string','priv_passphrase'=>'string','object_id'=>'','type'=>'','value'=>'','timeout='=>'int','retries='=>'int']");
f("snmp3_walk", "['','host'=>'string','sec_name'=>'string','sec_level'=>'string','auth_protocol'=>'string','auth_passphrase'=>'string','priv_protocol'=>'string','priv_passphrase'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("SNMP::close", "['bool']");
f("SNMP::__construct", "['SNMP','version'=>'int','hostname'=>'string','community'=>'string','timeout'=>'int','retries'=>'int']");
f("SNMP::getErrno", "['int']");
f("SNMP::getError", "['int']");
f("snmpget", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmpgetnext", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("SNMP::getnext", "['','object_id'=>'']");
f("SNMP::get", "['','object_id'=>'','preserve_keys'=>'bool']");
f("snmp_get_quick_print", "['bool']");
f("snmp_get_valueretrieval", "['int']");
f("snmp_read_mib", "['bool','filename'=>'string']");
f("snmprealwalk", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("snmpset", "['bool','host'=>'string','community'=>'string','object_id'=>'','type'=>'','value'=>'','timeout='=>'int','retries='=>'int']");
f("SNMP::set", "['bool','object_id'=>'','type'=>'','value'=>'']");
f("snmp_set_enum_print", "['bool','enum_print'=>'int']");
f("snmp_set_oid_numeric_print", "['','oid_format'=>'int']");
f("snmp_set_oid_output_format", "['bool','oid_format'=>'int']");
f("snmp_set_quick_print", "['bool','quick_print'=>'int']");
f("SNMP::setSecurity", "['bool','sec_level'=>'string','auth_protocol'=>'string','auth_passphrase'=>'string','priv_protocol'=>'string','priv_passphrase'=>'string','contextname'=>'string','contextengineid'=>'string']");
f("snmp_set_valueretrieval", "['bool','method'=>'int']");
f("snmpwalk", "['','host'=>'string','community'=>'string','object_id'=>'','timeout='=>'int','retries='=>'int']");
f("SNMP::walk", "['','object_id'=>'','suffix_as_key'=>'bool','max_repetitions'=>'int','non_repeaters'=>'int']");
f("snmpwalkoid", "['array','hostname'=>'string','community'=>'string','object_id'=>'string','timeout='=>'int','retries='=>'int']");
f("SoapClient::__call", "['','function_name'=>'string','arguments'=>'string']");
f("SoapClient::__doRequest", "['string','request'=>'string','action'=>'string','version'=>'int','one_way='=>'int']");
f("SoapClient::__getCookies", "['array']");
f("SoapClient::__getFunctions", "['array']");
f("SoapClient::__getLastRequestHeaders", "['string']");
f("SoapClient::__getLastRequest", "['string']");
f("SoapClient::__getLastResponseHeaders", "['string']");
f("SoapClient::__getLastResponse", "['string']");
f("SoapClient::__getTypes", "['array']");
f("SoapClient::__setCookie", "['','name'=>'string','value='=>'string']");
f("SoapClient::__setLocation", "['string','new_location='=>'string']");
f("SoapClient::__setSoapHeaders", "['bool','soapheaders='=>'']");
f("SoapClient::__soapCall", "['','function_name'=>'string','arguments'=>'array','options='=>'array','input_headers='=>'','output_headers='=>'array']");
f("SoapClient::SoapClient", "['any','wsdl'=>'','options='=>'array']");
f("SoapFault::__construct", "['','faultcode'=>'string','faultstring'=>'string','faultactor='=>'string','detail='=>'string','faultname='=>'string','headerfault='=>'string']");
f("SoapFault::SoapFault", "['any','faultcode'=>'string','faultstring'=>'string','faultactor'=>'string','detail'=>'','faultname'=>'string','headerfault'=>'']");
f("SoapFault::__toString", "['string']");
f("SoapHeader::__construct", "['','namespace'=>'string','name'=>'string','data='=>'mixed','mustunderstand='=>'bool','actor='=>'string']");
f("SoapHeader::SoapHeader", "['any','namespace'=>'string','name'=>'string','data='=>'mixed','mustunderstand='=>'bool','actor='=>'string']");
f("SoapParam::__construct", "['','data'=>'mixed','name'=>'string']");
f("SoapParam::SoapParam", "['any','data'=>'','name'=>'string']");
f("SoapServer::addFunction", "['','functions'=>'']");
f("SoapServer::addSoapHeader", "['','any'=>'soapheader']");
f("SoapServer::__construct", "['SoapServer','wsdl'=>'string|null','options='=>'array']");
f("SoapServer::fault", "['','code'=>'string','string'=>'string','actor='=>'string','details='=>'string','name='=>'string']");
f("SoapServer::getFunctions", "['array']");
f("SoapServer::handle", "['','soap_request='=>'string']");
f("SoapServer::setClass", "['','class_name'=>'string','...='=>'']");
f("SoapServer::setObject", "['','obj'=>'any']");
f("SoapServer::setPersistence", "['','mode'=>'int']");
f("SoapServer::SoapServer", "['any','wsdl'=>'string|null','options'=>'array']");
f("SoapVar::__construct", "['','data'=>'mixed','encoding'=>'int','type_name='=>'string','type_namespace='=>'string','node_name='=>'string','node_namespace='=>'string']");
f("SoapVar::SoapVar", "['any','data'=>'','encoding'=>'int','type_name='=>'string','type_namespace='=>'string','node_name='=>'string','node_namespace='=>'string']");
f("socket_accept", "['resource','socket'=>'']");
f("socket_bind", "['bool','socket'=>'','addr'=>'string','port='=>'int']");
f("socket_clear_error", "['','socket='=>'']");
f("socket_close", "['','socket'=>'']");
f("socket_cmsg_space", "['int','level'=>'int','type'=>'int']");
f("socket_connect", "['bool','socket'=>'','addr'=>'string','port='=>'int']");
f("socket_create_listen", "['resource','port'=>'int','backlog='=>'int']");
f("socket_create_pair", "['bool','domain'=>'int','type'=>'int','protocol'=>'int','&fd'=>'array']");
f("socket_create", "['resource','domain'=>'int','type'=>'int','protocol'=>'int']");
f("socket_get_option", "['','socket'=>'','level'=>'int','optname'=>'int']");
f("socket_getpeername", "['bool','socket'=>'','&addr'=>'string','&port='=>'int']");
f("socket_getsockname", "['bool','socket'=>'','&addr'=>'string','&port='=>'int']");
f("socket_import_stream", "['','stream'=>'']");
f("socket_last_error", "['int','socket='=>'']");
f("socket_listen", "['bool','socket'=>'','backlog='=>'int']");
f("socket_read", "['string','socket'=>'','length'=>'int','type='=>'int']");
f("socket_recvfrom", "['int','socket'=>'','&buf'=>'string','len'=>'int','flags'=>'int','&name'=>'string','&port='=>'int']");
f("socket_recv", "['int','socket'=>'','&buf'=>'string','len'=>'int','flags'=>'int']");
f("socket_recvmsg", "['int','socket'=>'resource','message'=>'string','flags='=>'int']");
f("socket_select", "['int','&read_fds'=>'array','&write_fds'=>'array','&except_fds'=>'array','tv_sec'=>'int','tv_usec='=>'int']");
f("socket_send", "['int','socket'=>'','buf'=>'string','len'=>'int','flags'=>'int']");
f("socket_sendmsg", "['int','socket'=>'resource','message'=>'array','flags'=>'int']");
f("socket_sendto", "['int','socket'=>'','buf'=>'string','len'=>'int','flags'=>'int','addr'=>'string','port='=>'int']");
f("socket_set_block", "['bool','socket'=>'']");
f("socket_set_nonblock", "['bool','socket'=>'']");
f("socket_set_option", "['bool','socket'=>'','level'=>'int','optname'=>'int','optval'=>'int|array']");
f("socket_shutdown", "['bool','socket'=>'','how='=>'int']");
f("socket_strerror", "['string','errno'=>'int']");
f("socket_write", "['int','socket'=>'','buf'=>'string','length='=>'int']");
f("solid_fetch_prev", "['bool','result_id'=>'']");
f("SolrClient::addDocuments", "['','docs'=>'array','allowdups='=>'bool','commitwithin='=>'int']");
f("SolrClient::addDocument", "['SolrUpdateResponse','doc'=>'solrinputdocument','allowdups='=>'bool','commitwithin='=>'int']");
f("SolrClient::commit", "['SolrUpdateResponse','maxsegments='=>'int','waitflush='=>'bool','waitsearcher='=>'bool']");
f("SolrClient::__construct", "['','clientOptions'=>'array']");
f("SolrClient::deleteById", "['SolrUpdateResponse','id'=>'string']");
f("SolrClient::deleteByIds", "['SolrUpdateResponse','ids'=>'array']");
f("SolrClient::deleteByQueries", "['SolrUpdateResponse','queries'=>'array']");
f("SolrClient::deleteByQuery", "['SolrUpdateResponse','query'=>'string']");
f("SolrClient::__destruct", "['']");
f("SolrClientException::getInternalInfo", "['array']");
f("SolrClient::getDebug", "['string']");
f("SolrClient::getOptions", "['array']");
f("SolrClient::optimize", "['SolrUpdateResponse','maxsegments='=>'int','waitflush='=>'bool','waitsearcher='=>'bool']");
f("SolrClient::ping", "['SolrPingResponse']");
f("SolrClient::query", "['SolrQueryResponse','query'=>'solrparams']");
f("SolrClient::request", "['','raw_request'=>'string']");
f("SolrClient::rollback", "['SolrUpdateResponse']");
f("SolrClient::setResponseWriter", "['','responsewriter'=>'string']");
f("SolrClient::setServlet", "['bool','type'=>'int','value'=>'string']");
f("SolrClient::system", "['void']");
f("SolrClient::threads", "['']");
f("SolrDisMaxQuery::addBigramPhraseField", "['SolrDisMaxQuery','field'=>'string','boost'=>'string','slop='=>'string']");
f("SolrDisMaxQuery::addBoostQuery", "['SolrDisMaxQuery','field'=>'string','value'=>'string','boost='=>'string']");
f("SolrDisMaxQuery::addPhraseField", "['SolrDisMaxQuery','field'=>'string','boost'=>'string','slop='=>'string']");
f("SolrDisMaxQuery::addQueryField", "['SolrDisMaxQuery','field'=>'string','boost='=>'string']");
f("SolrDisMaxQuery::addTrigramPhraseField", "['SolrDisMaxQuery','field'=>'string','boost'=>'string','slop='=>'string']");
f("SolrDisMaxQuery::addUserField", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::__construct", "['','q='=>'string']");
f("SolrDisMaxQuery::removeBigramPhraseField", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::removeBoostQuery", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::removePhraseField", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::removeQueryField", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::removeTrigramPhraseField", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::removeUserField", "['SolrDisMaxQuery','field'=>'string']");
f("SolrDisMaxQuery::setBigramPhraseFields", "['SolrDisMaxQuery','fields'=>'string']");
f("SolrDisMaxQuery::setBigramPhraseSlop", "['SolrDisMaxQuery','slop'=>'string']");
f("SolrDisMaxQuery::setBoostFunction", "['SolrDisMaxQuery','function'=>'string']");
f("SolrDisMaxQuery::setBoostQuery", "['SolrDisMaxQuery','q'=>'string']");
f("SolrDisMaxQuery::setMinimumMatch", "['SolrDisMaxQuery','value'=>'string']");
f("SolrDisMaxQuery::setPhraseFields", "['SolrDisMaxQuery','fields'=>'string']");
f("SolrDisMaxQuery::setPhraseSlop", "['SolrDisMaxQuery','slop'=>'string']");
f("SolrDisMaxQuery::setQueryAlt", "['SolrDisMaxQuery','q'=>'string']");
f("SolrDisMaxQuery::setQueryPhraseSlop", "['SolrDisMaxQuery','slop'=>'string']");
f("SolrDisMaxQuery::setTieBreaker", "['SolrDisMaxQuery','tieBreaker'=>'string']");
f("SolrDisMaxQuery::setTrigramPhraseFields", "['SolrDisMaxQuery','fields'=>'string']");
f("SolrDisMaxQuery::setTrigramPhraseSlop", "['SolrDisMaxQuery','slop'=>'string']");
f("SolrDisMaxQuery::setUserFields", "['SolrDisMaxQuery','fields'=>'string']");
f("SolrDisMaxQuery::useDisMaxQueryParser", "['SolrDisMaxQuery']");
f("SolrDisMaxQuery::useEDisMaxQueryParser", "['SolrDisMaxQuery']");
f("SolrDocument::addField", "['bool','fieldname'=>'string','fieldvalue'=>'string']");
f("SolrDocument::clear", "['bool']");
f("SolrDocument::__clone", "['']");
f("SolrDocument::__construct", "['']");
f("SolrDocument::current", "['SolrDocumentField']");
f("SolrDocument::deleteField", "['bool','fieldname'=>'string']");
f("SolrDocument::__destruct", "['']");
f("SolrDocumentField::__construct", "['']");
f("SolrDocumentField::__destruct", "['']");
f("SolrDocument::fieldExists", "['bool','fieldname'=>'string']");
f("SolrDocument::getFieldCount", "['int']");
f("SolrDocument::getFieldNames", "['array']");
f("SolrDocument::getField", "['SolrDocumentField','fieldname'=>'string']");
f("SolrDocument::getInputDocument", "['SolrInputDocument']");
f("SolrDocument::__get", "['SolrDocumentField','fieldname'=>'string']");
f("SolrDocument::__isset", "['bool','fieldname'=>'string']");
f("SolrDocument::key", "['string']");
f("SolrDocument::merge", "['bool','sourcedoc'=>'solrdocument','overwrite='=>'bool']");
f("SolrDocument::next", "['']");
f("SolrDocument::offsetExists", "['bool','fieldname'=>'string']");
f("SolrDocument::offsetGet", "['SolrDocumentField','fieldname'=>'string']");
f("SolrDocument::offsetSet", "['','fieldname'=>'string','fieldvalue'=>'string']");
f("SolrDocument::offsetUnset", "['','fieldname'=>'string']");
f("SolrDocument::reset", "['bool']");
f("SolrDocument::rewind", "['']");
f("SolrDocument::serialize", "['string']");
f("SolrDocument::__set", "['bool','fieldname'=>'string','fieldvalue'=>'string']");
f("SolrDocument::sort", "['bool','sortorderby'=>'int','sortdirection='=>'int']");
f("SolrDocument::toArray", "['array']");
f("SolrDocument::unserialize", "['','serialized'=>'string']");
f("SolrDocument::__unset", "['bool','fieldname'=>'string']");
f("SolrDocument::valid", "['bool']");
f("SolrException::getInternalInfo", "['array']");
f("SolrGenericResponse::__construct", "['']");
f("SolrGenericResponse::__destruct", "['']");
f("solr_get_version", "['string']");
f("SolrIllegalArgumentException::getInternalInfo", "['array']");
f("SolrIllegalOperationException::getInternalInfo", "['array']");
f("SolrInputDocument::addField", "['bool','fieldname'=>'string','fieldvalue'=>'string','fieldboostvalue='=>'float']");
f("SolrInputDocument::clear", "['bool']");
f("SolrInputDocument::__clone", "['']");
f("SolrInputDocument::__construct", "['']");
f("SolrInputDocument::deleteField", "['bool','fieldname'=>'string']");
f("SolrInputDocument::__destruct", "['']");
f("SolrInputDocument::fieldExists", "['bool','fieldname'=>'string']");
f("SolrInputDocument::getBoost", "['float']");
f("SolrInputDocument::getFieldBoost", "['float','fieldname'=>'string']");
f("SolrInputDocument::getFieldCount", "['int']");
f("SolrInputDocument::getFieldNames", "['array']");
f("SolrInputDocument::getField", "['SolrDocumentField','fieldname'=>'string']");
f("SolrInputDocument::merge", "['bool','sourcedoc'=>'solrinputdocument','overwrite='=>'bool']");
f("SolrInputDocument::reset", "['bool']");
f("SolrInputDocument::setBoost", "['bool','documentboostvalue'=>'float']");
f("SolrInputDocument::setFieldBoost", "['bool','fieldname'=>'string','fieldboostvalue'=>'float']");
f("SolrInputDocument::sort", "['bool','sortorderby'=>'int','sortdirection='=>'int']");
f("SolrInputDocument::toArray", "['array']");
f("SolrModifiableParams::__construct", "['']");
f("SolrModifiableParams::__destruct", "['']");
f("SolrObject::__construct", "['']");
f("SolrObject::__destruct", "['']");
f("SolrObject::getPropertyNames", "['array']");
f("SolrObject::offsetExists", "['bool','property_name'=>'string']");
f("SolrObject::offsetGet", "['','property_name'=>'string']");
f("SolrObject::offsetSet", "['','property_name'=>'string','property_value'=>'string']");
f("SolrObject::offsetUnset", "['','property_name'=>'string']");
f("SolrParams::addParam", "['SolrParams','name'=>'string','value'=>'string']");
f("SolrParams::add", "['SolrParams','name'=>'string','value'=>'string']");
f("SolrParams::get", "['','param_name'=>'string']");
f("SolrParams::getParam", "['','param_name='=>'string']");
f("SolrParams::getParams", "['array']");
f("SolrParams::getPreparedParams", "['array']");
f("SolrParams::serialize", "['string']");
f("SolrParams::set", "['','name'=>'string','value'=>'string']");
f("SolrParams::setParam", "['SolrParams','name'=>'string','value'=>'string']");
f("SolrParams::toString", "['string','url_encode='=>'bool']");
f("SolrParams::unserialize", "['','serialized'=>'string']");
f("SolrPingResponse::__construct", "['']");
f("SolrPingResponse::__destruct", "['']");
f("SolrPingResponse::getResponse", "['string']");
f("SolrQuery::addFacetDateField", "['SolrQuery','datefield'=>'string']");
f("SolrQuery::addFacetDateOther", "['SolrQuery','value'=>'string','field_override='=>'string']");
f("SolrQuery::addFacetField", "['SolrQuery','field'=>'string']");
f("SolrQuery::addFacetQuery", "['SolrQuery','facetquery'=>'string']");
f("SolrQuery::addField", "['SolrQuery','field'=>'string']");
f("SolrQuery::addFilterQuery", "['SolrQuery','fq'=>'string']");
f("SolrQuery::addHighlightField", "['SolrQuery','field'=>'string']");
f("SolrQuery::addMltField", "['SolrQuery','field'=>'string']");
f("SolrQuery::addMltQueryField", "['SolrQuery','field'=>'string','boost'=>'float']");
f("SolrQuery::addSortField", "['SolrQuery','field'=>'string','order='=>'int']");
f("SolrQuery::addStatsFacet", "['SolrQuery','field'=>'string']");
f("SolrQuery::addStatsField", "['SolrQuery','field'=>'string']");
f("SolrQuery::__construct", "['','q='=>'string']");
f("SolrQuery::__destruct", "['']");
f("SolrQuery::getFacet", "['bool']");
f("SolrQuery::getFacetDateEnd", "['string','field_override='=>'string']");
f("SolrQuery::getFacetDateFields", "['array']");
f("SolrQuery::getFacetDateGap", "['string','field_override='=>'string']");
f("SolrQuery::getFacetDateHardEnd", "['string','field_override='=>'string']");
f("SolrQuery::getFacetDateOther", "['array','field_override='=>'string']");
f("SolrQuery::getFacetDateStart", "['string','field_override='=>'string']");
f("SolrQuery::getFacetFields", "['array']");
f("SolrQuery::getFacetLimit", "['int','field_override='=>'string']");
f("SolrQuery::getFacetMethod", "['string','field_override='=>'string']");
f("SolrQuery::getFacetMinCount", "['int','field_override='=>'string']");
f("SolrQuery::getFacetMissing", "['bool','field_override='=>'string']");
f("SolrQuery::getFacetOffset", "['int','field_override='=>'string']");
f("SolrQuery::getFacetPrefix", "['string','field_override='=>'string']");
f("SolrQuery::getFacetQueries", "['array']");
f("SolrQuery::getFacetSort", "['int','field_override='=>'string']");
f("SolrQuery::getFields", "['array']");
f("SolrQuery::getFilterQueries", "['array']");
f("SolrQuery::getHighlightAlternateField", "['string','field_override='=>'string']");
f("SolrQuery::getHighlight", "['bool']");
f("SolrQuery::getHighlightFields", "['array']");
f("SolrQuery::getHighlightFormatter", "['string','field_override='=>'string']");
f("SolrQuery::getHighlightFragmenter", "['string','field_override='=>'string']");
f("SolrQuery::getHighlightFragsize", "['int','field_override='=>'string']");
f("SolrQuery::getHighlightHighlightMultiTerm", "['bool']");
f("SolrQuery::getHighlightMaxAlternateFieldLength", "['int','field_override='=>'string']");
f("SolrQuery::getHighlightMaxAnalyzedChars", "['int']");
f("SolrQuery::getHighlightMergeContiguous", "['bool','field_override='=>'string']");
f("SolrQuery::getHighlightRegexMaxAnalyzedChars", "['int']");
f("SolrQuery::getHighlightRegexPattern", "['string']");
f("SolrQuery::getHighlightRegexSlop", "['float']");
f("SolrQuery::getHighlightRequireFieldMatch", "['bool']");
f("SolrQuery::getHighlightSimplePost", "['string','field_override='=>'string']");
f("SolrQuery::getHighlightSimplePre", "['string','field_override='=>'string']");
f("SolrQuery::getHighlightSnippets", "['int','field_override='=>'string']");
f("SolrQuery::getHighlightUsePhraseHighlighter", "['bool']");
f("SolrQuery::getMlt", "['bool']");
f("SolrQuery::getMltBoost", "['bool']");
f("SolrQuery::getMltCount", "['int']");
f("SolrQuery::getMltFields", "['array']");
f("SolrQuery::getMltMaxNumQueryTerms", "['int']");
f("SolrQuery::getMltMaxNumTokens", "['int']");
f("SolrQuery::getMltMaxWordLength", "['int']");
f("SolrQuery::getMltMinDocFrequency", "['int']");
f("SolrQuery::getMltMinTermFrequency", "['int']");
f("SolrQuery::getMltMinWordLength", "['int']");
f("SolrQuery::getMltQueryFields", "['array']");
f("SolrQuery::getQuery", "['string']");
f("SolrQuery::getRows", "['int']");
f("SolrQuery::getSortFields", "['array']");
f("SolrQuery::getStart", "['int']");
f("SolrQuery::getStats", "['bool']");
f("SolrQuery::getStatsFacets", "['array']");
f("SolrQuery::getStatsFields", "['array']");
f("SolrQuery::getTerms", "['bool']");
f("SolrQuery::getTermsField", "['string']");
f("SolrQuery::getTermsIncludeLowerBound", "['bool']");
f("SolrQuery::getTermsIncludeUpperBound", "['bool']");
f("SolrQuery::getTermsLimit", "['int']");
f("SolrQuery::getTermsLowerBound", "['string']");
f("SolrQuery::getTermsMaxCount", "['int']");
f("SolrQuery::getTermsMinCount", "['int']");
f("SolrQuery::getTermsPrefix", "['string']");
f("SolrQuery::getTermsReturnRaw", "['bool']");
f("SolrQuery::getTermsSort", "['int']");
f("SolrQuery::getTermsUpperBound", "['string']");
f("SolrQuery::getTimeAllowed", "['int']");
f("SolrQuery::removeFacetDateField", "['SolrQuery','field'=>'string']");
f("SolrQuery::removeFacetDateOther", "['SolrQuery','value'=>'string','field_override='=>'string']");
f("SolrQuery::removeFacetField", "['SolrQuery','field'=>'string']");
f("SolrQuery::removeFacetQuery", "['SolrQuery','value'=>'string']");
f("SolrQuery::removeField", "['SolrQuery','field'=>'string']");
f("SolrQuery::removeFilterQuery", "['SolrQuery','fq'=>'string']");
f("SolrQuery::removeHighlightField", "['SolrQuery','field'=>'string']");
f("SolrQuery::removeMltField", "['SolrQuery','field'=>'string']");
f("SolrQuery::removeMltQueryField", "['SolrQuery','queryfield'=>'string']");
f("SolrQuery::removeSortField", "['SolrQuery','field'=>'string']");
f("SolrQuery::removeStatsFacet", "['SolrQuery','value'=>'string']");
f("SolrQuery::removeStatsField", "['SolrQuery','field'=>'string']");
f("SolrQueryResponse::__construct", "['']");
f("SolrQueryResponse::__destruct", "['']");
f("SolrQuery::setEchoHandler", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setEchoParams", "['SolrQuery','type'=>'string']");
f("SolrQuery::setExplainOther", "['SolrQuery','query'=>'string']");
f("SolrQuery::setFacetDateEnd", "['SolrQuery','value'=>'string','field_override='=>'string']");
f("SolrQuery::setFacetDateGap", "['SolrQuery','value'=>'string','field_override='=>'string']");
f("SolrQuery::setFacetDateHardEnd", "['SolrQuery','value'=>'bool','field_override='=>'string']");
f("SolrQuery::setFacetDateStart", "['SolrQuery','value'=>'string','field_override='=>'string']");
f("SolrQuery::setFacetEnumCacheMinDefaultFrequency", "['SolrQuery','frequency'=>'int','field_override='=>'string']");
f("SolrQuery::setFacetLimit", "['SolrQuery','limit'=>'int','field_override='=>'string']");
f("SolrQuery::setFacetMethod", "['SolrQuery','method'=>'string','field_override='=>'string']");
f("SolrQuery::setFacetMinCount", "['SolrQuery','mincount'=>'int','field_override='=>'string']");
f("SolrQuery::setFacetMissing", "['SolrQuery','flag'=>'bool','field_override='=>'string']");
f("SolrQuery::setFacetOffset", "['SolrQuery','offset'=>'int','field_override='=>'string']");
f("SolrQuery::setFacetPrefix", "['SolrQuery','prefix'=>'string','field_override='=>'string']");
f("SolrQuery::setFacet", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setFacetSort", "['SolrQuery','facetsort'=>'int','field_override='=>'string']");
f("SolrQuery::setHighlightAlternateField", "['SolrQuery','field'=>'string','field_override='=>'string']");
f("SolrQuery::setHighlightFormatter", "['SolrQuery','formatter'=>'string','field_override='=>'string']");
f("SolrQuery::setHighlightFragmenter", "['SolrQuery','fragmenter'=>'string','field_override='=>'string']");
f("SolrQuery::setHighlightFragsize", "['SolrQuery','size'=>'int','field_override='=>'string']");
f("SolrQuery::setHighlightHighlightMultiTerm", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setHighlightMaxAlternateFieldLength", "['SolrQuery','fieldlength'=>'int','field_override='=>'string']");
f("SolrQuery::setHighlightMaxAnalyzedChars", "['SolrQuery','value'=>'int']");
f("SolrQuery::setHighlightMergeContiguous", "['SolrQuery','flag'=>'bool','field_override='=>'string']");
f("SolrQuery::setHighlightRegexMaxAnalyzedChars", "['SolrQuery','maxanalyzedchars'=>'int']");
f("SolrQuery::setHighlightRegexPattern", "['SolrQuery','value'=>'string']");
f("SolrQuery::setHighlightRegexSlop", "['SolrQuery','factor'=>'float']");
f("SolrQuery::setHighlightRequireFieldMatch", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setHighlightSimplePost", "['SolrQuery','simplepost'=>'string','field_override='=>'string']");
f("SolrQuery::setHighlightSimplePre", "['SolrQuery','simplepre'=>'string','field_override='=>'string']");
f("SolrQuery::setHighlightSnippets", "['SolrQuery','value'=>'int','field_override='=>'string']");
f("SolrQuery::setHighlight", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setHighlightUsePhraseHighlighter", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setMltBoost", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setMltCount", "['SolrQuery','count'=>'int']");
f("SolrQuery::setMltMaxNumQueryTerms", "['SolrQuery','value'=>'int']");
f("SolrQuery::setMltMaxNumTokens", "['SolrQuery','value'=>'int']");
f("SolrQuery::setMltMaxWordLength", "['SolrQuery','maxwordlength'=>'int']");
f("SolrQuery::setMltMinDocFrequency", "['SolrQuery','mindocfrequency'=>'int']");
f("SolrQuery::setMltMinTermFrequency", "['SolrQuery','mintermfrequency'=>'int']");
f("SolrQuery::setMltMinWordLength", "['SolrQuery','minwordlength'=>'int']");
f("SolrQuery::setMlt", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setOmitHeader", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setQuery", "['SolrQuery','query'=>'string']");
f("SolrQuery::setRows", "['SolrQuery','rows'=>'int']");
f("SolrQuery::setShowDebugInfo", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setStart", "['SolrQuery','start'=>'int']");
f("SolrQuery::setStats", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setTermsField", "['SolrQuery','fieldname'=>'string']");
f("SolrQuery::setTermsIncludeLowerBound", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setTermsIncludeUpperBound", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setTermsLimit", "['SolrQuery','limit'=>'int']");
f("SolrQuery::setTermsLowerBound", "['SolrQuery','lowerbound'=>'string']");
f("SolrQuery::setTermsMaxCount", "['SolrQuery','frequency'=>'int']");
f("SolrQuery::setTermsMinCount", "['SolrQuery','frequency'=>'int']");
f("SolrQuery::setTermsPrefix", "['SolrQuery','prefix'=>'string']");
f("SolrQuery::setTermsReturnRaw", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setTerms", "['SolrQuery','flag'=>'bool']");
f("SolrQuery::setTermsSort", "['SolrQuery','sorttype'=>'int']");
f("SolrQuery::setTermsUpperBound", "['SolrQuery','upperbound'=>'string']");
f("SolrQuery::setTimeAllowed", "['SolrQuery','timeallowed'=>'int']");
f("SolrResponse::getDigestedResponse", "['string']");
f("SolrResponse::getHttpStatus", "['int']");
f("SolrResponse::getHttpStatusMessage", "['string']");
f("SolrResponse::getRawRequestHeaders", "['string']");
f("SolrResponse::getRawRequest", "['string']");
f("SolrResponse::getRawResponseHeaders", "['string']");
f("SolrResponse::getRawResponse", "['string']");
f("SolrResponse::getRequestUrl", "['string']");
f("SolrResponse::getResponse", "['SolrObject']");
f("SolrResponse::setParseMode", "['bool','parser_mode='=>'int']");
f("SolrResponse::success", "['bool']");
f("SolrServerException::getInternalInfo", "['array']");
f("SolrUpdateResponse::__construct", "['']");
f("SolrUpdateResponse::__destruct", "['']");
f("SolrUtils::digestXmlResponse", "['SolrObject','xmlresponse'=>'string','parse_mode='=>'int']");
f("SolrUtils::escapeQueryChars", "['string','str'=>'string']");
f("SolrUtils::getSolrVersion", "['string']");
f("SolrUtils::queryPhrase", "['string','str'=>'string']");
f("sort", "['bool','array_arg'=>'array','sort_flags='=>'int']");
f("soundex", "['string','str'=>'string']");
f("SphinxClient::addQuery", "['int','query'=>'string','index='=>'string','comment='=>'string']");
f("SphinxClient::buildExcerpts", "['array','docs'=>'array','index'=>'string','words'=>'string','opts='=>'array']");
f("SphinxClient::buildKeywords", "['array','query'=>'string','index'=>'string','hits'=>'bool']");
f("SphinxClient::close", "['bool']");
f("SphinxClient::__construct", "['']");
f("SphinxClient::escapeString", "['string','string'=>'string']");
f("SphinxClient::getLastError", "['string']");
f("SphinxClient::getLastWarning", "['string']");
f("SphinxClient::open", "['bool']");
f("SphinxClient::query", "['array','query'=>'string','index='=>'string','comment='=>'string']");
f("SphinxClient::resetFilters", "['']");
f("SphinxClient::resetGroupBy", "['']");
f("SphinxClient::runQueries", "['array']");
f("SphinxClient::setArrayResult", "['bool','array_result'=>'bool']");
f("SphinxClient::setConnectTimeout", "['bool','timeout'=>'float']");
f("SphinxClient::setFieldWeights", "['bool','weights'=>'array']");
f("SphinxClient::setFilter", "['bool','attribute'=>'string','values'=>'array','exclude='=>'bool']");
f("SphinxClient::setFilterFloatRange", "['bool','attribute'=>'string','min'=>'float','max'=>'float','exclude='=>'bool']");
f("SphinxClient::setFilterRange", "['bool','attribute'=>'string','min'=>'int','max'=>'int','exclude='=>'bool']");
f("SphinxClient::setGeoAnchor", "['bool','attrlat'=>'string','attrlong'=>'string','latitude'=>'float','longitude'=>'float']");
f("SphinxClient::setGroupBy", "['bool','attribute'=>'string','func'=>'int','groupsort='=>'string']");
f("SphinxClient::setGroupDistinct", "['bool','attribute'=>'string']");
f("SphinxClient::setIDRange", "['bool','min'=>'int','max'=>'int']");
f("SphinxClient::setIndexWeights", "['bool','weights'=>'array']");
f("SphinxClient::setLimits", "['bool','offset'=>'int','limit'=>'int','max_matches='=>'int','cutoff='=>'int']");
f("SphinxClient::setMatchMode", "['bool','mode'=>'int']");
f("SphinxClient::setMaxQueryTime", "['bool','qtime'=>'int']");
f("SphinxClient::setOverride", "['bool','attribute'=>'string','type'=>'int','values'=>'array']");
f("SphinxClient::setRankingMode", "['bool','ranker'=>'int']");
f("SphinxClient::setRetries", "['bool','count'=>'int','delay='=>'int']");
f("SphinxClient::setSelect", "['bool','clause'=>'string']");
f("SphinxClient::setServer", "['bool','server'=>'string','port'=>'int']");
f("SphinxClient::setSortMode", "['bool','mode'=>'int','sortby='=>'string']");
f("SphinxClient::status", "['array']");
f("SphinxClient::updateAttributes", "['int','index'=>'string','attributes'=>'array','values'=>'array','mva='=>'bool']");
f("spl_autoload_call", "['','class_name'=>'string']");
f("spl_autoload", "['','class_name'=>'string','file_extensions='=>'string']");
f("spl_autoload_extensions", "['string','file_extensions='=>'string']");
f("spl_autoload_functions", "['false|array']");
f("spl_autoload_register", "['bool','autoload_function='=>'','throw='=>'bool','prepend='=>'bool']");
f("spl_autoload_unregister", "['bool','autoload_function'=>'']");
f("spl_classes", "['array']");
f("SplDoublyLinkedList::add", "['','index'=>'','newval'=>'']");
f("SplDoublyLinkedList::bottom", "['']");
f("SplDoublyLinkedList::count", "['int']");
f("SplDoublyLinkedList::current", "['']");
f("SplDoublyLinkedList::getIteratorMode", "['int']");
f("SplDoublyLinkedList::isEmpty", "['bool']");
f("SplDoublyLinkedList::key", "['']");
f("SplDoublyLinkedList::next", "['']");
f("SplDoublyLinkedList::offsetExists", "['bool','index'=>'']");
f("SplDoublyLinkedList::offsetGet", "['','index'=>'']");
f("SplDoublyLinkedList::offsetSet", "['','index'=>'','newval'=>'']");
f("SplDoublyLinkedList::offsetUnset", "['','index'=>'']");
f("SplDoublyLinkedList::pop", "['']");
f("SplDoublyLinkedList::prev", "['']");
f("SplDoublyLinkedList::push", "['void','value'=>'']");
f("SplDoublyLinkedList::rewind", "['']");
f("SplDoublyLinkedList::serialize", "['string']");
f("SplDoublyLinkedList::setIteratorMode", "['int','flags'=>'int']");
f("SplDoublyLinkedList::shift", "['']");
f("SplDoublyLinkedList::top", "['']");
f("SplDoublyLinkedList::unserialize", "['','serialized'=>'string']");
f("SplDoublyLinkedList::unshift", "['bool','value'=>'']");
f("SplDoublyLinkedList::valid", "['bool']");
f("SplEnum::getConstList", "['array','include_default='=>'bool']");
f("SplFileInfo::__construct", "['SplFileInfo','file_name'=>'string']");
f("SplFileInfo::getATime", "['int']");
f("SplFileInfo::getBasename", "['string','suffix='=>'string']");
f("SplFileInfo::getCTime", "['int']");
f("SplFileInfo::getExtension", "['string']");
f("SplFileInfo::getFileInfo", "['SplFileInfo','class_name='=>'string']");
f("SplFileInfo::getFilename", "['string']");
f("SplFileInfo::getGroup", "['int']");
f("SplFileInfo::getInode", "['int']");
f("SplFileInfo::getLinkTarget", "['string']");
f("SplFileInfo::getMTime", "['int']");
f("SplFileInfo::getOwner", "['int']");
f("SplFileInfo::getPathInfo", "['SplFileInfo','class_name='=>'string']");
f("SplFileInfo::getPathname", "['string']");
f("SplFileInfo::getPath", "['string']");
f("SplFileInfo::getPerms", "['int']");
f("SplFileInfo::getRealPath", "['string']");
f("SplFileInfo::getSize", "['int']");
f("SplFileInfo::getType", "['string']");
f("SplFileInfo::isDir", "['bool']");
f("SplFileInfo::isExecutable", "['bool']");
f("SplFileInfo::isFile", "['bool']");
f("SplFileInfo::isLink", "['bool']");
f("SplFileInfo::isReadable", "['bool']");
f("SplFileInfo::isWritable", "['bool']");
f("SplFileInfo::openFile", "['SplFileObject','mode='=>'string','use_include_path='=>'bool','context='=>'']");
f("SplFileInfo::setFileClass", "['','class_name='=>'string']");
f("SplFileInfo::setInfoClass", "['','class_name='=>'string']");
f("SplFileInfo::__toString", "['']");
f("SplFileObject::__construct", "['SplFileObject','filename'=>'string','mode='=>'string','use_include_path='=>'bool','context='=>'']");
f("SplFileObject::current", "['string|array']");
f("SplFileObject::eof", "['bool']");
f("SplFileObject::fflush", "['bool']");
f("SplFileObject::fgetc", "['string|false']");
f("SplFileObject::fgetcsv", "['array','delimiter='=>'string','enclosure='=>'string','escape='=>'']");
f("SplFileObject::fgetss", "['string','allowable_tags='=>'string']");
f("SplFileObject::fgets", "['string']");
f("SplFileObject::flock", "['bool','operation'=>'int','&wouldblock='=>'int']");
f("SplFileObject::fpassthru", "['int']");
f("SplFileObject::fputcsv", "['int|false','fields'=>'array','delimiter'=>'string','enclosure'=>'string','escape'=>'string']");
f("SplFileObject::fread", "['string','length'=>'int']");
f("SplFileObject::fscanf", "['bool','format'=>'string','...='=>'string']");
f("SplFileObject::fseek", "['int','pos'=>'int','whence='=>'int']");
f("SplFileObject::fstat", "['bool']");
f("SplFileObject::ftell", "['int']");
f("SplFileObject::ftruncate", "['bool','size'=>'int']");
f("SplFileObject::fwrite", "['','str'=>'string','length='=>'int']");
f("SplFileObject::getChildren", "['bool']");
f("SplFileObject::getCsvControl", "['array']");
f("SplFileObject::getFlags", "['int']");
f("SplFileObject::getMaxLineLen", "['int']");
f("SplFileObject::hasChildren", "['bool']");
f("SplFileObject::key", "['int']");
f("SplFileObject::next", "['']");
f("SplFileObject::rewind", "['']");
f("SplFileObject::seek", "['','line_pos'=>'int']");
f("SplFileObject::setCsvControl", "['','delimiter='=>'string','enclosure='=>'string','escape='=>'string']");
f("SplFileObject::setFlags", "['','flags'=>'int']");
f("SplFileObject::setMaxLineLen", "['','max_len'=>'int']");
f("SplFileObject::__toString", "['void']");
f("SplFileObject::valid", "['']");
f("SplFixedArray::__construct", "['SplFixedArray','size'=>'int']");
f("SplFixedArray::count", "['int']");
f("SplFixedArray::current", "['']");
f("SplFixedArray::fromArray", "['SplFixedArray','data'=>'array','save_indexes='=>'bool']");
f("SplFixedArray::getSize", "['int']");
f("SplFixedArray::key", "['int']");
f("SplFixedArray::next", "['void']");
f("SplFixedArray::offsetExists", "['bool','index'=>'']");
f("SplFixedArray::offsetGet", "['mixed','index'=>'']");
f("SplFixedArray::offsetSet", "['void','index'=>'','newval'=>'']");
f("SplFixedArray::offsetUnset", "['void','index'=>'']");
f("SplFixedArray::rewind", "['void']");
f("SplFixedArray::setSize", "['bool','size'=>'int']");
f("SplFixedArray::toArray", "['any']");
f("SplFixedArray::valid", "['bool']");
f("SplFixedArray::__wakeup", "['']");
f("SplHeap::compare", "['int','value1'=>'','value2'=>'']");
f("SplHeap::count", "['int']");
f("SplHeap::current", "['mixed']");
f("SplHeap::extract", "['mixed']");
f("SplHeap::insert", "['bool','value'=>'']");
f("SplHeap::isCorrupted", "['int']");
f("SplHeap::isEmpty", "['bool']");
f("SplHeap::key", "['int']");
f("SplHeap::next", "['void']");
f("SplHeap::recoverFromCorruption", "['int']");
f("SplHeap::rewind", "['void']");
f("SplHeap::top", "['mixed']");
f("SplHeap::valid", "['bool']");
f("split", "['array','pattern'=>'string','string'=>'string','limit='=>'int']");
f("spliti", "['array','pattern'=>'string','string'=>'string','limit='=>'int']");
f("SplMaxHeap::compare", "['int','a'=>'','b'=>'']");
f("SplMinHeap::compare", "['int','a'=>'','b'=>'']");
f("spl_object_hash", "['string','obj'=>'any']");
f("SplObjectStorage::addAll", "['void','os'=>'splobjectstorage']");
f("SplObjectStorage::attach", "['void','obj'=>'any','inf='=>'']");
f("SplObjectStorage::contains", "['bool','obj'=>'any']");
f("SplObjectStorage::count", "['int']");
f("SplObjectStorage::current", "['any']");
f("SplObjectStorage::detach", "['void','obj'=>'any']");
f("SplObjectStorage::getHash", "['string','obj'=>'any']");
f("SplObjectStorage::getInfo", "['mixed']");
f("SplObjectStorage::key", "['int']");
f("SplObjectStorage::next", "['void']");
f("SplObjectStorage::offsetExists", "['any','any'=>'any']");
f("SplObjectStorage::offsetGet", "['mixed','obj'=>'any']");
f("SplObjectStorage::offsetSet", "['any','any'=>'any','data='=>'']");
f("SplObjectStorage::offsetUnset", "['any','any'=>'any']");
f("SplObjectStorage::removeAll", "['void','os'=>'splobjectstorage']");
f("SplObjectStorage::removeAllExcept", "['void','os'=>'splobjectstorage']");
f("SplObjectStorage::rewind", "['void']");
f("SplObjectStorage::serialize", "['string']");
f("SplObjectStorage::setInfo", "['void','inf'=>'']");
f("SplObjectStorage::unserialize", "['void','serialized'=>'string']");
f("SplObjectStorage::valid", "['bool']");
f("SplObserver::update", "['void','subject'=>'splsubject']");
f("SplPriorityQueue::compare", "['int','a'=>'','b'=>'']");
f("SplPriorityQueue::count", "['int']");
f("SplPriorityQueue::current", "['mixed']");
f("SplPriorityQueue::extract", "['mixed']");
f("SplPriorityQueue::getExtractFlags", "['int']");
f("SplPriorityQueue::insert", "['bool','value'=>'','priority'=>'']");
f("SplPriorityQueue::isEmpty", "['bool']");
f("SplPriorityQueue::key", "['']");
f("SplPriorityQueue::next", "['']");
f("SplPriorityQueue::recoverFromCorruption", "['']");
f("SplPriorityQueue::rewind", "['']");
f("SplPriorityQueue::setExtractFlags", "['void','flags'=>'int']");
f("SplPriorityQueue::top", "['']");
f("SplPriorityQueue::valid", "['bool']");
f("SplQueue::dequeue", "['']");
f("SplQueue::enqueue", "['','value'=>'']");
f("SplQueue::setIteratorMode", "['','mode'=>'int']");
f("SplStack::setIteratorMode", "['','mode'=>'int']");
f("SplSubject::attach", "['','observer'=>'splobserver']");
f("SplSubject::detach", "['','observer'=>'splobserver']");
f("SplSubject::notify", "['']");
f("SplTempFileObject::__construct", "['SplTempFileObject','max_memory='=>'int']");
f("SplType::__construct", "['','initial_value='=>'mixed','strict='=>'bool']");
f("Spoofchecker::areConfusable", "['bool','s1'=>'string','s2'=>'string','&error='=>'string']");
f("Spoofchecker::__construct", "['']");
f("Spoofchecker::isSuspicious", "['bool','text'=>'string','&error='=>'string']");
f("Spoofchecker::setAllowedLocales", "['void','locale_list'=>'string']");
f("Spoofchecker::setChecks", "['void','checks'=>'long']");
f("sprintf", "['string','format'=>'string','arg1='=>'','...='=>'']");
f("SQLite3::busyTimeout", "['bool','msecs'=>'int']");
f("SQLite3::changes", "['int']");
f("SQLite3::close", "['bool']");
f("SQLite3::__construct", "['SQLite3','filename'=>'string','flags='=>'int','encryption_key='=>'string']");
f("SQLite3::createAggregate", "['bool','name'=>'string','step'=>'','final'=>'','argcount='=>'int']");
f("SQLite3::createCollation", "['bool','name'=>'string','callback'=>'']");
f("SQLite3::createFunction", "['bool','name'=>'string','callback'=>'','argcount='=>'int']");
f("SQLite3::enableExceptions", "['bool','enableexceptions'=>'bool']");
f("SQLite3::escapeString", "['string','value'=>'string']");
f("SQLite3::exec", "['bool','query'=>'string']");
f("SQLite3::lastErrorCode", "['int']");
f("SQLite3::lastErrorMsg", "['string']");
f("SQLite3::lastInsertRowID", "['int']");
f("SQLite3::loadExtension", "['bool','shared'=>'string']");
f("SQLite3::openBlob", "['resource','table'=>'string','column'=>'string','rowid'=>'int','dbname'=>'string']");
f("SQLite3::open", "['','filename'=>'string','flags='=>'int','encryption='=>'string']");
f("SQLite3::prepare", "['SQLite3Stmt','query'=>'string']");
f("SQLite3::querySingle", "['SQLite3Result','query'=>'string','entire_row='=>'bool']");
f("SQLite3::query", "['SQLite3Result','query'=>'string']");
f("SQLite3Result::columnName", "['string','column'=>'int']");
f("SQLite3Result::columnType", "['int','column'=>'int']");
f("SQLite3Result::__construct", "['SQLite3Result']");
f("SQLite3Result::fetchArray", "['array','mode='=>'int']");
f("SQLite3Result::finalize", "['bool']");
f("SQLite3Result::numColumns", "['int']");
f("SQLite3Result::reset", "['bool']");
f("SQLite3Stmt::bindParam", "['bool','parameter_name_or_number'=>'string|int','parameter'=>'','type='=>'int']");
f("SQLite3Stmt::bindValue", "['bool','parameter_name_or_number'=>'string|int','parameter'=>'','type='=>'int']");
f("SQLite3Stmt::clear", "['bool']");
f("SQLite3Stmt::close", "['bool']");
f("SQLite3Stmt::__construct", "['SQLite3Stmt','dbobject'=>'sqlite3','statement'=>'string']");
f("SQLite3Stmt::execute", "['SQLite3Result']");
f("SQLite3Stmt::paramCount", "['int']");
f("SQLite3Stmt::readOnly", "['bool']");
f("SQLite3Stmt::reset", "['bool']");
f("SQLite3::version", "['array']");
f("sqlite_array_query", "['array','dbhandle'=>'','query'=>'string','result_type='=>'int','decode_binary='=>'bool']");
f("sqlite_busy_timeout", "['','dbhandle'=>'','milliseconds'=>'int']");
f("sqlite_changes", "['int','dbhandle'=>'']");
f("sqlite_close", "['','dbhandle'=>'']");
f("sqlite_column", "['','result'=>'','index_or_name'=>'','decode_binary='=>'bool']");
f("sqlite_create_aggregate", "['','dbhandle'=>'','function_name'=>'string','step_func'=>'callable','finalize_func'=>'callable','num_args='=>'int']");
f("sqlite_create_function", "['','dbhandle'=>'','function_name'=>'string','callback'=>'callable','num_args='=>'int']");
f("sqlite_current", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteDatabase::arrayQuery", "['array','dbhandle'=>'','query'=>'string','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteDatabase::busyTimeout", "['','dbhandle'=>'','milliseconds'=>'int']");
f("SQLiteDatabase::changes", "['int','dbhandle'=>'']");
f("SQLiteDatabase::createAggregate", "['','dbhandle'=>'','function_name'=>'string','step_func'=>'callable','finalize_func'=>'callable','num_args='=>'int']");
f("SQLiteDatabase::createFunction", "['','dbhandle'=>'','function_name'=>'string','callback'=>'callable','num_args='=>'int']");
f("SQLiteDatabase::exec", "['bool','dbhandle'=>'','query'=>'string','error_msg='=>'string']");
f("SQLiteDatabase::fetchColumnTypes", "['array','table_name'=>'string','dbhandle'=>'','result_type='=>'int']");
f("SQLiteDatabase::lastError", "['int','dbhandle'=>'']");
f("SQLiteDatabase::lastInsertRowid", "['int','dbhandle'=>'']");
f("SQLiteDatabase::queryExec", "['bool','query'=>'string','&error_msg='=>'string']");
f("SQLiteDatabase::query", "['SQLiteResult','dbhandle'=>'','query'=>'string','result_type='=>'int','error_msg='=>'string']");
f("SQLiteDatabase::singleQuery", "['array','db'=>'','query'=>'string','first_row_only='=>'bool','decode_binary='=>'bool']");
f("SQLiteDatabase::unbufferedQuery", "['SQLiteUnbuffered','dbhandle'=>'','query'=>'string','result_type='=>'int','error_msg='=>'string']");
f("sqlite_error_string", "['string','error_code'=>'int']");
f("sqlite_escape_string", "['string','item'=>'string']");
f("sqlite_exec", "['bool','dbhandle'=>'','query'=>'string','error_msg='=>'string']");
f("sqlite_factory", "['SQLiteDatabase','filename'=>'string','mode='=>'int','error_message='=>'string']");
f("sqlite_fetch_all", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("sqlite_fetch_array", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("sqlite_fetch_column_types", "['array','table_name'=>'string','dbhandle'=>'','result_type='=>'int']");
f("sqlite_fetch_object", "['any','result'=>'','class_name='=>'string','ctor_params='=>'array','decode_binary='=>'bool']");
f("sqlite_fetch_single", "['string','result'=>'','decode_binary='=>'bool']");
f("sqlite_field_name", "['string','result'=>'','field_index'=>'int']");
f("sqlite_has_more", "['bool','result'=>'']");
f("sqlite_has_prev", "['bool','result'=>'']");
f("sqlite_key", "['int','result'=>'']");
f("sqlite_last_error", "['int','dbhandle'=>'']");
f("sqlite_last_insert_rowid", "['int','dbhandle'=>'']");
f("sqlite_libencoding", "['string']");
f("sqlite_libversion", "['string']");
f("sqlite_next", "['bool','result'=>'']");
f("sqlite_num_fields", "['int','result'=>'']");
f("sqlite_num_rows", "['int','result'=>'']");
f("sqlite_open", "['resource','filename'=>'string','mode='=>'int','error_message='=>'string']");
f("sqlite_popen", "['resource','filename'=>'string','mode='=>'int','error_message='=>'string']");
f("sqlite_prev", "['bool','result'=>'']");
f("sqlite_query", "['SQLiteResult','dbhandle'=>'','query'=>'string','result_type='=>'int','error_msg='=>'string']");
f("SQLiteResult::column", "['','result'=>'','index_or_name'=>'','decode_binary='=>'bool']");
f("SQLiteResult::current", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteResult::fetchAll", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteResult::fetch", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteResult::fetchObject", "['any','result'=>'','class_name='=>'string','ctor_params='=>'array','decode_binary='=>'bool']");
f("SQLiteResult::fetchSingle", "['string','result'=>'','decode_binary='=>'bool']");
f("SQLiteResult::fieldName", "['string','result'=>'','field_index'=>'int']");
f("SQLiteResult::hasPrev", "['bool','result'=>'']");
f("SQLiteResult::key", "['int','result'=>'']");
f("SQLiteResult::next", "['bool','result'=>'']");
f("SQLiteResult::numFields", "['int','result'=>'']");
f("SQLiteResult::numRows", "['int','result'=>'']");
f("SQLiteResult::prev", "['bool','result'=>'']");
f("SQLiteResult::rewind", "['bool','result'=>'']");
f("SQLiteResult::seek", "['bool','result'=>'','rownum'=>'int']");
f("SQLiteResult::valid", "['bool','result'=>'']");
f("sqlite_rewind", "['bool','result'=>'']");
f("sqlite_seek", "['bool','result'=>'','rownum'=>'int']");
f("sqlite_single_query", "['array','db'=>'','query'=>'string','first_row_only='=>'bool','decode_binary='=>'bool']");
f("sqlite_udf_decode_binary", "['string','data'=>'string']");
f("sqlite_udf_encode_binary", "['string','data'=>'string']");
f("SQLiteUnbuffered::column", "['','result'=>'','index_or_name'=>'','decode_binary='=>'bool']");
f("SQLiteUnbuffered::current", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteUnbuffered::fetchAll", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteUnbuffered::fetch", "['array','result'=>'','result_type='=>'int','decode_binary='=>'bool']");
f("SQLiteUnbuffered::fetchObject", "['any','result'=>'','class_name='=>'string','ctor_params='=>'array','decode_binary='=>'bool']");
f("SQLiteUnbuffered::fetchSingle", "['string','result'=>'','decode_binary='=>'bool']");
f("SQLiteUnbuffered::fieldName", "['string','result'=>'','field_index'=>'int']");
f("SQLiteUnbuffered::next", "['bool','result'=>'']");
f("SQLiteUnbuffered::numFields", "['int','result'=>'']");
f("sqlite_unbuffered_query", "['SQLiteUnbuffered','dbhandle'=>'','query'=>'string','result_type='=>'int','error_msg='=>'string']");
f("SQLiteUnbuffered::valid", "['bool','result'=>'']");
f("sqlite_valid", "['bool','result'=>'']");
f("sql_regcase", "['string','string'=>'string']");
f("sqlsrv_begin_transaction", "['bool','conn'=>'resource']");
f("sqlsrv_cancel", "['bool','stmt'=>'resource']");
f("sqlsrv_client_info", "['array','conn'=>'resource']");
f("sqlsrv_close", "['bool','conn'=>'resource']");
f("sqlsrv_commit", "['bool','conn'=>'resource']");
f("sqlsrv_configure", "['bool','setting'=>'string','value'=>'mixed']");
f("sqlsrv_connect", "['resource','serverName'=>'string','connectionInfo='=>'array']");
f("sqlsrv_errors", "['mixed','errorsOrWarnings='=>'int']");
f("sqlsrv_execute", "['bool','stmt'=>'resource']");
f("sqlsrv_fetch_array", "['array','stmt'=>'resource','fetchType='=>'int','row='=>'int','offset='=>'int']");
f("sqlsrv_fetch", "['mixed','stmt'=>'resource','row='=>'int','offset='=>'int']");
f("sqlsrv_fetch_object", "['mixed','stmt'=>'resource','className='=>'string','ctorParams='=>'array','row='=>'int','offset='=>'int']");
f("sqlsrv_field_metadata", "['mixed','stmt'=>'resource']");
f("sqlsrv_free_stmt", "['bool','stmt'=>'resource']");
f("sqlsrv_get_config", "['mixed','setting'=>'string']");
f("sqlsrv_get_field", "['mixed','stmt'=>'resource','fieldIndex'=>'int','getAsType='=>'int']");
f("sqlsrv_has_rows", "['bool','stmt'=>'resource']");
f("sqlsrv_next_result", "['mixed','stmt'=>'resource']");
f("sqlsrv_num_fields", "['mixed','stmt'=>'resource']");
f("sqlsrv_num_rows", "['mixed','stmt'=>'resource']");
f("sqlsrv_prepare", "['mixed','conn'=>'resource','sql'=>'string','params='=>'array','options='=>'array']");
f("sqlsrv_query", "['mixed','conn'=>'resource','sql'=>'string','params='=>'array','options='=>'array']");
f("sqlsrv_rollback", "['bool','conn'=>'resource']");
f("sqlsrv_rows_affected", "['int','stmt'=>'resource']");
f("sqlsrv_send_stream_data", "['bool','stmt'=>'resource']");
f("sqlsrv_server_info", "['array','conn'=>'resource']");
f("sqrt", "['float','number'=>'float']");
f("srand", "['','seed='=>'int']");
f("sscanf", "['','str'=>'string','format'=>'string','&...vars='=>'string']");
f("ssdeep_fuzzy_compare", "['int','signature1'=>'string','signature2'=>'string']");
f("ssdeep_fuzzy_hash_filename", "['string','file_name'=>'string']");
f("ssdeep_fuzzy_hash", "['string','to_hash'=>'string']");
f("ssh2_auth_agent", "['bool','session'=>'resource','username'=>'string']");
f("ssh2_auth_hostbased_file", "['bool','session'=>'','username'=>'string','hostname'=>'string','pubkeyfile'=>'string','privkeyfile'=>'string','passphrase='=>'string','local_username='=>'string']");
f("ssh2_auth_none", "['','session'=>'','username'=>'string']");
f("ssh2_auth_password", "['bool','session'=>'','username'=>'string','password'=>'string']");
f("ssh2_auth_pubkey_file", "['bool','session'=>'','username'=>'string','pubkeyfile'=>'string','privkeyfile'=>'string','passphrase='=>'string']");
f("ssh2_connect", "['resource','host'=>'string','port='=>'int','methods='=>'array','callbacks='=>'array']");
f("ssh2_exec", "['resource','session'=>'','command'=>'string','pty='=>'string','env='=>'array','width='=>'int','height='=>'int','width_height_type='=>'int']");
f("ssh2_fetch_stream", "['resource','channel'=>'','streamid'=>'int']");
f("ssh2_fingerprint", "['string','session'=>'','flags='=>'int']");
f("ssh2_methods_negotiated", "['array','session'=>'']");
f("ssh2_publickey_add", "['bool','pkey'=>'','algoname'=>'string','blob'=>'string','overwrite='=>'bool','attributes='=>'array']");
f("ssh2_publickey_init", "['resource','session'=>'']");
f("ssh2_publickey_list", "['array','pkey'=>'']");
f("ssh2_publickey_remove", "['bool','pkey'=>'','algoname'=>'string','blob'=>'string']");
f("ssh2_scp_recv", "['bool','session'=>'','remote_file'=>'string','local_file'=>'string']");
f("ssh2_scp_send", "['bool','session'=>'','local_file'=>'string','remote_file'=>'string','create_mode='=>'int']");
f("ssh2_sftp_chmod", "['bool','sftp'=>'resource','filename'=>'string','mode'=>'int']");
f("ssh2_sftp_lstat", "['array','sftp'=>'','path'=>'string']");
f("ssh2_sftp_mkdir", "['bool','sftp'=>'','dirname'=>'string','mode='=>'int','recursive='=>'bool']");
f("ssh2_sftp_readlink", "['string','sftp'=>'','link'=>'string']");
f("ssh2_sftp_realpath", "['string','sftp'=>'','filename'=>'string']");
f("ssh2_sftp_rename", "['bool','sftp'=>'','from'=>'string','to'=>'string']");
f("ssh2_sftp", "['resource','session'=>'']");
f("ssh2_sftp_rmdir", "['bool','sftp'=>'','dirname'=>'string']");
f("ssh2_sftp_stat", "['array','sftp'=>'','path'=>'string']");
f("ssh2_sftp_symlink", "['bool','sftp'=>'','target'=>'string','link'=>'string']");
f("ssh2_sftp_unlink", "['bool','sftp'=>'','filename'=>'string']");
f("ssh2_shell", "['resource','session'=>'','term_type='=>'string','env='=>'array','width='=>'int','height='=>'int','width_height_type='=>'int']");
f("ssh2_tunnel", "['resource','session'=>'','host'=>'string','port'=>'int']");
f("stat", "['array','filename'=>'string']");
f("stats_absolute_deviation", "['float','a'=>'array']");
f("stats_cdf_beta", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_binomial", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_cauchy", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_chisquare", "['float','par1'=>'float','par2'=>'float','which'=>'int']");
f("stats_cdf_exponential", "['float','par1'=>'float','par2'=>'float','which'=>'int']");
f("stats_cdf_f", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_gamma", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_laplace", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_logistic", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_negative_binomial", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_noncentral_chisquare", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_noncentral_f", "['float','par1'=>'float','par2'=>'float','par3'=>'float','par4'=>'float','which'=>'int']");
f("stats_cdf_poisson", "['float','par1'=>'float','par2'=>'float','which'=>'int']");
f("stats_cdf_t", "['float','par1'=>'float','par2'=>'float','which'=>'int']");
f("stats_cdf_uniform", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_cdf_weibull", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_covariance", "['float','a'=>'array','b'=>'array']");
f("stats_dens_beta", "['float','x'=>'float','a'=>'float','b'=>'float']");
f("stats_dens_cauchy", "['float','x'=>'float','ave'=>'float','stdev'=>'float']");
f("stats_dens_chisquare", "['float','x'=>'float','dfr'=>'float']");
f("stats_dens_exponential", "['float','x'=>'float','scale'=>'float']");
f("stats_dens_f", "['float','x'=>'float','dfr1'=>'float','dfr2'=>'float']");
f("stats_dens_gamma", "['float','x'=>'float','shape'=>'float','scale'=>'float']");
f("stats_dens_laplace", "['float','x'=>'float','ave'=>'float','stdev'=>'float']");
f("stats_dens_logistic", "['float','x'=>'float','ave'=>'float','stdev'=>'float']");
f("stats_dens_negative_binomial", "['float','x'=>'float','n'=>'float','pi'=>'float']");
f("stats_dens_normal", "['float','x'=>'float','ave'=>'float','stdev'=>'float']");
f("stats_dens_pmf_binomial", "['float','x'=>'float','n'=>'float','pi'=>'float']");
f("stats_dens_pmf_hypergeometric", "['float','n1'=>'float','n2'=>'float','N1'=>'float','N2'=>'float']");
f("stats_dens_pmf_poisson", "['float','x'=>'float','lb'=>'float']");
f("stats_dens_t", "['float','x'=>'float','dfr'=>'float']");
f("stats_dens_weibull", "['float','x'=>'float','a'=>'float','b'=>'float']");
f("stats_den_uniform", "['float','x'=>'float','a'=>'float','b'=>'float']");
f("stats_harmonic_mean", "['number','a'=>'array']");
f("stats_kurtosis", "['float','a'=>'array']");
f("stats_rand_gen_beta", "['float','a'=>'float','b'=>'float']");
f("stats_rand_gen_chisquare", "['float','df'=>'float']");
f("stats_rand_gen_exponential", "['float','av'=>'float']");
f("stats_rand_gen_f", "['float','dfn'=>'float','dfd'=>'float']");
f("stats_rand_gen_funiform", "['float','low'=>'float','high'=>'float']");
f("stats_rand_gen_gamma", "['float','a'=>'float','r'=>'float']");
f("stats_rand_gen_ibinomial", "['int','n'=>'int','pp'=>'float']");
f("stats_rand_gen_ibinomial_negative", "['int','n'=>'int','p'=>'float']");
f("stats_rand_gen_int", "['int']");
f("stats_rand_gen_ipoisson", "['int','mu'=>'float']");
f("stats_rand_gen_iuniform", "['int','low'=>'int','high'=>'int']");
f("stats_rand_gen_noncenral_chisquare", "['float','df'=>'float','xnonc'=>'float']");
f("stats_rand_gen_noncentral_f", "['float','dfn'=>'float','dfd'=>'float','xnonc'=>'float']");
f("stats_rand_gen_noncentral_t", "['float','df'=>'float','xnonc'=>'float']");
f("stats_rand_gen_normal", "['float','av'=>'float','sd'=>'float']");
f("stats_rand_gen_t", "['float','df'=>'float']");
f("stats_rand_get_seeds", "['array']");
f("stats_rand_phrase_to_seeds", "['array','phrase'=>'string']");
f("stats_rand_ranf", "['float']");
f("stats_rand_setall", "['','iseed1'=>'int','iseed2'=>'int']");
f("stats_skew", "['float','a'=>'array']");
f("stats_standard_deviation", "['float','a'=>'array','sample='=>'bool']");
f("stats_stat_binomial_coef", "['float','x'=>'int','n'=>'int']");
f("stats_stat_correlation", "['float','arr1'=>'array','arr2'=>'array']");
f("stats_stat_gennch", "['float','n'=>'int']");
f("stats_stat_independent_t", "['float','arr1'=>'array','arr2'=>'array']");
f("stats_stat_innerproduct", "['float','arr1'=>'array','arr2'=>'array']");
f("stats_stat_noncentral_t", "['float','par1'=>'float','par2'=>'float','par3'=>'float','which'=>'int']");
f("stats_stat_paired_t", "['float','arr1'=>'array','arr2'=>'array']");
f("stats_stat_percentile", "['float','df'=>'float','xnonc'=>'float']");
f("stats_stat_powersum", "['float','arr'=>'array','power'=>'float']");
f("stats_variance", "['float','a'=>'array','sample='=>'bool']");
f("stomp_abort", "['bool','transaction_id'=>'string','headers='=>'array','link='=>'']");
f("Stomp::abort", "['bool','transaction_id'=>'string','headers='=>'array','link='=>'']");
f("stomp_ack", "['bool','msg'=>'','headers='=>'array','link='=>'']");
f("Stomp::ack", "['bool','msg'=>'','headers='=>'array','link='=>'']");
f("stomp_begin", "['bool','transaction_id'=>'string','headers='=>'array','link='=>'']");
f("Stomp::begin", "['bool','transaction_id'=>'string','headers='=>'array','link='=>'']");
f("stomp_close", "['bool','link'=>'']");
f("stomp_commit", "['bool','transaction_id'=>'string','headers='=>'array','link='=>'']");
f("Stomp::commit", "['bool','transaction_id'=>'string','headers='=>'array','link='=>'']");
f("stomp_connect_error", "['string']");
f("stomp_connect", "['resource','broker='=>'string','username='=>'string','password='=>'string','headers='=>'array']");
f("Stomp::__construct", "['Stomp','broker='=>'string','username='=>'string','password='=>'string','headers='=>'array']");
f("Stomp::__destruct", "['bool','link'=>'']");
f("stomp_error", "['string','link'=>'']");
f("Stomp::error", "['string','link'=>'']");
f("StompException::getDetails", "['string']");
f("StompFrame::__construct", "['','command='=>'string','headers='=>'array','body='=>'string']");
f("stomp_get_read_timeout", "['array','link'=>'']");
f("Stomp::getReadTimeout", "['array','link'=>'']");
f("stomp_get_session_id", "['string','link'=>'']");
f("Stomp::getSessionId", "['string','link'=>'']");
f("stomp_has_frame", "['bool','link'=>'']");
f("Stomp::hasFrame", "['bool','link'=>'']");
f("stomp_read_frame", "['array','class_name='=>'string','link='=>'']");
f("Stomp::readFrame", "['array','class_name='=>'string','link='=>'']");
f("stomp_send", "['bool','destination'=>'string','msg'=>'','headers='=>'array','link='=>'']");
f("Stomp::send", "['bool','destination'=>'string','msg'=>'','headers='=>'array','link='=>'']");
f("stomp_set_read_timeout", "['','seconds'=>'int','microseconds='=>'int','link='=>'']");
f("Stomp::setReadTimeout", "['','seconds'=>'int','microseconds='=>'int','link='=>'']");
f("stomp_subscribe", "['bool','destination'=>'string','headers='=>'array','link='=>'']");
f("Stomp::subscribe", "['bool','destination'=>'string','headers='=>'array','link='=>'']");
f("stomp_unsubscribe", "['bool','destination'=>'string','headers='=>'array','link='=>'']");
f("Stomp::unsubscribe", "['bool','destination'=>'string','headers='=>'array','link='=>'']");
f("stomp_version", "['string']");
f("strcasecmp", "['int','str1'=>'string','str2'=>'string']");
f("strchr", "['string','haystack'=>'string','needle'=>'string']");
f("strcmp", "['int','str1'=>'string','str2'=>'string']");
f("strcoll", "['int','str1'=>'string','str2'=>'string']");
f("strcspn", "['int','str'=>'string','mask'=>'string','start='=>'int','len='=>'int']");
f("stream_bucket_append", "['','brigade'=>'','bucket'=>'']");
f("stream_bucket_make_writeable", "['any','brigade'=>'']");
f("stream_bucket_new", "['resource','stream'=>'','buffer'=>'string']");
f("stream_bucket_prepend", "['','brigade'=>'','bucket'=>'']");
f("stream_context_create", "['resource','options='=>'array','params='=>'array']");
f("stream_context_get_default", "['resource','options='=>'array']");
f("stream_context_get_options", "['array','context'=>'']");
f("stream_context_get_params", "['array','context'=>'']");
f("stream_context_set_default", "['resource','options'=>'array']");
f("stream_context_set_option\\'1", "['bool','context'=>'','options'=>'array']");
f("stream_context_set_option", "['bool','context'=>'','wrappername'=>'string','optionname'=>'string','value'=>'']");
f("stream_context_set_params", "['bool','context'=>'','options'=>'array']");
f("stream_copy_to_stream", "['int','source'=>'','dest'=>'','maxlen='=>'int','pos='=>'int']");
f("stream_encoding", "['bool','stream'=>'','encoding='=>'string']");
f("stream_filter_append", "['resource','stream'=>'','filtername'=>'string','read_write='=>'int','filterparams='=>'string']");
f("stream_filter_prepend", "['resource','stream'=>'','filtername'=>'string','read_write='=>'int','filterparams='=>'string']");
f("stream_filter_register", "['bool','filtername'=>'string','classname'=>'string']");
f("stream_filter_remove", "['bool','stream_filter'=>'']");
f("stream_get_contents", "['string','source'=>'','maxlen='=>'int','offset='=>'int']");
f("stream_get_filters", "['array']");
f("stream_get_line", "['string','stream'=>'','maxlen'=>'int','ending='=>'string']");
f("stream_get_meta_data", "['array','fp'=>'']");
f("stream_get_transports", "['array']");
f("stream_get_wrappers", "['array']");
f("stream_is_local", "['bool','stream'=>'']");
f("stream_notification_callback", "['callback','notification_code'=>'int','severity'=>'int','message'=>'string','message_code'=>'int','bytes_transferred'=>'int','bytes_max'=>'int']");
f("stream_resolve_include_path", "['string','filename'=>'string']");
f("stream_select", "['int','&read_streams'=>'array','&write_streams'=>'array|null','&except_streams'=>'array|null','tv_sec'=>'int|null','tv_usec='=>'int|null']");
f("stream_set_blocking", "['bool','socket'=>'','mode'=>'bool']");
f("stream_set_chunk_size", "['int','fp'=>'','chunk_size'=>'int']");
f("stream_set_read_buffer", "['int','fp'=>'','buffer'=>'int']");
f("stream_set_timeout", "['bool','stream'=>'','seconds'=>'int','microseconds='=>'int']");
f("stream_set_write_buffer", "['int','fp'=>'','buffer'=>'int']");
f("stream_socket_accept", "['resource','serverstream'=>'','timeout='=>'float','&peername='=>'string']");
f("stream_socket_client", "['resource','remoteaddress'=>'string','&errcode='=>'int','&errstring='=>'string','timeout='=>'float','flags='=>'int','context='=>'']");
f("stream_socket_enable_crypto", "['int','stream'=>'','enable'=>'bool','cryptokind='=>'int','sessionstream='=>'']");
f("stream_socket_get_name", "['string','stream'=>'','want_peer'=>'bool']");
f("stream_socket_pair", "['array','domain'=>'int','type'=>'int','protocol'=>'int']");
f("stream_socket_recvfrom", "['string','stream'=>'','amount'=>'int','flags='=>'int','&remote_addr='=>'string']");
f("stream_socket_sendto", "['int','stream'=>'resouce','data'=>'string','flags='=>'int','target_addr='=>'string']");
f("stream_socket_server", "['resource','localaddress'=>'string','&errcode='=>'int','&errstring='=>'string','flags='=>'int','context='=>'']");
f("stream_socket_shutdown", "['bool','stream'=>'','how'=>'int']");
f("stream_supports_lock", "['bool','stream'=>'']");
f("streamWrapper::__construct", "['']");
f("streamWrapper::__destruct", "['']");
f("streamWrapper::dir_closedir", "['bool']");
f("streamWrapper::dir_opendir", "['bool','path'=>'string','options'=>'int']");
f("streamWrapper::dir_readdir", "['string']");
f("streamWrapper::dir_rewinddir", "['bool']");
f("streamWrapper::mkdir", "['bool','path'=>'string','mode'=>'int','options'=>'int']");
f("stream_wrapper_register", "['bool','protocol'=>'string','classname'=>'string','flags='=>'int']");
f("streamWrapper::rename", "['bool','path_from'=>'string','path_to'=>'string']");
f("stream_wrapper_restore", "['bool','protocol'=>'string']");
f("streamWrapper::rmdir", "['bool','path'=>'string','options'=>'int']");
f("streamWrapper::stream_cast", "['resource','cast_as'=>'int']");
f("streamWrapper::stream_close", "['']");
f("streamWrapper::stream_eof", "['bool']");
f("streamWrapper::stream_flush", "['bool']");
f("streamWrapper::stream_lock", "['bool','operation'=>'mode']");
f("streamWrapper::stream_metadata", "['bool','path'=>'string','option'=>'int','value'=>'mixed']");
f("streamWrapper::stream_open", "['bool','path'=>'string','mode'=>'string','options'=>'int','opened_path'=>'string']");
f("streamWrapper::stream_read", "['string','count'=>'int']");
f("streamWrapper::stream_seek", "['bool','offset'=>'int','whence'=>'int']");
f("streamWrapper::stream_set_option", "['bool','option'=>'int','arg1'=>'int','arg2'=>'int']");
f("streamWrapper::stream_stat", "['array']");
f("streamWrapper::stream_tell", "['int']");
f("streamWrapper::stream_truncate", "['bool','new_size'=>'int']");
f("streamWrapper::stream_write", "['int','data'=>'string']");
f("streamWrapper::unlink", "['bool','path'=>'string']");
f("stream_wrapper_unregister", "['bool','protocol'=>'string']");
f("streamWrapper::url_stat", "['array','path'=>'string','flags'=>'int']");
f("strftime", "['string','format'=>'string','timestamp='=>'int']");
f("str_getcsv", "['array','input'=>'string','delimiter='=>'string','enclosure='=>'string','escape='=>'string']");
f("stripcslashes", "['string','str'=>'string']");
f("stripos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("stripslashes", "['string','str'=>'string']");
f("strip_tags", "['string','str'=>'string','allowable_tags='=>'string']");
f("str_ireplace", "['','search'=>'','replace'=>'','subject'=>'','&replace_count='=>'int']");
f("stristr", "['string','haystack'=>'string','needle'=>'string','part='=>'bool']");
f("strlen", "['int','string'=>'string']");
f("strnatcasecmp", "['int','s1'=>'string','s2'=>'string']");
f("strnatcmp", "['int','s1'=>'string','s2'=>'string']");
f("strncasecmp", "['int','str1'=>'string','str2'=>'string','len'=>'int']");
f("strncmp", "['int','str1'=>'string','str2'=>'string','len'=>'int']");
f("str_pad", "['string','input'=>'string','pad_length'=>'int','pad_string='=>'string','pad_type='=>'int']");
f("strpbrk", "['string|false','haystack'=>'string','char_list'=>'string']");
f("strpos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("strptime", "['array|false','datestr'=>'string','format'=>'string']");
f("strrchr", "['string','haystack'=>'string','needle'=>'string']");
f("str_repeat", "['string','input'=>'string','mult'=>'int']");
f("str_replace", "['string|array','search'=>'string|array','replace'=>'string|array','subject'=>'string|array','&replace_count='=>'int']");
f("strrev", "['string','str'=>'string']");
f("strripos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("str_rot13", "['string','str'=>'string']");
f("strrpos", "['int|false','haystack'=>'string','needle'=>'string','offset='=>'int']");
f("str_shuffle", "['','str'=>'string']");
f("str_split", "['array','str'=>'string','split_length='=>'int']");
f("strspn", "['int','str'=>'string','mask'=>'string','start='=>'int','len='=>'int']");
f("strstr", "['string|false','haystack'=>'string','needle'=>'','part='=>'bool']");
f("strtok\\'1", "['string|bool','token'=>'string']");
f("strtok", "['string|bool','str'=>'string','token'=>'string']");
f("strtolower", "['string','str'=>'string']");
f("strtotime", "['int','time'=>'string','now='=>'int']");
f("strtoupper", "['string','str'=>'string']");
f("strtr\\'1", "['string','str'=>'string','replace_pairs'=>'array']");
f("strtr", "['string','str'=>'string','from'=>'string','to'=>'string']");
f("strval", "['string','var'=>'']");
f("str_word_count", "['','string'=>'string','format='=>'int','charlist='=>'string']");
f("substr_compare", "['int','main_str'=>'string','str'=>'string','offset'=>'int','length='=>'int','case_sensitivity='=>'bool']");
f("substr_count", "['int','haystack'=>'string','needle'=>'string','offset='=>'int','length='=>'int']");
f("substr_replace", "['','str'=>'','repl'=>'','start'=>'','length='=>'']");
f("substr", "['string','str'=>'string','start'=>'int','length='=>'int']");
f("suhosin_encrypt_cookie", "['string','name'=>'string','value'=>'string']");
f("suhosin_get_raw_cookies", "['array']");
f("SVM::__construct", "['']");
f("svm::crossvalidate", "['float','problem'=>'array','number_of_folds'=>'int']");
f("SVM::getOptions", "['array']");
f("SVMModel::checkProbabilityModel", "['bool']");
f("SVMModel::__construct", "['','filename='=>'string']");
f("SVMModel::getLabels", "['array']");
f("SVMModel::getNrClass", "['int']");
f("SVMModel::getSvmType", "['int']");
f("SVMModel::getSvrProbability", "['float']");
f("SVMModel::load", "['bool','filename'=>'string']");
f("SVMModel::predict", "['float','data'=>'array']");
f("SVMModel::predict_probability", "['float','data'=>'array']");
f("SVMModel::save", "['bool','filename'=>'string']");
f("SVM::setOptions", "['bool','params'=>'array']");
f("svm::train", "['SVMModel','problem'=>'array','weights='=>'array']");
f("svn_add", "['bool','path'=>'string','recursive='=>'bool','force='=>'bool']");
f("svn_auth_get_parameter", "['string','key'=>'string']");
f("svn_auth_set_parameter", "['','key'=>'string','value'=>'string']");
f("svn_blame", "['array','repository_url'=>'string','revision_no='=>'int']");
f("svn_cat", "['string','repos_url'=>'string','revision_no='=>'int']");
f("svn_checkout", "['bool','repos'=>'string','targetpath'=>'string','revision='=>'int','flags='=>'int']");
f("svn_cleanup", "['bool','workingdir'=>'string']");
f("svn_client_version", "['string']");
f("svn_commit", "['array','log'=>'string','targets'=>'array','dontrecurse='=>'bool']");
f("svn_delete", "['bool','path'=>'string','force='=>'bool']");
f("svn_diff", "['array','path1'=>'string','rev1'=>'int','path2'=>'string','rev2'=>'int']");
f("svn_export", "['bool','frompath'=>'string','topath'=>'string','working_copy='=>'bool','revision_no='=>'int']");
f("svn_fs_abort_txn", "['bool','txn'=>'']");
f("svn_fs_apply_text", "['resource','root'=>'','path'=>'string']");
f("svn_fs_begin_txn2", "['resource','repos'=>'','rev'=>'int']");
f("svn_fs_change_node_prop", "['bool','root'=>'','path'=>'string','name'=>'string','value'=>'string']");
f("svn_fs_check_path", "['int','fsroot'=>'','path'=>'string']");
f("svn_fs_contents_changed", "['bool','root1'=>'','path1'=>'string','root2'=>'','path2'=>'string']");
f("svn_fs_copy", "['bool','from_root'=>'','from_path'=>'string','to_root'=>'','to_path'=>'string']");
f("svn_fs_delete", "['bool','root'=>'','path'=>'string']");
f("svn_fs_dir_entries", "['array','fsroot'=>'','path'=>'string']");
f("svn_fs_file_contents", "['resource','fsroot'=>'','path'=>'string']");
f("svn_fs_file_length", "['int','fsroot'=>'','path'=>'string']");
f("svn_fs_is_dir", "['bool','root'=>'','path'=>'string']");
f("svn_fs_is_file", "['bool','root'=>'','path'=>'string']");
f("svn_fs_make_dir", "['bool','root'=>'','path'=>'string']");
f("svn_fs_make_file", "['bool','root'=>'','path'=>'string']");
f("svn_fs_node_created_rev", "['int','fsroot'=>'','path'=>'string']");
f("svn_fs_node_prop", "['string','fsroot'=>'','path'=>'string','propname'=>'string']");
f("svn_fs_props_changed", "['bool','root1'=>'','path1'=>'string','root2'=>'','path2'=>'string']");
f("svn_fs_revision_prop", "['string','fs'=>'','revnum'=>'int','propname'=>'string']");
f("svn_fs_revision_root", "['resource','fs'=>'','revnum'=>'int']");
f("svn_fs_txn_root", "['resource','txn'=>'']");
f("svn_fs_youngest_rev", "['int','fs'=>'']");
f("svn_import", "['bool','path'=>'string','url'=>'string','nonrecursive'=>'bool']");
f("svn_log", "['array','repos_url'=>'string','start_revision='=>'int','end_revision='=>'int','limit='=>'int','flags='=>'int']");
f("svn_ls", "['array','repos_url'=>'string','revision_no='=>'int','recurse='=>'bool','peg='=>'bool']");
f("svn_mkdir", "['bool','path'=>'string','log_message='=>'string']");
f("svn_repos_create", "['resource','path'=>'string','config='=>'array','fsconfig='=>'array']");
f("svn_repos_fs_begin_txn_for_commit", "['resource','repos'=>'','rev'=>'int','author'=>'string','log_msg'=>'string']");
f("svn_repos_fs_commit_txn", "['int','txn'=>'']");
f("svn_repos_fs", "['resource','repos'=>'']");
f("svn_repos_hotcopy", "['bool','repospath'=>'string','destpath'=>'string','cleanlogs'=>'bool']");
f("svn_repos_open", "['resource','path'=>'string']");
f("svn_repos_recover", "['bool','path'=>'string']");
f("svn_revert", "['bool','path'=>'string','recursive='=>'bool']");
f("svn_status", "['array','path'=>'string','flags='=>'int']");
f("svn_update", "['int','path'=>'string','revno='=>'int','recurse='=>'bool']");
f("SWFAction::__construct", "['SWFAction','script'=>'string']");
f("swf_actiongeturl", "['','url'=>'string','target'=>'string']");
f("swf_actiongotoframe", "['','framenumber'=>'int']");
f("swf_actiongotolabel", "['','label'=>'string']");
f("swf_actionnextframe", "['']");
f("swf_actionplay", "['']");
f("swf_actionprevframe", "['']");
f("swf_actionsettarget", "['','target'=>'string']");
f("swf_actionstop", "['']");
f("swf_actiontogglequality", "['']");
f("swf_actionwaitforframe", "['','framenumber'=>'int','skipcount'=>'int']");
f("swf_addbuttonrecord", "['','states'=>'int','shapeid'=>'int','depth'=>'int']");
f("swf_addcolor", "['','r'=>'float','g'=>'float','b'=>'float','a'=>'float']");
f("SWFBitmap::__construct", "['SWFBitmap','file'=>'','alphafile='=>'']");
f("SWFBitmap::getHeight", "['float']");
f("SWFBitmap::getWidth", "['float']");
f("SWFButton::addAction", "['','action'=>'swfaction','flags'=>'int']");
f("SWFButton::addASound", "['SWFSoundInstance','sound'=>'swfsound','flags'=>'int']");
f("SWFButton::addShape", "['','shape'=>'swfshape','flags'=>'int']");
f("SWFButton::__construct", "['SWFButton']");
f("SWFButton::setAction", "['','action'=>'swfaction']");
f("SWFButton::setDown", "['','shape'=>'swfshape']");
f("SWFButton::setHit", "['','shape'=>'swfshape']");
f("SWFButton::setMenu", "['','flag'=>'int']");
f("SWFButton::setOver", "['','shape'=>'swfshape']");
f("SWFButton::setUp", "['','shape'=>'swfshape']");
f("swf_closefile", "['','return_file='=>'int']");
f("swf_definebitmap", "['','objid'=>'int','image_name'=>'string']");
f("swf_definefont", "['','fontid'=>'int','fontname'=>'string']");
f("swf_defineline", "['','objid'=>'int','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','width'=>'float']");
f("swf_definepoly", "['','objid'=>'int','coords'=>'array','npoints'=>'int','width'=>'float']");
f("swf_definerect", "['','objid'=>'int','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','width'=>'float']");
f("swf_definetext", "['','objid'=>'int','str'=>'string','docenter'=>'int']");
f("SWFDisplayItem::addAction", "['','action'=>'swfaction','flags'=>'int']");
f("SWFDisplayItem::addColor", "['','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("SWFDisplayItem::endMask", "['']");
f("SWFDisplayItem::getRot", "['float']");
f("SWFDisplayItem::getX", "['float']");
f("SWFDisplayItem::getXScale", "['float']");
f("SWFDisplayItem::getXSkew", "['float']");
f("SWFDisplayItem::getY", "['float']");
f("SWFDisplayItem::getYScale", "['float']");
f("SWFDisplayItem::getYSkew", "['float']");
f("SWFDisplayItem::move", "['','dx'=>'float','dy'=>'float']");
f("SWFDisplayItem::moveTo", "['','x'=>'float','y'=>'float']");
f("SWFDisplayItem::multColor", "['','red'=>'float','green'=>'float','blue'=>'float','a='=>'float']");
f("SWFDisplayItem::remove", "['']");
f("SWFDisplayItem::rotate", "['','angle'=>'float']");
f("SWFDisplayItem::rotateTo", "['','angle'=>'float']");
f("SWFDisplayItem::scale", "['','dx'=>'float','dy'=>'float']");
f("SWFDisplayItem::scaleTo", "['','x'=>'float','y='=>'float']");
f("SWFDisplayItem::setDepth", "['','depth'=>'int']");
f("SWFDisplayItem::setMaskLevel", "['','level'=>'int']");
f("SWFDisplayItem::setMatrix", "['','a'=>'float','b'=>'float','c'=>'float','d'=>'float','x'=>'float','y'=>'float']");
f("SWFDisplayItem::setName", "['','name'=>'string']");
f("SWFDisplayItem::setRatio", "['','ratio'=>'float']");
f("SWFDisplayItem::skewX", "['','ddegrees'=>'float']");
f("SWFDisplayItem::skewXTo", "['','degrees'=>'float']");
f("SWFDisplayItem::skewY", "['','ddegrees'=>'float']");
f("SWFDisplayItem::skewYTo", "['','degrees'=>'float']");
f("swf_endbutton", "['']");
f("swf_enddoaction", "['']");
f("swf_endshape", "['']");
f("swf_endsymbol", "['']");
f("SWFFill::moveTo", "['','x'=>'float','y'=>'float']");
f("SWFFill::rotateTo", "['','angle'=>'float']");
f("SWFFill::scaleTo", "['','x'=>'float','y='=>'float']");
f("SWFFill::skewXTo", "['','x'=>'float']");
f("SWFFill::skewYTo", "['','y'=>'float']");
f("SWFFontChar::addChars", "['','char'=>'string']");
f("SWFFontChar::addUTF8Chars", "['','char'=>'string']");
f("SWFFont::__construct", "['SWFFont','filename'=>'string']");
f("SWFFont::getAscent", "['float']");
f("SWFFont::getDescent", "['float']");
f("SWFFont::getLeading", "['float']");
f("SWFFont::getShape", "['string','code'=>'int']");
f("SWFFont::getUTF8Width", "['float','string'=>'string']");
f("SWFFont::getWidth", "['float','string'=>'string']");
f("swf_fontsize", "['','size'=>'float']");
f("swf_fontslant", "['','slant'=>'float']");
f("swf_fonttracking", "['','tracking'=>'float']");
f("swf_getbitmapinfo", "['array','bitmapid'=>'int']");
f("swf_getfontinfo", "['array']");
f("swf_getframe", "['int']");
f("SWFGradient::addEntry", "['','ratio'=>'float','red'=>'int','green'=>'int','blue'=>'int','alpha='=>'int']");
f("SWFGradient::__construct", "['SWFGradient']");
f("swf_labelframe", "['','name'=>'string']");
f("swf_lookat", "['','view_x'=>'float','view_y'=>'float','view_z'=>'float','reference_x'=>'float','reference_y'=>'float','reference_z'=>'float','twist'=>'float']");
f("swf_modifyobject", "['','depth'=>'int','how'=>'int']");
f("SWFMorph::__construct", "['SWFMorph']");
f("SWFMorph::getShape1", "['SWFShape']");
f("SWFMorph::getShape2", "['SWFShape']");
f("SWFMovie::addExport", "['','char'=>'swfcharacter','name'=>'string']");
f("SWFMovie::addFont", "['','font'=>'swffont']");
f("SWFMovie::add", "['','instance'=>'any']");
f("SWFMovie::__construct", "['SWFMovie','version='=>'int']");
f("SWFMovie::importChar", "['SWFSprite','libswf'=>'string','name'=>'string']");
f("SWFMovie::importFont", "['SWFFontChar','libswf'=>'string','name'=>'string']");
f("SWFMovie::labelFrame", "['','label'=>'string']");
f("SWFMovie::nextFrame", "['']");
f("SWFMovie::output", "['int','compression='=>'int']");
f("SWFMovie::remove", "['','instance'=>'any']");
f("SWFMovie::save", "['int','filename'=>'string','compression='=>'int']");
f("SWFMovie::saveToFile", "['int','x'=>'','compression='=>'int']");
f("SWFMovie::setbackground", "['','red'=>'int','green'=>'int','blue'=>'int']");
f("SWFMovie::setDimension", "['','width'=>'float','height'=>'float']");
f("SWFMovie::setFrames", "['','number'=>'int']");
f("SWFMovie::setRate", "['','rate'=>'float']");
f("SWFMovie::startSound", "['SWFSoundInstance','sound'=>'swfsound']");
f("SWFMovie::stopSound", "['','sound'=>'swfsound']");
f("SWFMovie::streamMP3", "['int','mp3file'=>'','skip='=>'float']");
f("SWFMovie::writeExports", "['']");
f("swf_mulcolor", "['','r'=>'float','g'=>'float','b'=>'float','a'=>'float']");
f("swf_nextid", "['int']");
f("swf_oncondition", "['','transition'=>'int']");
f("swf_openfile", "['','filename'=>'string','width'=>'float','height'=>'float','framerate'=>'float','r'=>'float','g'=>'float','b'=>'float']");
f("swf_ortho2", "['','xmin'=>'float','xmax'=>'float','ymin'=>'float','ymax'=>'float']");
f("swf_ortho", "['','xmin'=>'float','xmax'=>'float','ymin'=>'float','ymax'=>'float','zmin'=>'float','zmax'=>'float']");
f("swf_perspective", "['','fovy'=>'float','aspect'=>'float','near'=>'float','far'=>'float']");
f("swf_placeobject", "['','objid'=>'int','depth'=>'int']");
f("swf_polarview", "['','dist'=>'float','azimuth'=>'float','incidence'=>'float','twist'=>'float']");
f("swf_popmatrix", "['']");
f("swf_posround", "['','round'=>'int']");
f("SWFPrebuiltClip::__construct", "['SWFPrebuiltClip','file'=>'']");
f("swf_pushmatrix", "['']");
f("swf_removeobject", "['','depth'=>'int']");
f("swf_rotate", "['','angle'=>'float','axis'=>'string']");
f("swf_scale", "['','x'=>'float','y'=>'float','z'=>'float']");
f("swf_setfont", "['','fontid'=>'int']");
f("swf_setframe", "['','framenumber'=>'int']");
f("SWFShape::addFill", "['SWFFill','red'=>'int','green'=>'int','blue'=>'int','alpha='=>'int','bitmap='=>'swfbitmap','flags='=>'int','gradient='=>'swfgradient']");
f("swf_shapearc", "['','x'=>'float','y'=>'float','r'=>'float','ang1'=>'float','ang2'=>'float']");
f("SWFShape::__construct", "['SWFShape']");
f("swf_shapecurveto3", "['','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float','x3'=>'float','y3'=>'float']");
f("swf_shapecurveto", "['','x1'=>'float','y1'=>'float','x2'=>'float','y2'=>'float']");
f("SWFShape::drawArc", "['','r'=>'float','startangle'=>'float','endangle'=>'float']");
f("SWFShape::drawCircle", "['','r'=>'float']");
f("SWFShape::drawCubic", "['int','bx'=>'float','by'=>'float','cx'=>'float','cy'=>'float','dx'=>'float','dy'=>'float']");
f("SWFShape::drawCubicTo", "['int','bx'=>'float','by'=>'float','cx'=>'float','cy'=>'float','dx'=>'float','dy'=>'float']");
f("SWFShape::drawCurve", "['int','controldx'=>'float','controldy'=>'float','anchordx'=>'float','anchordy'=>'float','targetdx='=>'float','targetdy='=>'float']");
f("SWFShape::drawCurveTo", "['int','controlx'=>'float','controly'=>'float','anchorx'=>'float','anchory'=>'float','targetx='=>'float','targety='=>'float']");
f("SWFShape::drawGlyph", "['','font'=>'swffont','character'=>'string','size='=>'int']");
f("SWFShape::drawLine", "['','dx'=>'float','dy'=>'float']");
f("SWFShape::drawLineTo", "['','x'=>'float','y'=>'float']");
f("swf_shapefillbitmapclip", "['','bitmapid'=>'int']");
f("swf_shapefillbitmaptile", "['','bitmapid'=>'int']");
f("swf_shapefilloff", "['']");
f("swf_shapefillsolid", "['','r'=>'float','g'=>'float','b'=>'float','a'=>'float']");
f("swf_shapelinesolid", "['','r'=>'float','g'=>'float','b'=>'float','a'=>'float','width'=>'float']");
f("swf_shapelineto", "['','x'=>'float','y'=>'float']");
f("SWFShape::movePen", "['','dx'=>'float','dy'=>'float']");
f("SWFShape::movePenTo", "['','x'=>'float','y'=>'float']");
f("swf_shapemoveto", "['','x'=>'float','y'=>'float']");
f("SWFShape::setLeftFill", "['','fill'=>'swfgradient','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("SWFShape::setLine", "['','shape'=>'swfshape','width'=>'int','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("SWFShape::setRightFill", "['','fill'=>'swfgradient','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("swf_showframe", "['']");
f("SWFSound::__construct", "['','filename'=>'string','flags='=>'int']");
f("SWFSoundInstance::loopCount", "['','point'=>'int']");
f("SWFSoundInstance::loopInPoint", "['','point'=>'int']");
f("SWFSoundInstance::loopOutPoint", "['','point'=>'int']");
f("SWFSoundInstance::noMultiple", "['']");
f("SWFSound", "['SWFSound','filename'=>'string','flags='=>'int']");
f("SWFSprite::add", "['','any'=>'any']");
f("SWFSprite::__construct", "['SWFSprite']");
f("SWFSprite::labelFrame", "['','label'=>'string']");
f("SWFSprite::nextFrame", "['']");
f("SWFSprite::remove", "['','any'=>'any']");
f("SWFSprite::setFrames", "['','number'=>'int']");
f("SWFSprite::startSound", "['SWFSoundInstance','sount'=>'swfsound']");
f("SWFSprite::stopSound", "['','sount'=>'swfsound']");
f("swf_startbutton", "['','objid'=>'int','type'=>'int']");
f("swf_startdoaction", "['']");
f("swf_startshape", "['','objid'=>'int']");
f("swf_startsymbol", "['','objid'=>'int']");
f("SWFText::addString", "['','string'=>'string']");
f("SWFText::addUTF8String", "['','text'=>'string']");
f("SWFText::__construct", "['SWFText']");
f("SWFTextField::addChars", "['','chars'=>'string']");
f("SWFTextField::addString", "['','string'=>'string']");
f("SWFTextField::align", "['','alignement'=>'int']");
f("SWFTextField::__construct", "['SWFTextField','flags='=>'int']");
f("SWFTextField::setBounds", "['','width'=>'float','height'=>'float']");
f("SWFTextField::setColor", "['','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("SWFTextField::setFont", "['','font'=>'swffont']");
f("SWFTextField::setHeight", "['','height'=>'float']");
f("SWFTextField::setIndentation", "['','width'=>'float']");
f("SWFTextField::setLeftMargin", "['','width'=>'float']");
f("SWFTextField::setLineSpacing", "['','height'=>'float']");
f("SWFTextField::setMargins", "['','left'=>'float','right'=>'float']");
f("SWFTextField::setName", "['','name'=>'string']");
f("SWFTextField::setPadding", "['','padding'=>'float']");
f("SWFTextField::setRightMargin", "['','width'=>'float']");
f("SWFText::getAscent", "['float']");
f("SWFText::getDescent", "['float']");
f("SWFText::getLeading", "['float']");
f("SWFText::getUTF8Width", "['float','string'=>'string']");
f("SWFText::getWidth", "['float','string'=>'string']");
f("SWFText::moveTo", "['','x'=>'float','y'=>'float']");
f("SWFText::setColor", "['','red'=>'int','green'=>'int','blue'=>'int','a='=>'int']");
f("SWFText::setFont", "['','font'=>'swffont']");
f("SWFText::setHeight", "['','height'=>'float']");
f("SWFText::setSpacing", "['','spacing'=>'float']");
f("swf_textwidth", "['float','str'=>'string']");
f("swf_translate", "['','x'=>'float','y'=>'float','z'=>'float']");
f("SWFVideoStream::__construct", "['SWFVideoStream','file='=>'string']");
f("SWFVideoStream::getNumFrames", "['int']");
f("SWFVideoStream::setDimension", "['','x'=>'int','y'=>'int']");
f("swf_viewport", "['','xmin'=>'float','xmax'=>'float','ymin'=>'float','ymax'=>'float']");
f("Swish::__construct", "['Swish','index_names'=>'string']");
f("Swish::getMetaList", "['array','index_name'=>'string']");
f("Swish::getPropertyList", "['array','index_name'=>'string']");
f("Swish::prepare", "['any','query='=>'string']");
f("Swish::query", "['any','query'=>'string']");
f("SwishResult::getMetaList", "['array']");
f("SwishResults::getParsedWords", "['array','index_name'=>'string']");
f("SwishResults::getRemovedStopwords", "['array','index_name'=>'string']");
f("SwishResults::nextResult", "['any']");
f("SwishResults::seekResult", "['int','position'=>'int']");
f("SwishResult::stem", "['array','word'=>'string']");
f("SwishSearch::execute", "['any','query='=>'string']");
f("SwishSearch::resetLimit", "['']");
f("SwishSearch::setLimit", "['','property'=>'string','low'=>'string','high'=>'string']");
f("SwishSearch::setPhraseDelimiter", "['','delimiter'=>'string']");
f("SwishSearch::setSort", "['','sort'=>'string']");
f("SwishSearch::setStructure", "['','structure'=>'int']");
f("sybase_affected_rows", "['int','link_identifier='=>'']");
f("sybase_close", "['bool','link_identifier='=>'']");
f("sybase_connect", "['resource','servername='=>'string','username='=>'string','password='=>'string','charset='=>'string','appname='=>'string','new='=>'bool']");
f("sybase_data_seek", "['bool','result_identifier'=>'','row_number'=>'int']");
f("sybase_deadlock_retry_count", "['','retry_count'=>'int']");
f("sybase_fetch_array", "['array','result'=>'']");
f("sybase_fetch_assoc", "['array','result'=>'']");
f("sybase_fetch_field", "['any','result'=>'','field_offset='=>'int']");
f("sybase_fetch_object", "['any','result'=>'','object='=>'']");
f("sybase_fetch_row", "['array','result'=>'']");
f("sybase_field_seek", "['bool','result'=>'','field_offset'=>'int']");
f("sybase_free_result", "['bool','result'=>'']");
f("sybase_get_last_message", "['string']");
f("sybase_min_client_severity", "['','severity'=>'int']");
f("sybase_min_error_severity", "['','severity'=>'int']");
f("sybase_min_message_severity", "['','severity'=>'int']");
f("sybase_min_server_severity", "['','severity'=>'int']");
f("sybase_num_fields", "['int','result'=>'']");
f("sybase_num_rows", "['int','result'=>'']");
f("sybase_pconnect", "['resource','servername='=>'string','username='=>'string','password='=>'string','charset='=>'string','appname='=>'string']");
f("sybase_query", "['','query'=>'string','link_identifier='=>'']");
f("sybase_result", "['string','result'=>'','row'=>'int','field'=>'']");
f("sybase_select_db", "['bool','database_name'=>'string','link_identifier='=>'']");
f("sybase_set_message_handler", "['bool','handler'=>'callable','connection='=>'']");
f("sybase_unbuffered_query", "['resource','query'=>'string','link_identifier'=>'','store_result='=>'bool']");
f("symlink", "['bool','target'=>'string','link'=>'string']");
f("SyncEvent::__construct", "['','name='=>'string','manual='=>'bool']");
f("SyncEvent::fire", "['bool']");
f("SyncEvent::reset", "['bool']");
f("SyncEvent::wait", "['bool','wait='=>'int']");
f("SyncMutex::__construct", "['','name='=>'string']");
f("SyncMutex::lock", "['bool','wait='=>'int']");
f("SyncMutex::unlock", "['bool','all='=>'bool']");
f("SyncReaderWriter::__construct", "['','name='=>'string','autounlock='=>'bool']");
f("SyncReaderWriter::readlock", "['bool','wait='=>'int']");
f("SyncReaderWriter::readunlock", "['bool']");
f("SyncReaderWriter::writelock", "['bool','wait='=>'int']");
f("SyncReaderWriter::writeunlock", "['bool']");
f("SyncSemaphore::__construct", "['','name='=>'string','initialval='=>'int','autounlock='=>'bool']");
f("SyncSemaphore::lock", "['bool','wait='=>'int']");
f("SyncSemaphore::unlock", "['bool','&prevcount='=>'int']");
f("sys_getloadavg", "['array']");
f("sys_get_temp_dir", "['string']");
f("syslog", "['bool','priority'=>'int','message'=>'string']");
f("system", "['string','command'=>'string','&return_value='=>'int']");
f("taint", "['bool','&string'=>'string','...='=>'string']");
f("tan", "['float','number'=>'float']");
f("tanh", "['float','number'=>'float']");
f("tcpwrap_check", "['bool','daemon'=>'string','address'=>'string','user='=>'string','nodns='=>'bool']");
f("tempnam", "['string','dir'=>'string','prefix'=>'string']");
f("textdomain", "['string','domain'=>'string']");
f("Thread::detach", "['void']");
f("Threaded::chunk", "['array','size'=>'int','preserve'=>'bool']");
f("Threaded::count", "['int']");
f("Threaded::extend", "['bool','class'=>'string']");
f("Threaded::from", "['Threaded','run'=>'Closure','construct='=>'Closure','args='=>'array']");
f("Threaded::getTerminationInfo", "['array']");
f("Threaded::isRunning", "['bool']");
f("Threaded::isTerminated", "['bool']");
f("Threaded::isWaiting", "['bool']");
f("Threaded::lock", "['bool']");
f("Threaded::merge", "['bool','from'=>'mixed','overwrite='=>'bool']");
f("Threaded::notify", "['bool']");
f("Threaded::pop", "['bool']");
f("Threaded::run", "['void']");
f("Threaded::shift", "['mixed']");
f("Threaded::synchronized", "['mixed','block'=>'Closure','...='=>'mixed']");
f("Threaded::unlock", "['bool']");
f("Threaded::wait", "['bool','timeout='=>'int']");
f("Thread::getCreatorId", "['int']");
f("Thread::getCurrentThreadId", "['int']");
f("Thread::getCurrentThread", "['Thread']");
f("Thread::getThreadId", "['int']");
f("Thread::globally", "['mixed']");
f("Thread::isJoined", "['bool']");
f("Thread::isStarted", "['bool']");
f("Thread::join", "['bool']");
f("Thread::kill", "['void']");
f("Thread::start", "['bool','options='=>'int']");
f("Throwable::getCode", "['int']");
f("Throwable::getFile", "['string']");
f("Throwable::getLine", "['int']");
f("Throwable::getMessage", "['string']");
f("Throwable::getPrevious", "['Throwable']");
f("Throwable::getTrace", "['array']");
f("Throwable::getTraceAsString", "['string']");
f("Throwable::__toString", "['string']");
f("tidy_access_count", "['int','obj'=>'tidy']");
f("tidy::body", "['tidyNode']");
f("tidy::cleanRepair", "['bool']");
f("tidy_clean_repair", "['bool','obj'=>'tidy']");
f("tidy_config_count", "['int','obj'=>'tidy']");
f("tidy::__construct", "['tidy','filename='=>'string','config='=>'','encoding='=>'string','use_include_path='=>'bool']");
f("tidy::diagnose", "['bool']");
f("tidy_diagnose", "['bool','obj'=>'tidy']");
f("tidy_error_count", "['int','obj'=>'tidy']");
f("tidy_get_body", "['tidyNode','obj'=>'tidy']");
f("tidy::getConfig", "['array']");
f("tidy_get_config", "['array','obj'=>'tidy']");
f("tidy_get_error_buffer", "['string','obj'=>'tidy']");
f("tidy_get_head", "['tidyNode','obj'=>'tidy']");
f("tidy_get_html", "['tidyNode','obj'=>'tidy']");
f("tidy::getHtmlVer", "['int']");
f("tidy_get_html_ver", "['int','obj'=>'tidy']");
f("tidy_get_opt_doc", "['string','obj'=>'tidy','optname'=>'string']");
f("tidy::getoptdoc", "['string','optname'=>'string']");
f("tidy::getOptDoc", "['string','optname'=>'string']");
f("tidy::getOpt", "['','option'=>'string']");
f("tidy_getopt", "['','option'=>'string','obj'=>'tidy']");
f("tidy_get_output", "['string','obj'=>'tidy']");
f("tidy_get_release", "['string']");
f("tidy::getRelease", "['string']");
f("tidy_get_root", "['tidyNode','obj'=>'tidy']");
f("tidy::getStatus", "['int']");
f("tidy_get_status", "['int','obj'=>'tidy']");
f("tidy::head", "['tidyNode']");
f("tidy::html", "['tidyNode']");
f("tidy::htmlver", "['int']");
f("tidy::isXhtml", "['bool']");
f("tidy_is_xhtml", "['bool','obj'=>'tidy']");
f("tidy::isXml", "['bool']");
f("tidy_is_xml", "['bool','obj'=>'tidy']");
f("tidy_load_config", "['','filename'=>'string','encoding'=>'string']");
f("tidyNode::__construct", "['tifyNode']");
f("tidyNode::getParent", "['tidyNode']");
f("tidyNode::hasChildren", "['bool']");
f("tidyNode::hasSiblings", "['bool']");
f("tidyNode::isAsp", "['bool']");
f("tidyNode::isComment", "['bool']");
f("tidyNode::isHtml", "['bool']");
f("tidyNode::isJste", "['bool']");
f("tidyNode::isPhp", "['bool']");
f("tidyNode::isText", "['bool']");
f("tidy_parse_file", "['tidy','file'=>'string','config_options='=>'','encoding='=>'string','use_include_path='=>'bool']");
f("tidy::parseFile", "['bool','filename'=>'string','config='=>'','encoding='=>'string','use_include_path='=>'bool']");
f("tidy_parse_string", "['tidy','input'=>'string','config_options='=>'','encoding='=>'string']");
f("tidy::parseString", "['bool','input'=>'string','config='=>'','encoding='=>'string']");
f("tidy_repair_file", "['string','filename'=>'string','config_file='=>'','encoding='=>'string','use_include_path='=>'bool']");
f("tidy::repairFile", "['string','filename'=>'string','config='=>'','encoding='=>'string','use_include_path='=>'bool']");
f("tidy_repair_string", "['string','data'=>'string','config_file='=>'','encoding='=>'string']");
f("tidy::repairString", "['string','data'=>'string','config='=>'','encoding='=>'string']");
f("tidy_reset_config", "['bool']");
f("tidy::root", "['tidyNode']");
f("tidy_save_config", "['bool','filename'=>'string']");
f("tidy_set_encoding", "['bool','encoding'=>'string']");
f("tidy_setopt", "['bool','option'=>'string','value'=>'']");
f("tidy_warning_count", "['int','obj'=>'tidy']");
f("time", "['int']");
f("time_nanosleep", "['array|bool','seconds'=>'int','nanoseconds'=>'int']");
f("time_sleep_until", "['bool','timestamp'=>'float']");
f("timezone_abbreviations_list", "['array']");
f("timezone_identifiers_list", "['array','what'=>'int','country'=>'string']");
f("timezone_location_get", "['array|bool','any'=>'DateTimeZone']");
f("timezone_name_from_abbr", "['string|false','abbr'=>'string','gmtoffset='=>'int','isdst='=>'int']");
f("timezone_name_get", "['string','any'=>'DateTimeZone']");
f("timezone_offset_get", "['int','any'=>'DateTimeZone','datetime'=>'DateTime']");
f("timezone_open", "['DateTimeZone','timezone'=>'string']");
f("timezone_transitions_get", "['array|false','any'=>'DateTimeZone','timestamp_begin'=>'int','timestamp_end'=>'int']");
f("timezone_version_get", "['string']");
f("tmpfile", "['resource']");
f("token_get_all", "['array','source'=>'string']");
f("token_name", "['string','type'=>'int']");
f("TokyoTyrant::add", "['number','key'=>'string','increment'=>'float','type='=>'int']");
f("TokyoTyrant::connect", "['TokyoTyrant','host'=>'string','port='=>'int','options='=>'array']");
f("TokyoTyrant::connectUri", "['TokyoTyrant','uri'=>'string']");
f("TokyoTyrant::__construct", "['','host='=>'string','port='=>'int','options='=>'array']");
f("TokyoTyrant::copy", "['TokyoTyrant','path'=>'string']");
f("TokyoTyrant::ext", "['string','name'=>'string','options'=>'int','key'=>'string','value'=>'string']");
f("TokyoTyrant::fwmKeys", "['array','prefix'=>'string','max_recs'=>'int']");
f("TokyoTyrant::get", "['array','keys'=>'']");
f("TokyoTyrant::getIterator", "['TokyoTyrantIterator']");
f("TokyoTyrantIterator::__construct", "['','any'=>'mixed']");
f("TokyoTyrantIterator::current", "['mixed']");
f("TokyoTyrantIterator::key", "['mixed']");
f("TokyoTyrantIterator::next", "['mixed']");
f("TokyoTyrantIterator::rewind", "['void']");
f("TokyoTyrantIterator::valid", "['bool']");
f("TokyoTyrant::num", "['int']");
f("TokyoTyrant::out", "['string','keys'=>'']");
f("TokyoTyrant::putCat", "['TokyoTyrant','keys'=>'','value='=>'string']");
f("TokyoTyrant::putKeep", "['TokyoTyrant','keys'=>'','value='=>'string']");
f("TokyoTyrant::putNr", "['TokyoTyrant','keys'=>'','value='=>'string']");
f("TokyoTyrant::putShl", "['','key'=>'string','value'=>'string','width'=>'int']");
f("TokyoTyrant::put", "['TokyoTyrant','keys'=>'','value='=>'string']");
f("TokyoTyrantQuery::addCond", "['','name'=>'string','op'=>'int','expr'=>'string']");
f("TokyoTyrantQuery::__construct", "['','table'=>'TokyoTyrantTable']");
f("TokyoTyrantQuery::count", "['int']");
f("TokyoTyrantQuery::current", "['array']");
f("TokyoTyrantQuery::hint", "['string']");
f("TokyoTyrantQuery::key", "['string']");
f("TokyoTyrantQuery::metaSearch", "['array','queries'=>'array','type'=>'int']");
f("TokyoTyrantQuery::next", "['array']");
f("TokyoTyrantQuery::out", "['TokyoTyrantQuery']");
f("TokyoTyrantQuery::rewind", "['bool']");
f("TokyoTyrantQuery::search", "['array']");
f("TokyoTyrantQuery::setLimit", "['','max='=>'int','skip='=>'int']");
f("TokyoTyrantQuery::setOrder", "['','name'=>'string','type'=>'int']");
f("TokyoTyrantQuery::valid", "['bool']");
f("TokyoTyrant::restore", "['','log_dir'=>'string','timestamp'=>'int','check_consistency='=>'bool']");
f("TokyoTyrant::setMaster", "['','host'=>'string','port'=>'int','timestamp'=>'int','check_consistency='=>'bool']");
f("TokyoTyrant::size", "['int','key'=>'string']");
f("TokyoTyrant::stat", "['array']");
f("TokyoTyrant::sync", "['']");
f("TokyoTyrantTable::add", "['','key'=>'string','increment'=>'','type='=>'string']");
f("TokyoTyrantTable::genUid", "['int']");
f("TokyoTyrantTable::getIterator", "['TokyoTyrantIterator']");
f("TokyoTyrantTable::get", "['','keys'=>'']");
f("TokyoTyrantTable::getQuery", "['TokyoTyrantQuery']");
f("TokyoTyrantTable::out", "['','keys'=>'']");
f("TokyoTyrantTable::putCat", "['','key'=>'string','columns'=>'array']");
f("TokyoTyrantTable::put", "['int','key'=>'string','columns'=>'array']");
f("TokyoTyrantTable::putKeep", "['','key'=>'string','columns'=>'array']");
f("TokyoTyrantTable::putNr", "['','keys'=>'','value='=>'string']");
f("TokyoTyrantTable::putShl", "['','key'=>'string','value'=>'string','width'=>'int']");
f("TokyoTyrantTable::setIndex", "['','column'=>'string','type'=>'int']");
f("TokyoTyrant::tune", "['TokyoTyrant','timeout'=>'float','options='=>'int']");
f("TokyoTyrant::vanish", "['']");
f("touch", "['bool','filename'=>'string','time='=>'int','atime='=>'int']");
f("trader_acos", "['array','real'=>'array']");
f("trader_ad", "['array','high'=>'array','low'=>'array','close'=>'array','volume'=>'array']");
f("trader_add", "['array','real0'=>'array','real1'=>'array']");
f("trader_adosc", "['array','high'=>'array','low'=>'array','close'=>'array','volume'=>'array','fastPeriod='=>'int','slowPeriod='=>'int']");
f("trader_adx", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_adxr", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_apo", "['array','real'=>'array','fastPeriod='=>'int','slowPeriod='=>'int','mAType='=>'int']");
f("trader_aroon", "['array','high'=>'array','low'=>'array','timePeriod='=>'int']");
f("trader_aroonosc", "['array','high'=>'array','low'=>'array','timePeriod='=>'int']");
f("trader_asin", "['array','real'=>'array']");
f("trader_atan", "['array','real'=>'array']");
f("trader_atr", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_avgprice", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_bbands", "['array','real'=>'array','timePeriod='=>'int','nbDevUp='=>'float','nbDevDn='=>'float','mAType='=>'int']");
f("trader_beta", "['array','real0'=>'array','real1'=>'array','timePeriod='=>'int']");
f("trader_bop", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cci", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_cdl2crows", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdl3blackcrows", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdl3inside", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdl3linestrike", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdl3outside", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdl3starsinsouth", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdl3whitesoldiers", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlabandonedbaby", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdladvanceblock", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlbelthold", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlbreakaway", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlclosingmarubozu", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlconcealbabyswall", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlcounterattack", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdldarkcloudcover", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdldoji", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdldojistar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdldragonflydoji", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlengulfing", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdleveningdojistar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdleveningstar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdlgapsidesidewhite", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlgravestonedoji", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlhammer", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlhangingman", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlharami", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlharamicross", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlhighwave", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlhikkake", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlhikkakemod", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlhomingpigeon", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlidentical3crows", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlinneck", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlinvertedhammer", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlkicking", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlkickingbylength", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlladderbottom", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdllongleggeddoji", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdllongline", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlmarubozu", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlmatchinglow", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlmathold", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdlmorningdojistar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdlmorningstar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array','penetration='=>'float']");
f("trader_cdlonneck", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlpiercing", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlrickshawman", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlrisefall3methods", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlseparatinglines", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlshootingstar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlshortline", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlspinningtop", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlstalledpattern", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlsticksandwich", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdltakuri", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdltasukigap", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlthrusting", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdltristar", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlunique3river", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlupsidegap2crows", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_cdlxsidegap3methods", "['array','open'=>'array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_ceil", "['array','real'=>'array']");
f("trader_cmo", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_correl", "['array','real0'=>'array','real1'=>'array','timePeriod='=>'int']");
f("trader_cos", "['array','real'=>'array']");
f("trader_cosh", "['array','real'=>'array']");
f("trader_dema", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_div", "['array','real0'=>'array','real1'=>'array']");
f("trader_dx", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_ema", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_errno", "['int']");
f("trader_exp", "['array','real'=>'array']");
f("trader_floor", "['array','real'=>'array']");
f("trader_get_compat", "['int']");
f("trader_get_unstable_period", "['int','functionId'=>'int']");
f("trader_ht_dcperiod", "['array','real'=>'array']");
f("trader_ht_dcphase", "['array','real'=>'array']");
f("trader_ht_phasor", "['array','real'=>'array']");
f("trader_ht_sine", "['array','real'=>'array']");
f("trader_ht_trendline", "['array','real'=>'array']");
f("trader_ht_trendmode", "['array','real'=>'array']");
f("trader_kama", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_linearreg_angle", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_linearreg", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_linearreg_intercept", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_linearreg_slope", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_ln", "['array','real'=>'array']");
f("trader_log10", "['array','real'=>'array']");
f("trader_ma", "['array','real'=>'array','timePeriod='=>'int','mAType='=>'int']");
f("trader_macd", "['array','real'=>'array','fastPeriod='=>'int','slowPeriod='=>'int','signalPeriod='=>'int']");
f("trader_macdext", "['array','real'=>'array','fastPeriod='=>'int','fastMAType='=>'int','slowPeriod='=>'int','slowMAType='=>'int','signalPeriod='=>'int','signalMAType='=>'int']");
f("trader_macdfix", "['array','real'=>'array','signalPeriod='=>'int']");
f("trader_mama", "['array','real'=>'array','fastLimit='=>'float','slowLimit='=>'float']");
f("trader_mavp", "['array','real'=>'array','periods'=>'array','minPeriod='=>'int','maxPeriod='=>'int','mAType='=>'int']");
f("trader_max", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_maxindex", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_medprice", "['array','high'=>'array','low'=>'array']");
f("trader_mfi", "['array','high'=>'array','low'=>'array','close'=>'array','volume'=>'array','timePeriod='=>'int']");
f("trader_midpoint", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_midprice", "['array','high'=>'array','low'=>'array','timePeriod='=>'int']");
f("trader_min", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_minindex", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_minmax", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_minmaxindex", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_minus_di", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_minus_dm", "['array','high'=>'array','low'=>'array','timePeriod='=>'int']");
f("trader_mom", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_mult", "['array','real0'=>'array','real1'=>'array']");
f("trader_natr", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_obv", "['array','real'=>'array','volume'=>'array']");
f("trader_plus_di", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_plus_dm", "['array','high'=>'array','low'=>'array','timePeriod='=>'int']");
f("trader_ppo", "['array','real'=>'array','fastPeriod='=>'int','slowPeriod='=>'int','mAType='=>'int']");
f("trader_roc", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_rocp", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_rocr100", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_rocr", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_rsi", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_sar", "['array','high'=>'array','low'=>'array','acceleration='=>'float','maximum='=>'float']");
f("trader_sarext", "['array','high'=>'array','low'=>'array','startValue='=>'float','offsetOnReverse='=>'float','accelerationInitLong='=>'float','accelerationLong='=>'float','accelerationMaxLong='=>'float','accelerationInitShort='=>'float','accelerationShort='=>'float','accelerationMaxShort='=>'float']");
f("trader_set_compat", "['void','compatId'=>'int']");
f("trader_set_unstable_period", "['void','functionId'=>'int','timePeriod'=>'int']");
f("trader_sin", "['array','real'=>'array']");
f("trader_sinh", "['array','real'=>'array']");
f("trader_sma", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_sqrt", "['array','real'=>'array']");
f("trader_stddev", "['array','real'=>'array','timePeriod='=>'int','nbDev='=>'float']");
f("trader_stoch", "['array','high'=>'array','low'=>'array','close'=>'array','fastK_Period='=>'int','slowK_Period='=>'int','slowK_MAType='=>'int','slowD_Period='=>'int','slowD_MAType='=>'int']");
f("trader_stochf", "['array','high'=>'array','low'=>'array','close'=>'array','fastK_Period='=>'int','fastD_Period='=>'int','fastD_MAType='=>'int']");
f("trader_stochrsi", "['array','real'=>'array','timePeriod='=>'int','fastK_Period='=>'int','fastD_Period='=>'int','fastD_MAType='=>'int']");
f("trader_sub", "['array','real0'=>'array','real1'=>'array']");
f("trader_sum", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_t3", "['array','real'=>'array','timePeriod='=>'int','vFactor='=>'float']");
f("trader_tan", "['array','real'=>'array']");
f("trader_tanh", "['array','real'=>'array']");
f("trader_tema", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_trange", "['array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_trima", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_trix", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_tsf", "['array','real'=>'array','timePeriod='=>'int']");
f("trader_typprice", "['array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_ultosc", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod1='=>'int','timePeriod2='=>'int','timePeriod3='=>'int']");
f("trader_var", "['array','real'=>'array','timePeriod='=>'int','nbDev='=>'float']");
f("trader_wclprice", "['array','high'=>'array','low'=>'array','close'=>'array']");
f("trader_willr", "['array','high'=>'array','low'=>'array','close'=>'array','timePeriod='=>'int']");
f("trader_wma", "['array','real'=>'array','timePeriod='=>'int']");
f("trait_exists", "['bool','traitname'=>'string','autoload='=>'bool']");
f("transliterator_create_from_rules", "['Transliterator|null','rules'=>'string','direction='=>'int']");
f("Transliterator::createFromRules", "['Transliterator|null','rules'=>'string','direction='=>'int']");
f("Transliterator::createInverse", "['Transliterator']");
f("transliterator_create_inverse", "['Transliterator','obj'=>'Transliterator']");
f("transliterator_create", "['Transliterator|null','id'=>'string','direction='=>'int']");
f("Transliterator::create", "['Transliterator|null','id'=>'string','direction='=>'int']");
f("Transliterator::getErrorCode", "['int']");
f("transliterator_get_error_code", "['int','obj'=>'Transliterator']");
f("Transliterator::getErrorMessage", "['string']");
f("transliterator_get_error_message", "['string','obj'=>'Transliterator']");
f("transliterator_list_ids", "['array']");
f("Transliterator::listIDs", "['array']");
f("transliterator_transliterate", "['','obj'=>'Transliterator','subject'=>'string','start='=>'int','end='=>'int']");
f("Transliterator::transliterate", "['','subject'=>'string','start='=>'int','end='=>'int']");
f("trigger_error", "['bool','message'=>'string','error_type='=>'int']");
f("trim", "['string','str'=>'string','character_mask='=>'string']");
f("TypeError::__clone", "['TypeError']");
f("TypeError::__construct", "['TypeError','message='=>'string','code='=>'int','previous='=>'Throwable|TypeError']");
f("TypeError::getCode", "['int']");
f("TypeError::getFile", "['string']");
f("TypeError::getLine", "['int']");
f("TypeError::getMessage", "['string']");
f("TypeError::getPrevious", "['Throwable|TypeError']");
f("TypeError::getTrace", "['array']");
f("TypeError::getTraceAsString", "['string']");
f("TypeError::__toString", "['string']");
f("uasort", "['bool','array_arg'=>'array','cmp_function'=>'callable']");
f("ucfirst", "['string','str'=>'string']");
f("UConverter::__construct", "['UConverter','destination_encoding'=>'string','source_encoding='=>'string']");
f("UConverter::convert", "['string','str'=>'string','reverse='=>'bool']");
f("UConverter::fromUCallback", "['mixed','reason'=>'int','source'=>'string','codePoint'=>'string','&error'=>'int']");
f("UConverter::getAliases", "['array','name='=>'string']");
f("UConverter::getAvailable", "['array']");
f("UConverter::getDestinationEncoding", "['string']");
f("UConverter::getDestinationType", "['int']");
f("UConverter::getErrorCode", "['int']");
f("UConverter::getErrorMessage", "['string']");
f("UConverter::getSourceEncoding", "['string']");
f("UConverter::getSourceType", "['int']");
f("UConverter::getStandards", "['array']");
f("UConverter::getSubstChars", "['string']");
f("UConverter::reasonText", "['string','reason='=>'int']");
f("UConverter::setDestinationEncoding", "['bool','encoding'=>'string']");
f("UConverter::setSourceEncoding", "['bool','encoding'=>'string']");
f("UConverter::setSubstChars", "['bool','chars'=>'string']");
f("UConverter::toUCallback", "['mixed','reason'=>'int','source'=>'string','codeUnits'=>'string','&error'=>'int']");
f("UConverter::transcode", "['string','str'=>'string','toEncoding'=>'string','fromEncoding'=>'string','options='=>'array']");
f("ucwords", "['string','str'=>'string','delims='=>'string']");
f("udm_add_search_limit", "['bool','agent'=>'','var'=>'int','val'=>'string']");
f("udm_alloc_agent_array", "['resource','databases'=>'array']");
f("udm_alloc_agent", "['resource','dbaddr'=>'string','dbmode='=>'string']");
f("udm_api_version", "['int']");
f("udm_cat_list", "['array','agent'=>'','category'=>'string']");
f("udm_cat_path", "['array','agent'=>'','category'=>'string']");
f("udm_check_charset", "['bool','agent'=>'','charset'=>'string']");
f("udm_check_stored", "['int','agent'=>'','link'=>'int','doc_id'=>'string']");
f("udm_clear_search_limits", "['bool','agent'=>'']");
f("udm_close_stored", "['int','agent'=>'','link'=>'int']");
f("udm_crc32", "['int','agent'=>'','str'=>'string']");
f("udm_errno", "['int','agent'=>'']");
f("udm_error", "['string','agent'=>'']");
f("udm_find", "['resource','agent'=>'','query'=>'string']");
f("udm_free_agent", "['int','agent'=>'']");
f("udm_free_ispell_data", "['bool','agent'=>'int']");
f("udm_free_res", "['bool','res'=>'']");
f("udm_get_doc_count", "['int','agent'=>'']");
f("udm_get_res_field", "['string','res'=>'','row'=>'int','field'=>'int']");
f("udm_get_res_param", "['string','res'=>'','param'=>'int']");
f("udm_hash32", "['int','agent'=>'','str'=>'string']");
f("udm_load_ispell_data", "['bool','agent'=>'','var'=>'int','val1'=>'string','val2'=>'string','flag'=>'int']");
f("udm_open_stored", "['int','agent'=>'','storedaddr'=>'string']");
f("udm_set_agent_param", "['bool','agent'=>'','var'=>'int','val'=>'string']");
f("uksort", "['bool','array_arg'=>'array','cmp_function'=>'callable']");
f("umask", "['int','mask='=>'int']");
f("UnderflowException::__clone", "['Throwable|UnderflowException']");
f("UnderflowException::__construct", "['UnderflowException','message='=>'string','code='=>'int','previous='=>'Throwable|UnderflowException|null']");
f("UnderflowException::getCode", "['int']");
f("UnderflowException::getFile", "['string']");
f("UnderflowException::getLine", "['int']");
f("UnderflowException::getMessage", "['string']");
f("UnderflowException::getPrevious", "['Throwable|UnderflowException']");
f("UnderflowException::getTrace", "['array']");
f("UnderflowException::getTraceAsString", "['string']");
f("UnderflowException::__toString", "['string']");
f("UnexpectedValueException::__clone", "['Throwable|UnexpectedValueException']");
f("UnexpectedValueException::__construct", "['UnexpectedValueException','message='=>'string','code='=>'int','previous='=>'Throwable|UnexpectedValueException|null']");
f("UnexpectedValueException::getCode", "['int']");
f("UnexpectedValueException::getFile", "['string']");
f("UnexpectedValueException::getLine", "['int']");
f("UnexpectedValueException::getMessage", "['string']");
f("UnexpectedValueException::getPrevious", "['Throwable|UnexpectedValueException']");
f("UnexpectedValueException::getTrace", "['array']");
f("UnexpectedValueException::getTraceAsString", "['string']");
f("UnexpectedValueException::__toString", "['string']");
f("uniqid", "['string','prefix='=>'string','more_entropy='=>'bool']");
f("unixtojd", "['int','timestamp='=>'int']");
f("unlink", "['bool','filename'=>'string','context='=>'resource']");
f("unpack", "['array','format'=>'string','data'=>'string']");
f("unregister_tick_function", "['','function_name'=>'string']");
f("unserialize", "['','variable_representation'=>'string','allowed_classes='=>'array']");
f("unset", "['','var='=>'','...='=>'']");
f("untaint", "['bool','&string'=>'string','...='=>'string']");
f("uopz_backup", "['void','class'=>'string','function'=>'string']");
f("uopz_backup", "['void','function'=>'string']");
f("uopz_compose", "['void','name'=>'string','classes'=>'array','methods='=>'array','properties='=>'array','flags='=>'int']");
f("uopz_copy", "['Closure','class'=>'string','function'=>'string']");
f("uopz_copy", "['Closure','function'=>'string']");
f("uopz_delete", "['void','class'=>'string','function'=>'string']");
f("uopz_delete", "['void','function'=>'string']");
f("uopz_extend", "['void','class'=>'string','parent'=>'string']");
f("uopz_flags", "['int','class'=>'string','function'=>'string','flags'=>'int']");
f("uopz_flags", "['int','function'=>'string','flags'=>'int']");
f("uopz_function", "['void','class'=>'string','function'=>'string','handler'=>'Closure','modifiers='=>'int']");
f("uopz_function", "['void','function'=>'string','handler'=>'Closure','modifiers='=>'int']");
f("uopz_implement", "['void','class'=>'string','interface'=>'string']");
f("uopz_overload", "['void','opcode'=>'int','callable'=>'Callable']");
f("uopz_redefine", "['void','class'=>'string','constant'=>'string','value'=>'mixed']");
f("uopz_redefine", "['void','constant'=>'string','value'=>'mixed']");
f("uopz_rename", "['void','class'=>'string','function'=>'string','rename'=>'string']");
f("uopz_rename", "['void','function'=>'string','rename'=>'string']");
f("uopz_restore", "['void','class'=>'string','function'=>'string']");
f("uopz_restore", "['void','function'=>'string']");
f("uopz_undefine", "['void','class'=>'string','constant'=>'string']");
f("uopz_undefine", "['void','constant'=>'string']");
f("urldecode", "['string','str'=>'string']");
f("urlencode", "['string','str'=>'string']");
f("use_soap_error_handler", "['bool','handler='=>'bool']");
f("usleep", "['','micro_seconds'=>'int']");
f("usort", "['bool','array_arg'=>'array','cmp_function'=>'callable']");
f("utf8_decode", "['string','data'=>'string']");
f("utf8_encode", "['string','data'=>'string']");
f("V8Js::__construct", "['','object_name='=>'string','variables='=>'array','extensions='=>'array','report_uncaught_exceptions='=>'bool']");
f("V8JsException::getJsFileName", "['string']");
f("V8JsException::getJsLineNumber", "['int']");
f("V8JsException::getJsSourceLine", "['int']");
f("V8JsException::getJsTrace", "['string']");
f("V8Js::executeString", "['','script'=>'string','identifier='=>'string','flags='=>'int']");
f("V8Js::getExtensions", "['array']");
f("V8Js::getPendingException", "['V8JsException']");
f("V8Js::registerExtension", "['bool','extension_name'=>'string','script'=>'string','dependencies='=>'array','auto_enable='=>'bool']");
f("var_dump", "['','var'=>'','...='=>'']");
f("var_export", "['','var'=>'','return='=>'bool']");
f("variant_abs", "['','left'=>'']");
f("variant_add", "['','left'=>'','right'=>'']");
f("variant_and", "['','left'=>'','right'=>'']");
f("variant_cast", "['any','variant'=>'any','type'=>'int']");
f("variant_cat", "['','left'=>'','right'=>'']");
f("variant_cmp", "['int','left'=>'','right'=>'','lcid='=>'int','flags='=>'int']");
f("VARIANT::__construct", "['','value='=>'mixed','type='=>'int','codepage='=>'int']");
f("variant_date_from_timestamp", "['any','timestamp'=>'int']");
f("variant_date_to_timestamp", "['int','variant'=>'any']");
f("variant_div", "['','left'=>'','right'=>'']");
f("variant_eqv", "['','left'=>'','right'=>'']");
f("variant_fix", "['','left'=>'']");
f("variant_get_type", "['int','variant'=>'any']");
f("variant_idiv", "['','left'=>'','right'=>'']");
f("variant_imp", "['','left'=>'','right'=>'']");
f("variant_int", "['','left'=>'']");
f("variant_mod", "['','left'=>'','right'=>'']");
f("variant_mul", "['','left'=>'','right'=>'']");
f("variant_neg", "['','left'=>'']");
f("variant_not", "['','left'=>'']");
f("variant_or", "['','left'=>'','right'=>'']");
f("variant_pow", "['','left'=>'','right'=>'']");
f("variant_round", "['','left'=>'','decimals'=>'int']");
f("variant_set_type", "['','variant'=>'any','type'=>'int']");
f("variant_set", "['','variant'=>'any','value'=>'']");
f("variant_sub", "['','left'=>'','right'=>'']");
f("variant_xor", "['','left'=>'','right'=>'']");
f("VarnishAdmin::auth", "['bool']");
f("VarnishAdmin::ban", "['int','vcl_regex'=>'string']");
f("VarnishAdmin::banUrl", "['int','vcl_regex'=>'string']");
f("VarnishAdmin::clearPanic", "['int']");
f("VarnishAdmin::connect", "['bool']");
f("VarnishAdmin::__construct", "['','args='=>'array']");
f("VarnishAdmin::disconnect", "['bool']");
f("VarnishAdmin::getPanic", "['string']");
f("VarnishAdmin::getParams", "['array']");
f("VarnishAdmin::isRunning", "['bool']");
f("VarnishAdmin::setCompat", "['void','compat'=>'int']");
f("VarnishAdmin::setHost", "['void','host'=>'string']");
f("VarnishAdmin::setIdent", "['void','ident'=>'string']");
f("VarnishAdmin::setParam", "['int','name'=>'string','value'=>'string|int']");
f("VarnishAdmin::setPort", "['void','port'=>'int']");
f("VarnishAdmin::setSecret", "['void','secret'=>'string']");
f("VarnishAdmin::setTimeout", "['void','timeout'=>'int']");
f("VarnishAdmin::start", "['int']");
f("VarnishAdmin::stop", "['int']");
f("VarnishLog::__construct", "['','args='=>'array']");
f("VarnishLog::getLine", "['array']");
f("VarnishLog::getTagName", "['string','index'=>'int']");
f("VarnishStat::__construct", "['','args='=>'array']");
f("VarnishStat::getSnapshot", "['array']");
f("version_compare", "['int|null','ver1'=>'string','ver2'=>'string','oper='=>'string']");
f("vfprintf", "['int','stream'=>'','format'=>'string','args'=>'array']");
f("virtual", "['bool','uri'=>'string']");
f("vpopmail_add_alias_domain", "['bool','domain'=>'string','aliasdomain'=>'string']");
f("vpopmail_add_alias_domain_ex", "['bool','olddomain'=>'string','newdomain'=>'string']");
f("vpopmail_add_domain", "['bool','domain'=>'string','dir'=>'string','uid'=>'int','gid'=>'int']");
f("vpopmail_add_domain_ex", "['bool','domain'=>'string','passwd'=>'string','quota='=>'string','bounce='=>'string','apop='=>'bool']");
f("vpopmail_add_user", "['bool','user'=>'string','domain'=>'string','password'=>'string','gecos='=>'string','apop='=>'bool']");
f("vpopmail_alias_add", "['bool','user'=>'string','domain'=>'string','alias'=>'string']");
f("vpopmail_alias_del", "['bool','user'=>'string','domain'=>'string']");
f("vpopmail_alias_del_domain", "['bool','domain'=>'string']");
f("vpopmail_alias_get_all", "['array','domain'=>'string']");
f("vpopmail_alias_get", "['array','alias'=>'string','domain'=>'string']");
f("vpopmail_auth_user", "['bool','user'=>'string','domain'=>'string','password'=>'string','apop='=>'string']");
f("vpopmail_del_domain", "['bool','domain'=>'string']");
f("vpopmail_del_domain_ex", "['bool','domain'=>'string']");
f("vpopmail_del_user", "['bool','user'=>'string','domain'=>'string']");
f("vpopmail_error", "['string']");
f("vpopmail_passwd", "['bool','user'=>'string','domain'=>'string','password'=>'string','apop='=>'bool']");
f("vpopmail_set_user_quota", "['bool','user'=>'string','domain'=>'string','quota'=>'string']");
f("vprintf", "['int','format'=>'string','args'=>'array']");
f("vsprintf", "['string','format'=>'string','args'=>'array']");
f("w32api_deftype", "['bool','typename'=>'string','member1_type'=>'string','member1_name'=>'string','...='=>'string']");
f("w32api_init_dtype", "['resource','typename'=>'string','value'=>'','...='=>'']");
f("w32api_invoke_function", "['','funcname'=>'string','argument'=>'','...='=>'']");
f("w32api_register_function", "['bool','library'=>'string','function_name'=>'string','return_type'=>'string']");
f("w32api_set_call_method", "['','method'=>'int']");
f("wddx_add_vars", "['bool','packet_id'=>'','var_names'=>'','...vars='=>'']");
f("wddx_deserialize", "['','packet'=>'']");
f("wddx_packet_end", "['string','packet_id'=>'']");
f("wddx_packet_start", "['resource','comment='=>'string']");
f("wddx_serialize_value", "['string','var'=>'','comment='=>'string']");
f("wddx_serialize_vars", "['string','var_name'=>'','...vars='=>'']");
f("WeakMap::__construct", "['']");
f("WeakMap::count", "['int']");
f("WeakMap::current", "['mixed']");
f("WeakMap::key", "['any']");
f("WeakMap::next", "['void']");
f("WeakMap::offsetExists", "['bool','any'=>'any']");
f("WeakMap::offsetGet", "['mixed','any'=>'any']");
f("WeakMap::offsetSet", "['void','any'=>'any','value'=>'mixed']");
f("WeakMap::offsetUnset", "['void','any'=>'any']");
f("WeakMap::rewind", "['void']");
f("WeakMap::valid", "['bool']");
f("Weakref::acquire", "['bool']");
f("Weakref::get", "['any']");
f("Weakref::release", "['bool']");
f("Weakref::valid", "['bool']");
f("win32_continue_service", "['int','servicename'=>'string','machine='=>'string']");
f("win32_create_service", "['','details'=>'array','machine='=>'string']");
f("win32_delete_service", "['','servicename'=>'string','machine='=>'string']");
f("win32_get_last_control_message", "['int']");
f("win32_pause_service", "['int','servicename'=>'string','machine='=>'string']");
f("win32_ps_list_procs", "['array']");
f("win32_ps_stat_mem", "['array']");
f("win32_ps_stat_proc", "['array','pid='=>'int']");
f("win32_query_service_status", "['','servicename'=>'string','machine='=>'string']");
f("win32_set_service_status", "['bool','status'=>'int','checkpoint='=>'int']");
f("win32_start_service_ctrl_dispatcher", "['','name'=>'string']");
f("win32_start_service", "['int','servicename'=>'string','machine='=>'string']");
f("win32_stop_service", "['int','servicename'=>'string','machine='=>'string']");
f("wincache_fcache_fileinfo", "['array','summaryonly='=>'bool']");
f("wincache_fcache_meminfo", "['array']");
f("wincache_lock", "['bool','key'=>'string','isglobal='=>'bool']");
f("wincache_ocache_fileinfo", "['array','summaryonly='=>'bool']");
f("wincache_ocache_meminfo", "['array']");
f("wincache_refresh_if_changed", "['bool','files='=>'array']");
f("wincache_rplist_fileinfo", "['array','summaryonly='=>'bool']");
f("wincache_rplist_meminfo", "['array']");
f("wincache_scache_info", "['array','summaryonly='=>'bool']");
f("wincache_scache_meminfo", "['array']");
f("wincache_ucache_add", "['bool','key'=>'string','value'=>'','ttl='=>'int','values='=>'array','unused='=>'']");
f("wincache_ucache_cas", "['bool','key'=>'string','old_value'=>'int','new_value'=>'int']");
f("wincache_ucache_clear", "['bool']");
f("wincache_ucache_dec", "['','key'=>'string','dec_by='=>'int','success='=>'bool']");
f("wincache_ucache_delete", "['bool','key'=>'']");
f("wincache_ucache_exists", "['bool','key'=>'string']");
f("wincache_ucache_get", "['','key'=>'','success='=>'bool']");
f("wincache_ucache_inc", "['','key'=>'string','inc_by='=>'int','success='=>'bool']");
f("wincache_ucache_info", "['array','summaryonly='=>'bool','key='=>'string']");
f("wincache_ucache_meminfo", "['array']");
f("wincache_ucache_set", "['bool','key'=>'','value'=>'','ttl='=>'int','values='=>'array','unused='=>'']");
f("wincache_unlock", "['bool','key'=>'string']");
f("wordwrap", "['string','str'=>'string','width='=>'int','break='=>'string','cut='=>'bool']");
f("Worker::getStacked", "['int']");
f("Worker::isShutdown", "['bool']");
f("Worker::isWorking", "['bool']");
f("Worker::shutdown", "['bool']");
f("Worker::stack", "['int','&work'=>'Threaded']");
f("Worker::unstack", "['int','&work='=>'Threaded']");
f("xattr_get", "['string','filename'=>'string','name'=>'string','flags='=>'int']");
f("xattr_list", "['array','filename'=>'string','flags='=>'int']");
f("xattr_remove", "['bool','filename'=>'string','name'=>'string','flags='=>'int']");
f("xattr_set", "['bool','filename'=>'string','name'=>'string','value'=>'string','flags='=>'int']");
f("xattr_supported", "['bool','filename'=>'string','flags='=>'int']");
f("Xcom::__construct", "['','fabric_url='=>'string','fabric_token='=>'string','capability_token='=>'string']");
f("Xcom::decode", "['any','avro_msg'=>'string','json_schema'=>'string']");
f("Xcom::encode", "['string','data'=>'stdClass','avro_schema'=>'string']");
f("Xcom::getDebugOutput", "['string']");
f("Xcom::getLastResponseInfo", "['array']");
f("Xcom::getLastResponse", "['string']");
f("Xcom::getOnboardingURL", "['string','capability_name'=>'string','agreement_url'=>'string']");
f("Xcom::sendAsync", "['int','topic'=>'string','data'=>'mixed','json_schema='=>'string','http_headers='=>'array']");
f("Xcom::send", "['int','topic'=>'string','data'=>'mixed','json_schema='=>'string','http_headers='=>'array']");
f("xdiff_file_bdiff", "['bool','old_file'=>'string','new_file'=>'string','dest'=>'string']");
f("xdiff_file_bdiff_size", "['int','file'=>'string']");
f("xdiff_file_bpatch", "['bool','file'=>'string','patch'=>'string','dest'=>'string']");
f("xdiff_file_diff_binary", "['bool','old_file'=>'string','new_file'=>'string','dest'=>'string']");
f("xdiff_file_diff", "['bool','old_file'=>'string','new_file'=>'string','dest'=>'string','context='=>'int','minimal='=>'bool']");
f("xdiff_file_merge3", "['','old_file'=>'string','new_file1'=>'string','new_file2'=>'string','dest'=>'string']");
f("xdiff_file_patch_binary", "['bool','file'=>'string','patch'=>'string','dest'=>'string']");
f("xdiff_file_patch", "['','file'=>'string','patch'=>'string','dest'=>'string','flags='=>'int']");
f("xdiff_file_rabdiff", "['bool','old_file'=>'string','new_file'=>'string','dest'=>'string']");
f("xdiff_string_bdiff_size", "['int','patch'=>'string']");
f("xdiff_string_bdiff", "['string','old_data'=>'string','new_data'=>'string']");
f("xdiff_string_bpatch", "['string','str'=>'string','patch'=>'string']");
f("xdiff_string_diff_binary", "['string','old_data'=>'string','new_data'=>'string']");
f("xdiff_string_diff", "['string','old_data'=>'string','new_data'=>'string','context='=>'int','minimal='=>'bool']");
f("xdiff_string_merge3", "['','old_data'=>'string','new_data1'=>'string','new_data2'=>'string','error='=>'string']");
f("xdiff_string_patch_binary", "['string','str'=>'string','patch'=>'string']");
f("xdiff_string_patch", "['string','str'=>'string','patch'=>'string','flags='=>'int','error='=>'string']");
f("xdiff_string_rabdiff", "['string','old_data'=>'string','new_data'=>'string']");
f("xhprof_disable", "['array']");
f("xhprof_enable", "['void','flags='=>'int','options='=>'array']");
f("xhprof_sample_disable", "['array']");
f("xhprof_sample_enable", "['void']");
f("XMLDiff\\Base::__construct", "['','nsname'=>'string']");
f("XMLDiff\\Base::diff", "['mixed','from'=>'mixed','to'=>'mixed']");
f("XMLDiff\\Base::merge", "['mixed','src'=>'mixed','diff'=>'mixed']");
f("XMLDiff\\DOM::diff", "['DOMDocument','from'=>'DOMDocument','to'=>'DOMDocument']");
f("XMLDiff\\DOM::merge", "['DOMDocument','src'=>'DOMDocument','diff'=>'DOMDocument']");
f("XMLDiff\\File::diff", "['string','from'=>'string','to'=>'string']");
f("XMLDiff\\File::merge", "['string','src'=>'string','diff'=>'string']");
f("XMLDiff\\Memory::diff", "['string','from'=>'string','to'=>'string']");
f("XMLDiff\\Memory::merge", "['string','src'=>'string','diff'=>'string']");
f("xml_error_string", "['string','code'=>'int']");
f("xml_get_current_byte_index", "['int','parser'=>'']");
f("xml_get_current_column_number", "['int','parser'=>'']");
f("xml_get_current_line_number", "['int','parser'=>'']");
f("xml_get_error_code", "['int','parser'=>'']");
f("xml_parse_into_struct", "['int','parser'=>'','data'=>'string','&values'=>'array','&index='=>'array']");
f("xml_parse", "['int','parser'=>'','data'=>'string','isfinal='=>'bool']");
f("xml_parser_create_ns", "['resource','encoding='=>'string','sep='=>'string']");
f("xml_parser_create", "['resource','encoding='=>'string']");
f("xml_parser_free", "['bool','parser'=>'resource']");
f("xml_parser_get_option", "['mixed','parser'=>'resource','option'=>'int']");
f("xml_parser_set_option", "['bool','parser'=>'resource','option'=>'int','value'=>'mixed']");
f("XMLReader::close", "['bool']");
f("XMLReader::expand", "['DOMNode']");
f("XMLReader::getAttributeNo", "['string','index'=>'int']");
f("XMLReader::getAttributeNs", "['string','name'=>'string','namespaceuri'=>'string']");
f("XMLReader::getAttribute", "['string','name'=>'string']");
f("XMLReader::getParserProperty", "['bool','property'=>'int']");
f("XMLReader::isValid", "['bool']");
f("XMLReader::lookupNamespace", "['string|null','prefix'=>'string']");
f("XMLReader::moveToAttribute", "['bool','name'=>'string']");
f("XMLReader::moveToAttributeNo", "['bool','index'=>'int']");
f("XMLReader::moveToAttributeNs", "['bool','localname'=>'string','namespaceuri'=>'string']");
f("XMLReader::moveToElement", "['bool']");
f("XMLReader::moveToFirstAttribute", "['bool']");
f("XMLReader::moveToNextAttribute", "['bool']");
f("XMLReader::next", "['bool','localname='=>'string']");
f("XMLReader::open", "['bool','uri'=>'string','encoding='=>'string','options='=>'int']");
f("XMLReader::read", "['bool']");
f("XMLReader::readInnerXml", "['string']");
f("XMLReader::readInnerXML", "['string']");
f("XMLReader::readOuterXml", "['bool']");
f("XMLReader::readOuterXML", "['string']");
f("XMLReader::readString", "['string']");
f("XMLReader::setParserProperty", "['bool','property'=>'int','value'=>'bool']");
f("XMLReader::setRelaxNGSchema", "['bool','filename'=>'string']");
f("XMLReader::setRelaxNGSchemaSource", "['bool','source'=>'string']");
f("XMLReader::setSchema", "['bool','filename'=>'string']");
f("XMLReader::XML", "['bool','source'=>'string','encoding='=>'string','options='=>'int']");
f("XMLReader::xml", "['bool','source'=>'string','encoding='=>'string','options='=>'int']");
f("xmlrpc_decode", "['array|null','xml'=>'string','encoding='=>'string']");
f("xmlrpc_decode_request", "['array|null','xml'=>'string','method'=>'string','encoding='=>'string']");
f("xmlrpc_encode_request", "['string','method'=>'string','params'=>'','output_options='=>'array']");
f("xmlrpc_encode", "['string','value'=>'']");
f("xmlrpc_get_type", "['string','value'=>'']");
f("xmlrpc_is_fault", "['bool','arg'=>'array']");
f("xmlrpc_parse_method_descriptions", "['array','xml'=>'string']");
f("xmlrpc_server_add_introspection_data", "['int','server'=>'','desc'=>'array']");
f("xmlrpc_server_call_method", "['','server'=>'','xml'=>'string','user_data'=>'','output_options='=>'array']");
f("xmlrpc_server_create", "['resource']");
f("xmlrpc_server_destroy", "['int','server'=>'']");
f("xmlrpc_server_register_introspection_callback", "['bool','server'=>'','function'=>'string']");
f("xmlrpc_server_register_method", "['bool','server'=>'','method_name'=>'string','function'=>'string']");
f("xmlrpc_set_type", "['bool','value'=>'string','type'=>'string']");
f("xml_set_character_data_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_default_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_element_handler", "['bool','parser'=>'','shdl'=>'string','ehdl'=>'string']");
f("xml_set_end_namespace_decl_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_external_entity_ref_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_notation_decl_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_object", "['bool','parser'=>'','&obj'=>'any']");
f("xml_set_processing_instruction_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_start_namespace_decl_handler", "['bool','parser'=>'','hdl'=>'string']");
f("xml_set_unparsed_entity_decl_handler", "['bool','parser'=>'','hdl'=>'string']");
f("XMLWriter::endAttribute", "['bool']");
f("xmlwriter_end_attribute", "['bool','xmlwriter'=>'']");
f("XMLWriter::endCData", "['bool']");
f("xmlwriter_end_cdata", "['bool','xmlwriter'=>'']");
f("XMLWriter::endComment", "['bool']");
f("xmlwriter_end_comment", "['bool','xmlwriter'=>'']");
f("XMLWriter::endDocument", "['bool']");
f("xmlwriter_end_document", "['bool','xmlwriter'=>'']");
f("XMLWriter::endDTDAttlist", "['bool']");
f("xmlwriter_end_dtd_attlist", "['bool','xmlwriter'=>'']");
f("xmlwriter_end_dtd", "['bool','xmlwriter'=>'']");
f("XMLWriter::endDTD", "['bool','xmlwriter='=>'']");
f("XMLWriter::endDTDElement", "['bool']");
f("xmlwriter_end_dtd_element", "['bool','xmlwriter'=>'']");
f("XMLWriter::endDTDEntity", "['bool']");
f("xmlwriter_end_dtd_entity", "['bool','xmlwriter'=>'']");
f("XMLWriter::endElement", "['bool']");
f("xmlwriter_end_element", "['bool','xmlwriter'=>'']");
f("XMLWriter::endPI", "['bool']");
f("xmlwriter_end_pi", "['bool','xmlwriter'=>'']");
f("XMLWriter::flush", "['','empty='=>'bool','xmlwriter='=>'']");
f("xmlwriter_flush", "['','xmlwriter'=>'','empty='=>'bool']");
f("XMLWriter::fullEndElement", "['bool']");
f("xmlwriter_full_end_element", "['bool','xmlwriter'=>'']");
f("xmlwriter_open_memory", "['resource']");
f("XMLWriter::openMemory", "['resource']");
f("xmlwriter_open_uri", "['resource','source'=>'string']");
f("XMLWriter::openURI", "['resource','uri'=>'string']");
f("XMLWriter::outputMemory", "['string','flush='=>'bool','xmlwriter='=>'']");
f("xmlwriter_output_memory", "['string','xmlwriter'=>'','flush='=>'bool']");
f("XMLWriter::setIndent", "['bool','indent'=>'bool']");
f("xmlwriter_set_indent", "['bool','xmlwriter'=>'','indent'=>'bool']");
f("XMLWriter::setIndentString", "['bool','indentstring'=>'string']");
f("xmlwriter_set_indent_string", "['bool','xmlwriter'=>'','indentstring'=>'string']");
f("XMLWriter::startAttribute", "['bool','name'=>'string']");
f("xmlwriter_start_attribute", "['bool','xmlwriter'=>'','name'=>'string']");
f("XMLWriter::startAttributeNS", "['bool','prefix'=>'string','name'=>'string','uri'=>'string']");
f("xmlwriter_start_attribute_ns", "['bool','xmlwriter'=>'','prefix'=>'string','name'=>'string','uri'=>'string']");
f("XMLWriter::startCData", "['bool']");
f("xmlwriter_start_cdata", "['bool','xmlwriter'=>'']");
f("XMLWriter::startComment", "['bool']");
f("xmlwriter_start_comment", "['bool','xmlwriter'=>'']");
f("XMLWriter::startDocument", "['bool','version='=>'string','encoding='=>'string','standalone='=>'string']");
f("xmlwriter_start_document", "['bool','xmlwriter'=>'','version'=>'string','encoding'=>'string','standalone'=>'string']");
f("XMLWriter::startDTDAttlist", "['bool','name'=>'string']");
f("xmlwriter_start_dtd_attlist", "['bool','xmlwriter'=>'','name'=>'string']");
f("XMLWriter::startDTD", "['bool','qualifiedname'=>'string','publicid='=>'string','systemid='=>'string']");
f("xmlwriter_start_dtd", "['bool','xmlwriter'=>'','name'=>'string','pubid'=>'string','sysid'=>'string']");
f("XMLWriter::startDTDElement", "['bool','qualifiedname'=>'string']");
f("xmlwriter_start_dtd_element", "['bool','xmlwriter'=>'','name'=>'string']");
f("XMLWriter::startDTDEntity", "['bool','name'=>'string','isparam'=>'bool']");
f("xmlwriter_start_dtd_entity", "['bool','xmlwriter'=>'','name'=>'string','isparam'=>'bool']");
f("XMLWriter::startElement", "['bool','name'=>'string']");
f("xmlwriter_start_element", "['bool','xmlwriter'=>'','name'=>'string']");
f("XMLWriter::startElementNS", "['bool','prefix'=>'string','name'=>'string','uri'=>'string']");
f("xmlwriter_start_element_ns", "['bool','xmlwriter'=>'','prefix'=>'string','name'=>'string','uri'=>'string']");
f("XMLWriter::startPI", "['bool','target'=>'string']");
f("xmlwriter_start_pi", "['bool','xmlwriter'=>'','target'=>'string']");
f("XMLWriter::text", "['bool','content'=>'string']");
f("xmlwriter_text", "['bool','xmlwriter'=>'','content'=>'string']");
f("XMLWriter::writeAttribute", "['bool','name'=>'string','value'=>'string']");
f("xmlwriter_write_attribute", "['bool','xmlwriter'=>'','name'=>'string','content'=>'string']");
f("XMLWriter::writeAttributeNS", "['bool','prefix'=>'string','name'=>'string','uri'=>'string','content'=>'string']");
f("xmlwriter_write_attribute_ns", "['bool','xmlwriter'=>'','prefix'=>'string','name'=>'string','uri'=>'string','content'=>'string']");
f("XMLWriter::writeCData", "['bool','content'=>'string']");
f("xmlwriter_write_cdata", "['bool','xmlwriter'=>'','content'=>'string']");
f("XMLWriter::writeComment", "['bool','content'=>'string']");
f("xmlwriter_write_comment", "['bool','xmlwriter'=>'','content'=>'string']");
f("XMLWriter::writeDTDAttlist", "['bool','name'=>'string','content'=>'string']");
f("xmlwriter_write_dtd_attlist", "['bool','xmlwriter'=>'','name'=>'string','content'=>'string']");
f("XMLWriter::writeDTD", "['bool','name'=>'string','publicid='=>'string','systemid='=>'string','subset='=>'string']");
f("xmlwriter_write_dtd", "['bool','xmlwriter'=>'','name'=>'string','pubid'=>'string','sysid'=>'string','subset'=>'string']");
f("XMLWriter::writeDTDElement", "['bool','name'=>'string','content'=>'string']");
f("xmlwriter_write_dtd_element", "['bool','xmlwriter'=>'','name'=>'string','content'=>'string']");
f("XMLWriter::writeDTDEntity", "['bool','name'=>'string','content'=>'string','pe'=>'bool','pubid'=>'string','sysid'=>'string','ndataid'=>'string']");
f("xmlwriter_write_dtd_entity", "['bool','xmlwriter'=>'','name'=>'string','content'=>'string','pe'=>'int','pubid'=>'string','sysid'=>'string','ndataid'=>'string']");
f("XMLWriter::writeElement", "['bool','name'=>'string','content='=>'string']");
f("xmlwriter_write_element", "['bool','xmlwriter'=>'','name'=>'string','content'=>'string']");
f("XMLWriter::writeElementNS", "['bool','prefix'=>'string','name'=>'string','uri'=>'string','content='=>'string']");
f("xmlwriter_write_element_ns", "['bool','xmlwriter'=>'','prefix'=>'string','name'=>'string','uri'=>'string','content'=>'string']");
f("XMLWriter::writePI", "['bool','target'=>'string','content'=>'string']");
f("xmlwriter_write_pi", "['bool','xmlwriter'=>'','target'=>'string','content'=>'string']");
f("XMLWriter::writeRaw", "['bool','content'=>'string']");
f("xmlwriter_write_raw", "['bool','xmlwriter'=>'','content'=>'string']");
f("xpath_new_context", "['XPathContext','dom_document'=>'domdocument']");
f("xpath_register_ns_auto", "['bool','xpath_context'=>'xpathcontext','context_node='=>'any']");
f("xpath_register_ns", "['bool','xpath_context'=>'xpathcontext','prefix'=>'string','uri'=>'string']");
f("xptr_new_context", "['XPathContext']");
f("xslt_backend_info", "['string']");
f("xslt_backend_name", "['string']");
f("xslt_backend_version", "['string']");
f("xslt_create", "['resource']");
f("xslt_errno", "['int','xh'=>'']");
f("xslt_error", "['string','xh'=>'']");
f("xslt_free", "['','xh'=>'']");
f("xslt_getopt", "['int','processor'=>'']");
f("XSLTProcessor::getParameter", "['string','namespaceuri'=>'string','localname'=>'string']");
f("XsltProcessor::getSecurityPrefs", "['int']");
f("XSLTProcessor::hasExsltSupport", "['bool']");
f("XSLTProcessor::importStylesheet", "['','stylesheet'=>'any']");
f("XSLTProcessor::registerPHPFunctions", "['','restrict='=>'']");
f("XSLTProcessor::removeParameter", "['bool','namespaceuri'=>'string','localname'=>'string']");
f("XSLTProcessor::setParameter", "['bool','namespace'=>'string','name'=>'string','value'=>'string','options'=>'array']");
f("XSLTProcessor::setProfiling", "['bool','filename'=>'string']");
f("XsltProcessor::setSecurityPrefs", "['int','securityPrefs'=>'int']");
f("XSLTProcessor::transformToDoc", "['DOMDocument','doc'=>'domnode']");
f("XSLTProcessor::transformToUri", "['int','doc'=>'domdocument','uri'=>'string']");
f("XSLTProcessor::transformToURI", "['int','doc'=>'DOMDocument','uri'=>'string']");
f("XSLTProcessor::transformToXML", "['string','doc'=>'domdocument']");
f("xslt_process", "['','xh'=>'','xmlcontainer'=>'string','xslcontainer'=>'string','resultcontainer='=>'string','arguments='=>'array','parameters='=>'array']");
f("xslt_set_base", "['','xh'=>'','uri'=>'string']");
f("xslt_set_encoding", "['','xh'=>'','encoding'=>'string']");
f("xslt_set_error_handler", "['','xh'=>'','handler'=>'']");
f("xslt_set_log", "['','xh'=>'','log='=>'']");
f("xslt_set_object", "['bool','processor'=>'','obj'=>'any']");
f("xslt_setopt", "['','processor'=>'','newmask'=>'int']");
f("xslt_set_sax_handlers", "['','processor'=>'','handlers'=>'array']");
f("xslt_set_sax_handler", "['','xh'=>'','handlers'=>'array']");
f("xslt_set_scheme_handlers", "['','xh'=>'','handlers'=>'array']");
f("xslt_set_scheme_handler", "['','xh'=>'','handlers'=>'array']");
f("xsl_xsltprocessor_get_parameter", "['string','namespace'=>'string','name'=>'string']");
f("xsl_xsltprocessor_get_security_prefs", "['int']");
f("xsl_xsltprocessor_has_exslt_support", "['bool']");
f("xsl_xsltprocessor_register_php_functions", "['','restrict'=>'']");
f("xsl_xsltprocessor_remove_parameter", "['bool','namespace'=>'string','name'=>'string']");
f("xsl_xsltprocessor_set_parameter", "['bool','namespace'=>'string','name'=>'','value'=>'string']");
f("xsl_xsltprocessor_set_profiling", "['bool','filename'=>'string']");
f("xsl_xsltprocessor_set_security_prefs", "['int','securityprefs'=>'int']");
f("xsl_xsltprocessor_transform_to_uri", "['int','doc'=>'domdocument','uri'=>'string']");
f("xsl_xsltprocessor_transform_to_xml", "['string','doc'=>'domdocument']");
f("Yaf_Action_Abstract::execute", "['mixed','arg='=>'mixed','...='=>'mixed']");
f("Yaf_Action_Abstract::getController", "['Yaf_Controller_Abstract']");
f("Yaf_Application::app", "['void']");
f("Yaf_Application::bootstrap", "['void','bootstrap='=>'Yaf_Bootstrap_Abstract']");
f("Yaf_Application::clearLastError", "['Yaf_Application']");
f("Yaf_Application::__clone", "['void']");
f("Yaf_Application::__construct", "['','config'=>'mixed','envrion='=>'string']");
f("Yaf_Application::__destruct", "['void']");
f("Yaf_Application::environ", "['void']");
f("Yaf_Application::execute", "['void','entry'=>'callable','...'=>'string']");
f("Yaf_Application::getAppDirectory", "['Yaf_Application']");
f("Yaf_Application::getConfig", "['Yaf_Config_Abstract']");
f("Yaf_Application::getDispatcher", "['Yaf_Dispatcher']");
f("Yaf_Application::getLastErrorMsg", "['string']");
f("Yaf_Application::getLastErrorNo", "['int']");
f("Yaf_Application::getModules", "['array']");
f("Yaf_Application::run", "['void']");
f("Yaf_Application::setAppDirectory", "['Yaf_Application','directory'=>'string']");
f("Yaf_Application::__sleep", "['void']");
f("Yaf_Application::__wakeup", "['void']");
f("Yaf_Config_Abstract::get", "['mixed','name'=>'string','value'=>'mixed']");
f("Yaf_Config_Abstract::readonly", "['bool']");
f("Yaf_Config_Abstract::set", "['Yaf_Config_Abstract']");
f("Yaf_Config_Abstract::toArray", "['array']");
f("Yaf_Config_Ini::__construct", "['','config_file'=>'string','section='=>'string']");
f("Yaf_Config_Ini::count", "['void']");
f("Yaf_Config_Ini::current", "['void']");
f("Yaf_Config_Ini::__get", "['void','name='=>'string']");
f("Yaf_Config_Ini::__isset", "['void','name'=>'string']");
f("Yaf_Config_Ini::key", "['void']");
f("Yaf_Config_Ini::next", "['void']");
f("Yaf_Config_Ini::offsetExists", "['void','name'=>'string']");
f("Yaf_Config_Ini::offsetGet", "['void','name'=>'string']");
f("Yaf_Config_Ini::offsetSet", "['void','name'=>'string','value'=>'string']");
f("Yaf_Config_Ini::offsetUnset", "['void','name'=>'string']");
f("Yaf_Config_Ini::readonly", "['void']");
f("Yaf_Config_Ini::rewind", "['void']");
f("Yaf_Config_Ini::__set", "['void','name'=>'string','value'=>'mixed']");
f("Yaf_Config_Ini::toArray", "['array']");
f("Yaf_Config_Ini::valid", "['void']");
f("Yaf_Config_Simple::__construct", "['','config_file'=>'string','section='=>'string']");
f("Yaf_Config_Simple::count", "['void']");
f("Yaf_Config_Simple::current", "['void']");
f("Yaf_Config_Simple::__get", "['void','name='=>'string']");
f("Yaf_Config_Simple::__isset", "['void','name'=>'string']");
f("Yaf_Config_Simple::key", "['void']");
f("Yaf_Config_Simple::next", "['void']");
f("Yaf_Config_Simple::offsetExists", "['void','name'=>'string']");
f("Yaf_Config_Simple::offsetGet", "['void','name'=>'string']");
f("Yaf_Config_Simple::offsetSet", "['void','name'=>'string','value'=>'string']");
f("Yaf_Config_Simple::offsetUnset", "['void','name'=>'string']");
f("Yaf_Config_Simple::readonly", "['void']");
f("Yaf_Config_Simple::rewind", "['void']");
f("Yaf_Config_Simple::__set", "['void','name'=>'string','value'=>'string']");
f("Yaf_Config_Simple::toArray", "['array']");
f("Yaf_Config_Simple::valid", "['void']");
f("Yaf_Controller_Abstract::__clone", "['void']");
f("Yaf_Controller_Abstract::__construct", "['']");
f("Yaf_Controller_Abstract::display", "['bool','tpl'=>'string','parameters='=>'array']");
f("Yaf_Controller_Abstract::forward", "['void','action'=>'string','paramters='=>'array']");
f("Yaf_Controller_Abstract::forward", "['void','controller'=>'string','action'=>'string','paramters='=>'array']");
f("Yaf_Controller_Abstract::forward", "['void','module'=>'string','controller'=>'string','action'=>'string','paramters='=>'array']");
f("Yaf_Controller_Abstract::getInvokeArgs", "['void']");
f("Yaf_Controller_Abstract::getInvokeArg", "['void','name'=>'string']");
f("Yaf_Controller_Abstract::getModuleName", "['string']");
f("Yaf_Controller_Abstract::getRequest", "['Yaf_Request_Abstract']");
f("Yaf_Controller_Abstract::getResponse", "['Yaf_Response_Abstract']");
f("Yaf_Controller_Abstract::getViewpath", "['void']");
f("Yaf_Controller_Abstract::getView", "['Yaf_View_Interface']");
f("Yaf_Controller_Abstract::initView", "['void','options='=>'array']");
f("Yaf_Controller_Abstract::init", "['void']");
f("Yaf_Controller_Abstract::redirect", "['bool','url'=>'string']");
f("Yaf_Controller_Abstract::render", "['string','tpl'=>'string','parameters='=>'array']");
f("Yaf_Controller_Abstract::setViewpath", "['void','view_directory'=>'string']");
f("Yaf_Dispatcher::autoRender", "['Yaf_Dispatcher','flag='=>'bool']");
f("Yaf_Dispatcher::catchException", "['Yaf_Dispatcher','flag='=>'bool']");
f("Yaf_Dispatcher::__clone", "['void']");
f("Yaf_Dispatcher::__construct", "['']");
f("Yaf_Dispatcher::disableView", "['bool']");
f("Yaf_Dispatcher::dispatch", "['Yaf_Response_Abstract','request'=>'Yaf_Request_Abstract']");
f("Yaf_Dispatcher::enableView", "['Yaf_Dispatcher']");
f("Yaf_Dispatcher::flushInstantly", "['Yaf_Dispatcher','flag='=>'bool']");
f("Yaf_Dispatcher::getApplication", "['Yaf_Application']");
f("Yaf_Dispatcher::getInstance", "['Yaf_Dispatcher']");
f("Yaf_Dispatcher::getRequest", "['Yaf_Request_Abstract']");
f("Yaf_Dispatcher::getRouter", "['Yaf_Router']");
f("Yaf_Dispatcher::initView", "['Yaf_View_Interface','templates_dir'=>'string','options='=>'array']");
f("Yaf_Dispatcher::registerPlugin", "['Yaf_Dispatcher','plugin'=>'Yaf_Plugin_Abstract']");
f("Yaf_Dispatcher::returnResponse", "['Yaf_Dispatcher','flag'=>'bool']");
f("Yaf_Dispatcher::setDefaultAction", "['Yaf_Dispatcher','action'=>'string']");
f("Yaf_Dispatcher::setDefaultController", "['Yaf_Dispatcher','controller'=>'string']");
f("Yaf_Dispatcher::setDefaultModule", "['Yaf_Dispatcher','module'=>'string']");
f("Yaf_Dispatcher::setErrorHandler", "['Yaf_Dispatcher','callback'=>'call','error_types'=>'int']");
f("Yaf_Dispatcher::setRequest", "['Yaf_Dispatcher','request'=>'Yaf_Request_Abstract']");
f("Yaf_Dispatcher::setView", "['Yaf_Dispatcher','view'=>'Yaf_View_Interface']");
f("Yaf_Dispatcher::__sleep", "['void']");
f("Yaf_Dispatcher::throwException", "['Yaf_Dispatcher','flag='=>'bool']");
f("Yaf_Dispatcher::__wakeup", "['void']");
f("Yaf_Exception::__construct", "['']");
f("Yaf_Exception::getPrevious", "['void']");
f("Yaf_Loader::autoload", "['void']");
f("Yaf_Loader::clearLocalNamespace", "['void']");
f("Yaf_Loader::__clone", "['void']");
f("Yaf_Loader::__construct", "['']");
f("Yaf_Loader::getInstance", "['void']");
f("Yaf_Loader::getLibraryPath", "['Yaf_Loader','is_global='=>'bool']");
f("Yaf_Loader::getLocalNamespace", "['void']");
f("Yaf_Loader::import", "['void']");
f("Yaf_Loader::isLocalName", "['void']");
f("Yaf_Loader::registerLocalNamespace", "['void','prefix'=>'mixed']");
f("Yaf_Loader::setLibraryPath", "['Yaf_Loader','directory'=>'string','is_global='=>'bool']");
f("Yaf_Loader::__sleep", "['void']");
f("Yaf_Loader::__wakeup", "['void']");
f("Yaf_Plugin_Abstract::dispatchLoopShutdown", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Plugin_Abstract::dispatchLoopStartup", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Plugin_Abstract::postDispatch", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Plugin_Abstract::preDispatch", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Plugin_Abstract::preResponse", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Plugin_Abstract::routerShutdown", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Plugin_Abstract::routerStartup", "['void','request'=>'Yaf_Request_Abstract','response'=>'Yaf_Response_Abstract']");
f("Yaf_Registry::__clone", "['void']");
f("Yaf_Registry::__construct", "['']");
f("Yaf_Registry::del", "['void','name'=>'string']");
f("Yaf_Registry::get", "['mixed','name'=>'string']");
f("Yaf_Registry::has", "['bool','name'=>'string']");
f("Yaf_Registry::set", "['bool','name'=>'string','value'=>'string']");
f("Yaf_Request_Abstract::getActionName", "['void']");
f("Yaf_Request_Abstract::getBaseUri", "['void']");
f("Yaf_Request_Abstract::getControllerName", "['void']");
f("Yaf_Request_Abstract::getEnv", "['void','name'=>'string','default='=>'string']");
f("Yaf_Request_Abstract::getException", "['void']");
f("Yaf_Request_Abstract::getLanguage", "['void']");
f("Yaf_Request_Abstract::getMethod", "['void']");
f("Yaf_Request_Abstract::getModuleName", "['void']");
f("Yaf_Request_Abstract::getParams", "['void']");
f("Yaf_Request_Abstract::getParam", "['void','name'=>'string','default='=>'string']");
f("Yaf_Request_Abstract::getRequestUri", "['void']");
f("Yaf_Request_Abstract::getServer", "['void','name'=>'string','default='=>'string']");
f("Yaf_Request_Abstract::isCli", "['void']");
f("Yaf_Request_Abstract::isDispatched", "['void']");
f("Yaf_Request_Abstract::isGet", "['void']");
f("Yaf_Request_Abstract::isHead", "['void']");
f("Yaf_Request_Abstract::isOptions", "['void']");
f("Yaf_Request_Abstract::isPost", "['void']");
f("Yaf_Request_Abstract::isPut", "['void']");
f("Yaf_Request_Abstract::isRouted", "['void']");
f("Yaf_Request_Abstract::isXmlHttpRequest", "['void']");
f("Yaf_Request_Abstract::setActionName", "['void','action'=>'string']");
f("Yaf_Request_Abstract::setBaseUri", "['bool','uir'=>'string']");
f("Yaf_Request_Abstract::setControllerName", "['void','controller'=>'string']");
f("Yaf_Request_Abstract::setDispatched", "['void']");
f("Yaf_Request_Abstract::setModuleName", "['void','module'=>'string']");
f("Yaf_Request_Abstract::setParam", "['void','name'=>'string','value='=>'string']");
f("Yaf_Request_Abstract::setRequestUri", "['void','uir'=>'string']");
f("Yaf_Request_Abstract::setRouted", "['void','flag='=>'string']");
f("Yaf_Request_Http::__clone", "['void']");
f("Yaf_Request_Http::__construct", "['']");
f("Yaf_Request_Http::getCookie", "['mixed','name'=>'string','default='=>'string']");
f("Yaf_Request_Http::getFiles", "['void']");
f("Yaf_Request_Http::get", "['mixed','name'=>'string','default='=>'string']");
f("Yaf_Request_Http::getPost", "['mixed','name'=>'string','default='=>'string']");
f("Yaf_Request_Http::getQuery", "['mixed','name'=>'string','default='=>'string']");
f("Yaf_Request_Http::getRequest", "['void']");
f("Yaf_Request_Http::isXmlHttpRequest", "['bool']");
f("Yaf_Request_Simple::__clone", "['void']");
f("Yaf_Request_Simple::__construct", "['']");
f("Yaf_Request_Simple::getCookie", "['void']");
f("Yaf_Request_Simple::getFiles", "['void']");
f("Yaf_Request_Simple::getPost", "['void']");
f("Yaf_Request_Simple::getQuery", "['void']");
f("Yaf_Request_Simple::getRequest", "['void']");
f("Yaf_Request_Simple::get", "['void']");
f("Yaf_Request_Simple::isXmlHttpRequest", "['void']");
f("Yaf_Response_Abstract::appendBody", "['bool','content'=>'string','key='=>'string']");
f("Yaf_Response_Abstract::clearBody", "['bool','key='=>'string']");
f("Yaf_Response_Abstract::clearHeaders", "['void']");
f("Yaf_Response_Abstract::__clone", "['void']");
f("Yaf_Response_Abstract::__construct", "['']");
f("Yaf_Response_Abstract::__destruct", "['void']");
f("Yaf_Response_Abstract::getBody", "['mixed','key='=>'string']");
f("Yaf_Response_Abstract::getHeader", "['void']");
f("Yaf_Response_Abstract::prependBody", "['bool','content'=>'string','key='=>'string']");
f("Yaf_Response_Abstract::response", "['void']");
f("Yaf_Response_Abstract::setAllHeaders", "['void']");
f("Yaf_Response_Abstract::setBody", "['bool','content'=>'string','key='=>'string']");
f("Yaf_Response_Abstract::setHeader", "['void']");
f("Yaf_Response_Abstract::setRedirect", "['void']");
f("Yaf_Response_Abstract::__toString", "['void']");
f("Yaf_Route_Interface::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Interface::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Route_Map::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Map::__construct", "['','controller_prefer='=>'string','delimiter='=>'string']");
f("Yaf_Route_Map::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Router::addConfig", "['bool','config'=>'Yaf_Config_Abstract']");
f("Yaf_Router::addRoute", "['bool','name'=>'string','route'=>'Yaf_Route_Abstract']");
f("Yaf_Router::__construct", "['']");
f("Yaf_Route_Regex::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Regex::__construct", "['','match'=>'string','route'=>'array','map='=>'array','verify='=>'array','reverse='=>'string']");
f("Yaf_Route_Regex::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Route_Rewrite::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Rewrite::__construct", "['','match'=>'string','route'=>'array','verify='=>'array']");
f("Yaf_Route_Rewrite::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Router::getCurrentRoute", "['string']");
f("Yaf_Router::getRoutes", "['mixed']");
f("Yaf_Router::getRoute", "['Yaf_Route_Interface','name'=>'string']");
f("Yaf_Router::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Route_Simple::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Simple::__construct", "['','module_name'=>'string','controller_name'=>'string','action_name'=>'string']");
f("Yaf_Route_Simple::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Route_Static::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Static::match", "['void','uri'=>'string']");
f("Yaf_Route_Static::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Route_Supervar::assemble", "['string','info'=>'array','query='=>'array']");
f("Yaf_Route_Supervar::__construct", "['','supervar_name'=>'string']");
f("Yaf_Route_Supervar::route", "['bool','request'=>'Yaf_Request_Abstract']");
f("Yaf_Session::__clone", "['void']");
f("Yaf_Session::__construct", "['']");
f("Yaf_Session::count", "['void']");
f("Yaf_Session::current", "['void']");
f("Yaf_Session::del", "['void','name'=>'string']");
f("Yaf_Session::getInstance", "['void']");
f("Yaf_Session::__get", "['void','name'=>'string']");
f("Yaf_Session::has", "['void','name'=>'string']");
f("Yaf_Session::__isset", "['void','name'=>'string']");
f("Yaf_Session::key", "['void']");
f("Yaf_Session::next", "['void']");
f("Yaf_Session::offsetExists", "['void','name'=>'string']");
f("Yaf_Session::offsetGet", "['void','name'=>'string']");
f("Yaf_Session::offsetSet", "['void','name'=>'string','value'=>'string']");
f("Yaf_Session::offsetUnset", "['void','name'=>'string']");
f("Yaf_Session::rewind", "['void']");
f("Yaf_Session::__set", "['void','name'=>'string','value'=>'string']");
f("Yaf_Session::__sleep", "['void']");
f("Yaf_Session::start", "['void']");
f("Yaf_Session::__unset", "['void','name'=>'string']");
f("Yaf_Session::valid", "['void']");
f("Yaf_Session::__wakeup", "['void']");
f("Yaf_View_Interface::assign", "['bool','name'=>'string','value='=>'string']");
f("Yaf_View_Interface::display", "['bool','tpl'=>'string','tpl_vars='=>'array']");
f("Yaf_View_Interface::getScriptPath", "['void']");
f("Yaf_View_Interface::render", "['string','tpl'=>'string','tpl_vars='=>'array']");
f("Yaf_View_Interface::setScriptPath", "['void','template_dir'=>'string']");
f("Yaf_View_Simple::assign", "['bool','name'=>'string','value='=>'mixed']");
f("Yaf_View_Simple::assignRef", "['bool','name'=>'string','&value'=>'mixed']");
f("Yaf_View_Simple::clear", "['bool','name='=>'string']");
f("Yaf_View_Simple::__construct", "['','tempalte_dir'=>'string','options='=>'array']");
f("Yaf_View_Simple::display", "['bool','tpl'=>'string','tpl_vars='=>'array']");
f("Yaf_View_Simple::eval", "['string','tpl_content'=>'string','tpl_vars='=>'array']");
f("Yaf_View_Simple::getScriptPath", "['string']");
f("Yaf_View_Simple::__get", "['void','name='=>'string']");
f("Yaf_View_Simple::__isset", "['void','name'=>'string']");
f("Yaf_View_Simple::render", "['string','tpl'=>'string','tpl_vars='=>'array']");
f("Yaf_View_Simple::setScriptPath", "['bool','template_dir'=>'string']");
f("Yaf_View_Simple::__set", "['void','name'=>'string','value'=>'mixed']");
f("yaml_emit_file", "['bool','filename'=>'string','data'=>'','encoding='=>'int','linebreak='=>'int']");
f("yaml_emit", "['string','data'=>'','encoding='=>'int','linebreak='=>'int']");
f("yaml_parse_file", "['','filename'=>'string','pos='=>'int','ndocs='=>'int','callbacks='=>'array']");
f("yaml_parse", "['','input'=>'string','pos='=>'int','ndocs='=>'int','callbacks='=>'array']");
f("yaml_parse_url", "['','url'=>'string','pos='=>'int','ndocs='=>'int','callbacks='=>'array']");
f("Yar_Client::__call", "['void','method'=>'string','parameters'=>'array']");
f("Yar_Client::__construct", "['','url'=>'string']");
f("Yar_Client_Exception::getType", "['void']");
f("Yar_Client::setOpt", "['bool','name'=>'number','value'=>'mixed']");
f("Yar_Concurrent_Client::call", "['int','uri'=>'string','method'=>'string','parameters'=>'array','callback='=>'callable']");
f("Yar_Concurrent_Client::loop", "['bool','callback='=>'callable','error_callback='=>'callable']");
f("Yar_Server::__construct", "['','obj'=>'Object']");
f("Yar_Server_Exception::getType", "['string']");
f("Yar_Server::handle", "['bool']");
f("yaz_addinfo", "['string','id'=>'']");
f("yaz_ccl_conf", "['','id'=>'','config'=>'array']");
f("yaz_ccl_parse", "['bool','id'=>'','query'=>'string','result'=>'array']");
f("yaz_close", "['bool','id'=>'']");
f("yaz_connect", "['','zurl'=>'string','options='=>'']");
f("yaz_database", "['bool','id'=>'','databases'=>'string']");
f("yaz_element", "['bool','id'=>'','elementset'=>'string']");
f("yaz_errno", "['int','id'=>'']");
f("yaz_error", "['string','id'=>'']");
f("yaz_es", "['','id'=>'','type'=>'string','args'=>'array']");
f("yaz_es_result", "['array','id'=>'']");
f("yaz_get_option", "['string','id'=>'','name'=>'string']");
f("yaz_hits", "['int','id'=>'','searchresult='=>'array']");
f("yaz_itemorder", "['','id'=>'','args'=>'array']");
f("yaz_present", "['bool','id'=>'']");
f("yaz_range", "['','id'=>'','start'=>'int','number'=>'int']");
f("yaz_record", "['string','id'=>'','pos'=>'int','type'=>'string']");
f("yaz_scan", "['','id'=>'','type'=>'string','startterm'=>'string','flags='=>'array']");
f("yaz_scan_result", "['array','id'=>'','result='=>'array']");
f("yaz_schema", "['','id'=>'','schema'=>'string']");
f("yaz_search", "['bool','id'=>'','type'=>'string','query'=>'string']");
f("yaz_set_option", "['','id'=>'','name'=>'string','value'=>'string','options'=>'array']");
f("yaz_sort", "['','id'=>'','criteria'=>'string']");
f("yaz_syntax", "['','id'=>'','syntax'=>'string']");
f("yaz_wait", "['','options='=>'array']");
f("yp_all", "['','domain'=>'string','map'=>'string','callback'=>'string']");
f("yp_cat", "['array','domain'=>'string','map'=>'string']");
f("yp_errno", "['int']");
f("yp_err_string", "['string','errorcode'=>'int']");
f("yp_first", "['array','domain'=>'string','map'=>'string']");
f("yp_get_default_domain", "['string']");
f("yp_master", "['string','domain'=>'string','map'=>'string']");
f("yp_match", "['string','domain'=>'string','map'=>'string','key'=>'string']");
f("yp_next", "['array','domain'=>'string','map'=>'string','key'=>'string']");
f("yp_order", "['int','domain'=>'string','map'=>'string']");
f("zend_logo_guid", "['string']");
f("zend_thread_id", "['int']");
f("zend_version", "['string']");
f("ZipArchive::addEmptyDir", "['bool','dirname'=>'string']");
f("ZipArchive::addFile", "['bool','filepath'=>'string','entryname='=>'string','start='=>'int','length='=>'int']");
f("ZipArchive::addFromString", "['bool','entryname'=>'string','content'=>'string']");
f("ZipArchive::addGlob", "['bool','pattern'=>'string','flags='=>'int','options'=>'array']");
f("ZipArchive::addPattern", "['bool','pattern'=>'string','path='=>'string','options='=>'array']");
f("ZipArchive::close", "['bool']");
f("ZipArchive::createEmptyDir", "['bool','dirname'=>'string']");
f("ZipArchive::deleteIndex", "['bool','index'=>'int']");
f("ZipArchive::deleteName", "['bool','name'=>'string']");
f("ZipArchive::extractTo", "['bool','pathto'=>'string','files='=>'string[]|string']");
f("ZipArchive::getArchiveComment", "['string','flags='=>'int']");
f("ZipArchive::getCommentIndex", "['string','index'=>'int','flags='=>'int']");
f("ZipArchive::getCommentName", "['string','name'=>'string','flags='=>'int']");
f("ZipArchive::getExternalAttributesIndex", "['bool','index'=>'int','&opsys'=>'int','&attr'=>'int','flags'=>'int']");
f("ZipArchive::GetExternalAttributesIndex", "['bool','index'=>'int','&opsys'=>'int','&attr'=>'int','flags='=>'int']");
f("ZipArchive::getExternalAttributesName", "['bool','name'=>'string','&opsys'=>'int','&attr'=>'int','flags'=>'int']");
f("ZipArchive::getFromIndex", "['string','index'=>'int','len='=>'int','flags='=>'int']");
f("ZipArchive::getFromName", "['string','entryname'=>'string','len='=>'int','flags='=>'int']");
f("ZipArchive::getNameIndex", "['string','index'=>'int','flags='=>'int']");
f("ZipArchive::getStatusString", "['string']");
f("ZipArchive::getStream", "['resource','entryname'=>'string']");
f("ZipArchive::locateName", "['int','filename'=>'string','flags='=>'int']");
f("ZipArchive::open", "['','source'=>'string','flags='=>'int']");
f("ZipArchive::renameIndex", "['bool','index'=>'int','new_name'=>'string']");
f("ZipArchive::renameName", "['bool','name'=>'string','new_name'=>'string']");
f("ZipArchive::setArchiveComment", "['bool','comment'=>'string']");
f("ZipArchive::setCommentIndex", "['bool','index'=>'int','comment'=>'string']");
f("ZipArchive::setCommentName", "['bool','name'=>'string','comment'=>'string']");
f("ZipArchive::setCompressionIndex", "['bool','index'=>'int','comp_method'=>'int','comp_flags'=>'int']");
f("ZipArchive::setCompressionName", "['bool','name'=>'string','comp_method'=>'int','comp_flags'=>'int']");
f("ZipArchive::setExternalAttributesIndex", "['bool','index'=>'int','opsys'=>'int','attr'=>'int','flags'=>'int']");
f("ZipArchive::setExternalAttributesName", "['bool','name'=>'string','opsys'=>'int','attr'=>'int','flags'=>'int']");
f("ZipArchive::setPassword", "['bool','password'=>'string']");
f("ZipArchive::statIndex", "['array|false','index'=>'int','flags='=>'int']");
f("ZipArchive::statName", "['array|false','filename'=>'string','flags='=>'int']");
f("ZipArchive::unchangeAll", "['bool']");
f("ZipArchive::unchangeArchive", "['bool']");
f("ZipArchive::unchangeIndex", "['bool','index'=>'int']");
f("ZipArchive::unchangeName", "['bool','name'=>'string']");
f("zip_close", "['','zip'=>'']");
f("zip_entry_close", "['bool','zip_ent'=>'']");
f("zip_entry_compressedsize", "['int','zip_entry'=>'']");
f("zip_entry_compressionmethod", "['string','zip_entry'=>'']");
f("zip_entry_filesize", "['int','zip_entry'=>'']");
f("zip_entry_name", "['string','zip_entry'=>'']");
f("zip_entry_open", "['bool','zip_dp'=>'','zip_entry'=>'','mode='=>'string']");
f("zip_entry_read", "['string','zip_entry'=>'','len='=>'int']");
f("zip_open", "['resource','filename'=>'string']");
f("zip_read", "['resource','zip'=>'']");
f("zlib_decode", "['string','data'=>'string','max_decoded_len'=>'int']");
f("zlib_encode", "['string','data'=>'string','encoding'=>'int','level='=>'string|int']");
f("zlib_get_coding_type", "['string|false']");
f("ZMQ::__construct", "['ZMQ']");
f("ZMQContext::__construct", "['ZMQContext','io_threads='=>'int','is_persistent='=>'bool']");
f("ZMQContext::getOpt", "['mixed','key'=>'string']");
f("ZMQContext::getSocket", "['ZMQSocket','type'=>'int','persistent_id='=>'string','on_new_socket='=>'callable']");
f("ZMQContext::isDatabase", "['bool']");
f("ZMQContext::setOpt", "['ZMQContext','key'=>'int','value'=>'mixed']");
f("ZMQDevice::__construct", "['ZMWDevice','frontend'=>'ZMQSocket','backend'=>'ZMQSocket','listener='=>'ZMQSocket']");
f("ZMQDevice::getIdleTimeout", "['ZMQDevice']");
f("ZMQDevice::getTimerTimeout", "['ZMQDevice']");
f("ZMQDevice::run", "['void']");
f("ZMQDevice::setIdleCallback", "['ZMQDevice','cb_func'=>'callable','timeout'=>'int','user_data='=>'mixed']");
f("ZMQDevice::setIdleTimeout", "['ZMQDevice','timeout'=>'int']");
f("ZMQDevice::setTimerCallback", "['ZMQDevice','cb_func'=>'callable','timeout'=>'int','user_data='=>'mixed']");
f("ZMQDevice::setTimerTimeout", "['ZMQDevice','timeout'=>'int']");
f("ZMQPoll::add", "['string','entry'=>'mixed','type'=>'int']");
f("ZMQPoll::clear", "['ZMQPoll']");
f("ZMQPoll::count", "['int']");
f("ZMQPoll::getLastErrors", "['array']");
f("ZMQPoll::poll", "['int','&readable'=>'array','&writable'=>'array','timeout='=>'int']");
f("ZMQPoll::remove", "['bool','item'=>'mixed']");
f("ZMQSocket::bind", "['ZMQSocket','dsn'=>'string','force='=>'bool']");
f("ZMQSocket::connect", "['ZMQSocket','dsn'=>'string','force='=>'bool']");
f("ZMQSocket::__construct", "['ZMQSocket','context'=>'ZMQContext','type'=>'int','persistent_id='=>'string','on_new_socket='=>'callable']");
f("ZMQSocket::disconnect", "['ZMQSocket','dsn'=>'string']");
f("ZMQSocket::getEndpoints", "['array']");
f("ZMQSocket::getDatabaseId", "['string']");
f("ZMQSocket::getSocketType", "['int']");
f("ZMQSocket::getSockOpt", "['mixed','key'=>'string']");
f("ZMQSocket::isDatabase", "['bool']");
f("ZMQSocket::recvMulti", "['string','mode='=>'int']");
f("ZMQSocket::recv", "['string','mode='=>'int']");
f("ZMQSocket::send", "['ZMQSocket','message'=>'array','mode='=>'int']");
f("ZMQSocket::send", "['ZMQSocket','message'=>'string','mode='=>'int']");
f("ZMQSocket::setSockOpt", "['ZMQSocket','key'=>'int','value'=>'mixed']");
f("ZMQSocket::unbind", "['ZMQSocket','dsn'=>'string']");

// alias below
f("key_exists", "['bool','key'=>'string|int','search'=>'array']");
f("sizeof", "['int','var'=>'array|Countable','mode='=>'int']");

}

}